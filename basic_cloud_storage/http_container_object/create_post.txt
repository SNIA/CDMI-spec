.. _ref_http_container_object_create_post:

Create (POST) a new data object using HTTP
******************************************

Synopsis
--------

To create a new data object in a specified container where the name of the data object is a server-assigned object identifier, the following request shall be performed:

    ``POST <root URI>/<ContainerName>/``

Where:


* ``<root URI>`` is the path to the CDMI cloud.
* ``<ContainerName>`` is zero or more intermediate container objects that already exist, with one slash (i.e., "/") between each pair of container object names.


The data object shall be accessible as a child of the container with a server-assigned name and shall also be accessible at ``<root URI>/cdmi_objectid/<objectID>``.

HTTP POST to a container is used to enable CDMI servers to support RFC 1867 :cite:`rfc1867` form-based file uploading. When implementing RFC 1867 :cite:`rfc1867`, the CDMI server-assigned name can be set to, or derived from, the user-provided file name.

Capabilities
------------

Capabilities that indicate which operations are supported are shown in :numref:`tbl_http_data_object_createpost_capabilities`.

.. tabularcolumns:: |>{\raggedright\arraybackslash}\Y{0.35}
                    |>{\raggedright\arraybackslash}\Y{0.20}
                    |>{\raggedright\arraybackslash}\Y{0.45}|

.. _tbl_http_data_object_createpost_capabilities:

.. list-table:: Capabilities - Create a CDMI data object using HTTP POST
    :class: longtable
    :header-rows: 1
    :align: center 

    * - Capability
      - Location
      - Description
    * - cdmi_create_dataobject cdmi_post_dataobject
      - Parent Container
      - Ability to create a new data object
    * - cdmi_post_dataobject_by_ID
      - System Wide Capability
      - Ability to create a data object in ``"/cdmi_objectid/"``
    * - cdmi_create_value_range
      - System Wide Capability
      - Ability to create a data object using a specified byte range
    * - cdmi_create_value_range_by_ID
      - System Wide Capability
      - Ability to create a data object in ``"/cdmi_objectid/"`` using a specified byte range
    * - cdmi_multipart_mime
      - System Wide Capability
      - Ability to create a data object using multi-part MIME

Request headers
---------------

The HTTP request header for creating a new CDMI data object using HTTP is shown in :numref:`tbl_http_data_object_create_request_header`.

.. tabularcolumns:: |>{\raggedright\arraybackslash}\Y{0.20}
                    |>{\raggedright\arraybackslash}\Y{0.10}
                    |>{\raggedright\arraybackslash}\Y{0.55}
                    |>{\raggedright\arraybackslash}\Y{0.15}|

.. _tbl_http_data_object_create_request_header:

.. list-table:: Request header - Create a new data object using HTTP
    :header-rows: 1
    :align: center 

    * - Header
      - Type
      - Description
      - Requirement
    * - Content-Type
      - Header String
      - The content type of the data to be stored as a data object. The value specified here shall be converted to lower case and stored in the mimetype field of the CDMI data object.

        * If the content type includes the charset parameter as defined in RFC 2616 :cite:`rfc2616` of "``utf-8`` (e.g., "``;charset=utf-8``"), the valuetransferencoding field of the CDMI data object shall be set to "``utf-8``". Otherwise, the valuetransferencoding field of the CDMI data object shall be set to "``base64``".
        * If not specified, the mimetype field shall be set to "``application/octet-stream``".
      - Optional
    * - X-CDMI-Partial
      - Header String
      - Indicates that the newly created object is part of a series of writes and has not yet been fully created. When set to "``true``", the ``completionStatus`` field shall be set to "``Processing``". ``X-CDMI-Partial`` works across CDMI and non-CDMI operations.
      - Optional


Request message body 
--------------------

The message body shall contain the contents (value) of the data object to be created.

Response headers
----------------

The HTTP response header for creating a new CDMI data object using HTTP is shown in :numref:`tbl_http_data_object_create_response_header`. 

.. tabularcolumns:: |>{\raggedright\arraybackslash}\Y{0.20}
                    |>{\raggedright\arraybackslash}\Y{0.10}
                    |>{\raggedright\arraybackslash}\Y{0.55}
                    |>{\raggedright\arraybackslash}\Y{0.15}|

.. _tbl_http_data_object_create_response_header:

.. list-table:: Response header - Create a new data object using HTTP
    :header-rows: 1
    :align: center 

    * - Header
      - Type
      - Description
      - Requirement
    * - Location
      - Header string 
      - The unique absolute URI for the new data object as assigned by the system.

        .. raw:: latex

          \vspace*{1ex}

        In the absence of file name information from the client, the system shall assign the URI in the form: ``http://host:port/<root URI>/<ContainerName>/<ObjectID>`` or ``https://host:port/<root URI>/<ContainerName>/<ObjectID>``.
      - Mandatory

Response message body 
---------------------

A response body can be provided as per RFC 2616 :cite:`rfc2616`.

Response status 
---------------

:numref:`tbl_http_data_object_createpost_response_status` describes the HTTP status codes that occur when creating a new data object using HTTP.

.. tabularcolumns:: |>{\raggedright\arraybackslash}\Y{0.30}
                    |>{\raggedright\arraybackslash}\Y{0.70}|

.. _tbl_http_data_object_createpost_response_status:

.. list-table:: HTTP status codes - Create a new data object using HTTP
    :header-rows: 1
    :align: center 

    * - HTTP Status
      - Description
    * - ``201 Created``
      - The new data object was created.
    * - ``400 Bad Request``
      - The request contains invalid parameters or field names.
    * - ``401 Unauthorized``
      - The authentication credentials are missing or invalid.
    * - ``403 Forbidden``
      - The client lacks the proper authorization to perform this request.
    * - ``404 Not Found``
      - The resource was not found at the specified URI.

Examples
--------

EXAMPLE 1: POST to the container object URI the data object contents:

   .. code-block:: none

    POST /cdmi/2.0.0/MyContainer/ HTTP/1.1
    Host: cloud.example.com
    Content-Type: text/plain;charset=utf-8
    
    <object contents>

   The following shows the response.

   .. code-block:: none
   
    HTTP/1.1 201 Created
    Location: https://cloud.example.com/cdmi/2.0.0/MyContainer/00007ED900104E1D14771DC67C27BF8B
    
