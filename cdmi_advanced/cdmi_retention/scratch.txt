



Retention and Hold Management
========================================


Introduction
************************

A cloud storage system may optionally implement retention management disciplines into the system management functionality of the cloud-based storage system. The implementation of retention and hold capabilities is indicated by the presence of the cloud storage system-wide capabilities for retention and hold capabilities.

Retention management includes implementing a retention policy, defining a hold policy to enable objects to be held for specific purposes (e.g., litigation), and defining how the rules for deleting objects are affected by placing either a retention policy and/or a hold on an object. CDMI™ object deletion is not a capability of retention management, per se, but rather is a general system capability. However, this clause describes what happens when placing either a retention policy and/or a hold on an object.

Retention management may be applied to the following object types:


* data objects,
* queue objects, and
* container objects.




Retention Management Disciplines
************************

CDMI retention, deletion, and hold management affect any CDMI client that creates or deletes CDMI objects, as these disciplines mandate how a cloud storage system manages CDMI objects when they are created and until they are deleted. 

CDMI retention management is comprised of three management disciplines: retention, hold, and deletion: 


* CDMI retention uses retention time criteria to determine the time period during which object deletion from the CDMI-based system is prohibited. No changes to the object are allowed, even after the retention period has expired, except as specified below. 
* CDMI hold prohibits object deletion and modification until all holds on the object have been released. 
* A CDMI-based system shall not allow the deletion of a CDMI object before the CDMI retention time criteria are met or while holds exist. Any deletion attempts (e.g., by a CDMI application) shall return an error. 
* After the CDMI retention time criteria have been met and all holds have been released, CDMI retention and holds shall no longer be a reason to prohibit object deletion. 
* Once the retention period has started or if holds exist, changes to the object data and metadata shall not be allowed, with the exception of extensions to the retention and hold data system metadata. The retention data system metadata may be added or the retention period extended, and the hold data system metadata may be added or extended with additional holds. Any other attempt to modify the object shall return an error.




CDMI Retention
************************


Overview
-----

CDMI retention only allows one retention policy to be applied to an object at a time. 

Retention management uses time criteria to determine the time period during which CDMI object deletion from the CDMI-based system shall be prohibited. CDMI retention criteria shall be specified by the following data system metadata:


* a retention criteria identifier—a CDMI client-specified string that shall identify the retention records class (cdmi_retention_id); and
* a retention start time and retention period time—the start time, when used together with period, indicating when retention shall no longer be enforced (cdmi_retention_period).


When a CDMI client attempts to delete an object, the cloud storage system shall evaluate all such retention criteria and return an error, if any retention criteria have not been met.

When copying objects with a retention policy, retention properties shall not be transferred from the source CDMI object to the destination object, and the destination object shall not have a retention policy.

`Object Retention`_ shows how to establish time-based retention with a retention identifier. The value of the object data system metadata for the retention period shall not be reduced.


<H6 CLASS="Figure-Caption">

Object Retention</H6>
</CAPTION>
    * - <H6 CLASS="NoSpace">
 </H6>

<IMG SRC="CDMI_Spec-9.gif" ALT="">

</TABLE>

A specific HTTP error code (403) shall be returned on operations to objects that are under retention period when the cloud storage system attempts to change or delete the object before the retention period criteria are met. 

A cloud storage system shall not prevent metadata changes that increase the retention period, as there are valid business reasons to change a retention period for an object.



Examples
-----

#. Place an existing object under retention:

    .. code-block:: http


    PUT /MyContainer/MyDataObject.txt?metadata:cdmi_retention_id;metadata:cdmi_retention_period HTTP/1.1

    Host: cloud.example.com

    Content-Type: application/cdmi-object

    X-CDMI-Specification-Version: 1.1

     

    {

    	"metadata" : {

    		"cdmi_retention_id" : "1",

    		"cdmi_retention_period" : "2010-04-28T00:00:00.000000Z/2012-04-27T00:00:00.000000Z"

    	}

    }

   The following shows the response.

   .. code-block:: http

    HTTP/1.1 204 No Content


#. Increase the duration of retention on an existing object under retention:

    .. code-block:: http


    PUT /MyContainer/MyDataObject.txt?metadata:cdmi_retention_period HTTP/1.1

    Host: cloud.example.com

    Content-Type: application/cdmi-object

    X-CDMI-Specification-Version: 1.1

     

    {

    	"metadata" : {

    		"cdmi_retention_period" : "2011-04-28T00:00:00.000000Z/2013-04-27T00:00:00.000000Z"

    	}

    }

   The following shows the response.

   .. code-block:: http

    HTTP/1.1 204 No Content


#. Decrease the duration of retention on an existing object under retention:

    .. code-block:: http


    PUT /MyContainer/MyDataObject.txt?metadata:cdmi_retention_period HTTP/1.1

    Host: cloud.example.com

    Content-Type: application/cdmi-object

    X-CDMI-Specification-Version: 1.1

     

    {

    	"metadata" : {

    		"cdmi_retention_period" : "2011-04-28T00:00:00.000000Z/2012-01-27T00:00:00.000000Z"

    	}

    }

   The following shows the response.

   .. code-block:: http

    HTTP/1.1 403 Forbidden





CDMI Hold
************************


Overview
-----

CDMI hold enforces read-only data object access and prohibition of object deletion. A cloud storage system shall allow multiple holds to be applied to a single object to satisfy multiple hold orders. While an object is on hold, a cloud storage system shall strictly enforce read-only access to the object and prohibit object deletion.

When copying objects that are on hold, hold properties shall not be transferred from the source CDMI object to the destination object, and the destination object shall not be on hold.

Hold management uses a hold indicator to determine the time period(s) during which CDMI object revision (data and metadata) and deletion from the CDMI-based system shall be prohibited. CDMI hold criteria shall be specified by data system metadata, specifically, a hold criteria identifier that is a client-specified string that shall identify the holds and their order.

A CDMI client may place an object on hold by adding a hold identifier to the cdmi_hold_id data system metadata item. When an object is on hold, CDMI clients shall be subject to failures or unexpected state changes on operations, which would otherwise be successful if the object was not on hold.

`Object Hold`_ shows how placing a hold on an object affects its read-only and deletion capability.


<H6 CLASS="Figure-Caption">

Object Hold</H6>
</CAPTION>
    * - <H6 CLASS="NoSpace">
 </H6>

<IMG SRC="CDMI_Spec-10.gif" ALT="">

</TABLE>

`Object Hold on Object with Retention`_ shows how to establish time-based retention with a retention identifier that has a hold placed on the object. The value of the object data system metadata for the retention period shall not be reduced, and the value of the object data system metadata for hold identifiers shall not permit holds to be removed. Removing holds is outside the scope of the CDMI international standard.


<H6 CLASS="Figure-Caption">

Object Hold on Object with Retention</H6>
</CAPTION>
    * - <H6 CLASS="NoSpace">
 </H6>

<IMG SRC="CDMI_Spec-11.gif" ALT="">

</TABLE>

`Object with Multiple Holds`_ shows how placing multiple holds on an object affects its read-only and deletion capability.


<H6 CLASS="Figure-Caption">

Object with Multiple Holds</H6>
</CAPTION>
    * - <H6 CLASS="NoSpace">
 </H6>

<IMG SRC="CDMI_Spec-12.gif" ALT="">

</TABLE>

A cloud storage system shall maintain an on-hold object in read-only mode with respect to the application access to data and metadata and shall prohibit deletion, either automated or explicit. 


* CDMI clients shall tolerate these object on-hold failures or state changes.
* Releases from hold are not part of this international standard and are typically performed out of band using an additionally secured non-CDMI mechanism provided by the implementation.


A specific HTTP error code (403) shall be returned on operations to objects that are under a hold when the system attempts to change the object or attempts to delete the object before the hold is removed. This failure should be a an error to the application.



Examples
-----

#. Place an existing object under hold: 

    .. code-block:: http


    PUT /MyContainer/MyDataObject.txt?metadata:cdmi_hold_id HTTP/1.1

    Host: cloud.example.com

    Content-Type: application/cdmi-object

    X-CDMI-Specification-Version: 1.1

     

    {

      "metadata": {

        "cdmi_hold_id": {

           "case_7": ""

        }

      }

    }

   The following shows the response.

   .. code-block:: http

    HTTP/1.1 204 No Content


#. Attempt to remove a hold for an object under hold: 

    .. code-block:: http


    PUT /MyContainer/MyDataObject.txt?metadata:cdmi_hold_id HTTP/1.1

    Host: cloud.example.com

    Content-Type: application/cdmi-object

    X-CDMI-Specification-Version: 1.1

     

    {

      "metadata": {

        "cdmi_hold_id": {}

      }

    }

   The following shows the response.

   .. code-block:: http

    HTTP/1.1 403 Forbidden


#. Add a second hold to an object under hold:

    .. code-block:: http


    PUT /MyContainer/MyDataObject.txt?metadata:cdmi_hold_id HTTP/1.1

    Host: cloud.example.com

    Content-Type: application/cdmi-object

    X-CDMI-Specification-Version: 1.1

     

    {

      "metadata":{

        "cdmi_hold_id": {

           "case_7": "",

           "case_15": ""

       }

     	}

    }

   The following shows the response.

   .. code-block:: http

    HTTP/1.1 204 No Content





CDMI Auto-deletion
************************


Overview
-----

CDMI deletion controls cloud storage system actions with respect to object deletion. A cloud storage system may automatically delete a CDMI object after the retention time and hold criteria have been met. (See `cdmi_retention_autodelete` in :ref:`Data System Metadata`_.)

CDMI objects shall be automatically deleted by the system at the retention period expiration by setting the data system metadata flag cdmi_retention_autodelete. The cdmi_retention_autodelete flag indicates to the system that the object shall be made unavailable for access after the retention criteria have been satisfied. The system shall ensure that the object is no longer available through the CDMI interface. If the system has satisfied the retention requirement and a hold is established for the object, the object shall not be made unavailable or deleted. When a hold and retention have been applied to an object, both need to be satisfied (retention period expired and no holds existing) for objects to be automatically deleted from the system. 

#.  Place an object under retention with autodelete:

    PUT /MyContainer/MyDataObject.txt?metadata:cdmi_retention_period;metadata:cdmi_retention_autodelete HTTP/1.1

    Host: cloud.example.com

    Content-Type: application/cdmi-object

    X-CDMI-Specification-Version: 1.1

     

    {

    	"metadata":{

    		"cdmi_retention_period": "2011-04-28T00:00:00.000000Z/2013-04-27T00:00:00.000000Z",

    		"cdmi_retention_autodelete": "true"

    	}

    }

   The following shows the response.

   .. code-block:: http

    HTTP/1.1 204 No Content





Retention Security Considerations
************************

The accuracy and integrity of the retention start and elapsed times depend on the accuracy and integrity of the clock that is used to set their values. Equally important is the relative accuracy and security of the clock that determines if the retention period has elapsed when compared to the clock that sets the start time property. Relative time differences between these two clocks may lead to undesirable retention and deletion management behavior.

It is important to have a reliable source from which the system clock is set. A stratum 1 time is directly connected to a reference clock and is at the top of the time server hierarchy. Relative time differences between the system clock and the reference clock may lead to undesirable retention timestamps and difficulties with time action events. 

#.  An object is created in a cloud storage system at time 0 with a period of 8 years and autodelete of TRUE. At time 1 year, the system clock is adjusted forward to 9 years. Now, because the system time is 9 years, the retention time criterion is satisfied, even though only 1 year has actually elapsed. And, since autodelete is TRUE, the system automatically deletes the object.

The specification for accuracy and integrity of timekeeping is not within the scope of CDMI. However, to prevent undesirable retention and deletion management consequences, systems should maintain accurate clock time, with zero or minimal deviation to clock integrity.


