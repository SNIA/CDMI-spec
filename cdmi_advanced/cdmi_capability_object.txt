.. _clause_cdmi_capability_object:

Capability object resource operations using CDMI
================================================

Overview
********

Capability objects indicate what specific functionality and operations are supported by a given CDMI server, and allow CDMI clients to discover what subset of this International Standard is implemented.

All CDMI servers shall support capabilities and the ability for CDMI clients to read capabilities.

Each CDMI capability object is represented as a JSON object, containing one or more "fields". For example, the "``capabilities``" field contains specific capability items.

EXAMPLE 1: CDMI capability object

  .. code-block:: none

    {
      "objectType": "application/cdmi-capability",
      "objectID": "00007E7F00104BE66AB53A9572F9F51E",
      "objectName": "cdmi_capabilities/",
      "parentURI": "/",
      "parentID": "00007E7F0010128E42D87EE34F5A6560",
      "capabilities": {
          "cdmi_domains": "true",
          "cdmi_export_nfs": "true",
          "cdmi_export_iscsi": "true",
          "cdmi_queues": "true",
          "cdmi_notification": "true",
          "cdmi_query": "true",
          "cdmi_metadata_maxsize": "4096",
          "cdmi_metadata_maxitems": "1024"
      },
      "childrenrange": "0-3",
      "children": [
        "domain/",
        "container/",
        "dataobject/",
        "queue/"
      ]
    }

The meaning, use, and permitted values of each field is described in :numref:`%s <ref_cdmi_capability_object_read>`.

.. raw:: latex

  \newpage

Capability object addressing
----------------------------

Capability objects are addressed in CDMI in two ways:

* by name (e.g. ``https://cloud.example.com/cdmi/2.0.0/cdmi_capabilities/``); and
* by ID (e.g. ``https://cloud.example.com/cdmi/2.0.0/cdmi_objectid/00007E7F00104BE66AB53A9572F9F51E/``).

Every capability object has a single, globally-unique object ID that remains constant for the life of the object. Each capability object may also have one or more URI addresses that allow the capability object to be accessed.

When a capability object is addressed via more than one unique URIs, all operations may be performed through any of these URIs. For example, a capability object may be accessible via multiple virtual hosting paths, where ``https://cloud.example.com/cdmi/2.0.0/users/snia/cdmi/cdmi_capabilities/`` is also accessible through ``https://snia.example.com/cdmi/2.0.0/cdmi_cabilities/``.

Following the URI conventions for hierarchical paths, capability URIs shall consist of one or more capability names that are separated by forward slashes ("``/``") and that end with a forward slash ("``/``"). 

If a request is performed against an existing capability resource and the trailing slash at the end of the URI is omitted, the server shall respond with an HTTP status code of ``301 Moved Permanently``. In addition, a Location header containing the URI with the trailing slash added shall be returned. 

Capabilities may also be nested.

    EXAMPLE 2: The following URI represents a nested capability:

        ``https://cloud.example.com/cdmi/2.0.0/cdmi_capabilities/container/``

A nested capability has a parent capability object, and shall be included in the children field of the parent capability object. 

Capability object fields
------------------------

Every CDMI object (excluding capability objects) includes a server-generated "``capabilitiesURI``" field that contains the URI of the capabilities object that describes which operations are permitted for that CDMI object.

:numref:`fig_hierarchyofcapabilities` (shown on the next page) shows the hierarchy of capabilities and shows how the capabilitiesURI links data objects, container objects, queue objects and domain objects into the capabilities tree. 

.. _fig_HierarchyofCapabilities:

.. figure:: /images/cdmi_capabilities_hierachy.pdf
    :align:  center
    :figwidth: 100%
   
    Hierarchy of capabilities

System-wide capabilities are described by the root capabilities object, which is accessible at "``<root URI>/cdmi_capabilities/``".

Capabilities cannot be altered by clients, but may be changed by the CDMI server to reflect configuration changes or operational changes. For example, if a CDMI server is upgraded or reconfigured, additional capabilities may become present, or existing capabilties may no longer be present. In practice, capabilities rarely change, and a client can assume that they shall remain constant for the duration of a client-server HTTP/HTTPS session.

Cloud clients should use capabilities to discover what operations are supported. If an operation is attempted on a CDMI object that does not have a corresponding capability, an HTTP status code of ``400 Bad Request`` shall be returned to the client.

The capabilities defined as part of this International Standard are described starting in :numref:`%s <ref_cloud_storage_system-wide_capabilities>`. Vendor-defined capabilities not specified in this International Standard shall not start with "``cdmi_``". 

Capability object metadata
---------------------------

Capability objects do not have metadata.

Capability object access control
--------------------------------

Capability objects are not subject to CDMI ACLs. Any authenticated CDMI client shall be capable of reading all Capability objects [#b]_ .

.. [#b] A CDMI Server may filter the visibility of capability objects and/or capability items for security purposes, for example, to prevent the client discovery of the names and characteristics of classification levels above the client's maximum classification level. Such filtering is out of scope of this International Standard.

Capabilities may differ from the operations permitted by an Access Control List (ACL) (see :numref:`%s <ref_access_control>`) associated with a given object. For example, a read-only cloud may not permit write access to a container or object, despite the presence of an ACL allowing write access.

Queue object consistency
------------------------

Capabilitiy objects are read-only. 

Capability object representations
---------------------------------

The representations in this clause are shown using JSON notation. Both clients and servers shall support UTF-8 JSON representation. The request and response body JSON fields may be specified or returned in any order, with the exception that, if present, for capability objects, the "``childrenrange`` and "``children fields`` shall appear last and in that order. 

.. raw:: latex

  \newpage

.. _ref_cloud_storage_system-wide_capabilities:

Cloud storage system-wide capabilities
--------------------------------------

:numref:`tbl_system_wide_capabilities` defines the system-wide capabilities in a cloud storage system. These capabilities, which are found in the capabilities object, are referred to by the root URI (root capabilities).

.. tabularcolumns:: |>{\raggedright\arraybackslash}\Y{0.35}
                    |>{\raggedright\arraybackslash}\Y{0.15}
                    |>{\raggedright\arraybackslash}\Y{0.50}|

.. _tbl_system_wide_capabilities:

.. list-table:: System-wide capabilities
    :class: longtable
    :header-rows: 1
    :align: center 

    * - Capability name    
      - Type    
      - Definition
    * - cdmi_domains    
      - JSON string    
      - If present and "``true``", the CDMI server supports domains.
      
        .. raw:: latex

          \vspace*{1ex}

        If not present, the domainURI field shall not be present in response bodies and the "``cdmi_domains``" URI shall not be present.
    * - cdmi_export_smb    
      - JSON string    
      - If present and "``true``", the CDMI server supports SMB exports.
    * - cdmi_dataobjects    
      - JSON string    
      - If present and "``true``", the CDMI server supports data objects.
    * - cdmi_export_iscsi    
      - JSON string    
      - If present and "``true``", the CDMI server supports iSCSI exports.
    * - cdmi_export_nfs    
      - JSON string    
      - If present and "``true``", the CDMI server supports NFS protocol exports.
    * - cdmi_export_occi_iscsi    
      - JSON string    
      - If present and "``true``", the CDMI server supports OCCI/iSCSI exports.
    * - cdmi_export_webdav    
      - JSON string    
      - If present and "``true``", the CDMI server supports WebDAV exports.
    * - cdmi_metadata_maxitems    
      - JSON string    
      - If present, this capability indicates the maximum number of user-defined metadata items supported per object.
      
        .. raw:: latex

          \vspace*{1ex}

        If not present, there is no limit placed on the number of user-defined metadata items.
    * - cdmi_metadata_maxsize    
      - JSON string    
      - If present, this capability indicates the maximum size, in bytes, of each user-defined metadata item supported per object.
      
        .. raw:: latex

          \vspace*{1ex}

        If not present, there is no limit placed on the size of user-defined metadata items.
    * - cdmi_metadata_maxtotalsize    
      - JSON string    
      - If present, this capability indicates the maximum size, in bytes, of user-defined metadata supported by the CDMI server.
      
        .. raw:: latex

          \vspace*{1ex}

        If not present, there is no limit placed on the size of user-defined metadata.
    * - cdmi_notification    
      - JSON string    
      - If present and "``true``", the CDMI server supports notification queues.
    * - cdmi_logging    
      - JSON string    
      - If present and "``true``", the CDMI server supports logging queues.
    * - cdmi_query    
      - JSON string    
      - If present and "``true``", the CDMI server supports query queues.
    * - cdmi_query_regex    
      - JSON string    
      - If present and "``true``", the CDMI server supports query with regular expressions.
    * - cdmi_query_contains    
      - JSON string    
      - If present and "``true``", the CDMI server supports query with "contains" expressions.
    * - cdmi_query_tags    
      - JSON string    
      - If present and "``true``", the CDMI server supports query with tag-matching expressions.
    * - cdmi_query_value    
      - JSON string    
      - If present and "``true``", the CDMI server supports query of value fields.
    * - cdmi_queues    
      - JSON string    
      - If present and "``true``", the CDMI server supports queue objects.
    * - cdmi_security_access_control    
      - JSON string    
      - If present and "``true``", the CDMI server supports ACLs. See :numref:`%s <ref_data_system_metadata_capabilities>` for additional information.
    * - cdmi_security_data_integrity    
      - JSON string    
      - If present and "``true``", the CDMI server supports data integrity/authenticity. See :numref:`%s <ref_data_system_metadata_capabilities>` for additional information.
    * - cdmi_security_encryption    
      - JSON string    
      - If present and "``true``", the CDMI server supports data at-rest encryption. See :numref:`%s <ref_data_system_metadata_capabilities>` for additional information.
    * - cdmi_security_immutability    
      - JSON string    
      - If present and "``true``", the CDMI server supports data immutability/retentions. See :numref:`%s <ref_data_system_metadata_capabilities>` for additional information.
    * - cdmi_security_sanitization    
      - JSON string    
      - If present and "``true``", the CDMI server supports data/media sanitization. See :numref:`%s <ref_data_system_metadata_capabilities>` for additional information.
    * - cdmi_serialization_json    
      - JSON string    
      - If present and "``true``", the CDMI server supports JSON as a serialization format.
    * - cdmi_snapshots    
      - JSON string    
      - If present and "``true``", the CDMI server supports snapshots.
    * - cdmi_references    
      - JSON string    
      - If present and "``true``", the CDMI server supports references.
    * - cdmi_object_move_from_local    
      - JSON string    
      - If present and "``true``", the CDMI server supports moving CDMI objects from URIs within the same storage system.
    * - cdmi_object_move_from_remote    
      - JSON string    
      - If present and "``true``", the CDMI server supports moving CDMI objects from URIs within other CDMI storage systems. 
    * - cdmi_object_move_from_ID    
      - JSON string    
      - If present and "``true``", the CDMI server supports moving CDMI objects without a path from a ``/cdmi_objectid/`` URI within the same storage system. This effectively adds a path, allowing the object to be accessed by ID and by path.
    * - cdmi_object_move_to_ID    
      - JSON string    
      - If present and "``true``", the CDMI server supports moving CDMI objects with a path to a ``/cdmi_objectid/`` URI within the same storage system. This effectively removes the path, leaving the object only accessible by ID. 
    * - cdmi_object_copy_from_local    
      - JSON string    
      - If present and "``true``", the CDMI server supports copying CDMI objects from URIs within the same storage system. 
    * - cdmi_object_copy_from_remote    
      - JSON string    
      - If present and "``true``", the CDMI server supports copying CDMI objects from URIs within other CDMI storage systems. 
    * - cdmi_object_access_by_ID    
      - JSON string    
      - If present and "``true``", the CDMI server supports accessing, updating, and deleting objects through ``/cdmi_objectid/``. 
    * - cdmi_post_dataobject_by_ID     
      - JSON string     
      - If present and "``true``", the CDMI server supports adding a new data object by ID via POST to "``/cdmi_objectid/``". 
    * - cdmi_post_queue_by_ID     
      - JSON string     
      - If present and "``true``", the CDMI server supports adding a new queue object by ID via POST to "``/cdmi_objectid/``". 
    * - cdmi_deserialize_dataobject_by_ID     
      - JSON string     
      - If present and "``true``", the CDMI server supports deserializating serialized data objects when creating a new data object by ID via POST to "``/cdmi_objectid/``". 
    * - cdmi_deserialize_queue_by_ID     
      - JSON string     
      - If present and "``true``", the CDMI server supports deserializating serialized queue objects when creating a new queue object by ID via POST to "``/cdmi_objectid/``". 
    * - cdmi_serialize_dataobject_to_ID     
      - JSON string     
      - If present and "``true``", the CDMI server supports serializing data objects when creating a new data object by ID via POST to "``/cdmi_objectid/``". 
    * - cdmi_serialize_domain_to_ID     
      - JSON string     
      - If present and "``true``", the CDMI server supports serializing domain objects when creating a new data object by ID via POST to "``/cdmi_objectid/``". 
    * - cdmi_serialize_container_to_ID     
      - JSON string     
      - If present and "``true``", the CDMI server supports serializing container objects when creating a new data object by ID via POST to "``/cdmi_objectid/``". 
    * - cdmi_serialize_queue_to_ID     
      - JSON string     
      - If present and "``true``", the CDMI server supports serializing queue objects when creating a new data object by ID via POST to "``/cdmi_objectid/``". 
    * - cdmi_copy_dataobject_by_ID     
      - JSON string     
      - If present and "``true``", the CDMI server supports copying an existing data object when creating a new data object by ID via POST to "``/cdmi_objectid/``". 
    * - cdmi_copy_queue_by_ID     
      - JSON string     
      - If present and "``true``", the CDMI server supports copying an existing queue object when creating a new queue object by ID via POST to "``/cdmi_objectid/``". 
    * - cdmi_create_reference_by_ID     
      - JSON string     
      - If present and "``true``", the CDMI server supports creating a new reference via POST to "``/cdmi_objectid/``". 
    * - cdmi_copy_dataobject_from_queue    
      - JSON string    
      - If present and "``true``", the CDMI server supports the ability to copy to a data object from a queue object.
    * - cdmi_multipart_mime    
      - JSON string    
      - If present and "``true``", the CDMI server supports storing and retrieving the value of data and queue objects using multi-part MIME.
    * - cdmi_create_value_range_by_ID    
      - JSON string    
      - If present and "``true``", the CDMI server supports a new data object’s value to be created with byte ranges through "``/cdmi_objectid/``".
    * - cdmi_dac
      - JSON string
      - If present and "``true``", the CDMI server supports delegated access control.      
    * - cdmi_dac_methods
      - JSON array of JSON strings	
      - If present, this capability contains a list of URI schemes supported for DAC URIs, as specified in the IANA URI Schemes registry.
     
        The following schemes shall be supported:
        
            - "https" – mandatory for all DAC implementations

        The following schemes may be supported:

            - "http" – optional for DAC implementations
            - "mailto" – optional for DAC implementations
    * - cdmi_enc_cms 
      - JSON string
      - If present and "``true``", the CDMI server supports operations against the contents of CMS encrypted objects.
    * - cdmi_enc_jwe 
      - JSON string
      - If present and "``true``", the CDMI server supports operations against the contents of JWE encrypted objects.
    * - cdmi_enc_inplace 
      - JSON string
      - If present and "``true``", the CDMI server supports operations to encrypt and decrypt objects in place, including updates.
    * - cdmi_enc_access 
      - JSON string
      - If present and "``true``", the CDMI server supports operations to decrypt objects on access.
    * - cdmi_cms_encryption 
      - JSON array of JSON strings
      - If present, this capability lists which CMS ``ContentEncryptionAlgorithmIdentifier`` encryption algorithms are supported for operations against the contents of CMS encrypted objects.
    * - cdmi_cms_digest 
      - JSON array of JSON strings
      - If present, this capability lists which CMS ``MessageAuthenticationCodeAlgorithm`` digest algorithms are supported for operations against the contents of CMS encrypted objects.
    * - cdmi_cms_signature 
      - JSON array of JSON strings
      - If present, this capability lists which CMS ``SignatureAlgorithmIdentifier`` signature algorithms are supported for operations against the contents of CMS encrypted objects.
    * - cdmi_jwe_enc 
      - JSON array of JSON strings
      - If present, this capability lists which JOSE "``enc``" encryption algorithms are supported for operations against the contents of JWE encrypted objects, as defined in RFC 7518 :cite:`rfc7518`.
    * - cdmi_jwe_alg 
      - JSON array of JSON strings
      - If present, this capability lists which JOSE "``alg``" encryption algorithms are supported for operations against the contents ofJWE encrypted objects, as defined in RFC 7518 :cite:`rfc7518`.
    * - cdmi_jws_alg 
      - JSON array of JSON strings
      - If present, this capability lists which JOSE "``alg``" encryption algorithms are supported for operations against the contents of JWS signatures, as defined in RFC 7518 :cite:`rfc7518`.
    * - cdmi_valuetransferencoding_json    
      - JSON string    
      - If present and "``true``", the CDMI server supports JSON value transfer encodings.

.. raw:: latex

  \newpage

.. _ref_storage_system_metadata_capabilities:

Storage system metadata capabilities
------------------------------------

:numref:`tbl_capabilities_for_storage_system_metadata` defines the capabilities for storage system metadata in a cloud storage system. These capabilities are found in the capabilities objects for domain objects, data objects, container objects, and queue objects. See :numref:`%s <ref_support_for_storage_system_metadata>` for a description of these storage system metadata items.

.. tabularcolumns:: |>{\raggedright\arraybackslash}\Y{0.35}
                    |>{\raggedright\arraybackslash}\Y{0.15}
                    |>{\raggedright\arraybackslash}\Y{0.50}|

.. _tbl_capabilities_for_storage_system_metadata:

.. list-table:: Capabilities for storage system metadata
    :class: longtable
    :header-rows: 1
    :align: center 

    * - Capability name    
      - Type    
      - Definition
    * - cdmi_acl    
      - JSON string    
      - If present and "``true``", the CDMI server supports ACLs. When a CDMI implementation supports ACLs for the purpose of access control, the system-wide capability of ``cdmi_security_access_control`` specified in :numref:`%s <ref_cloud_storage_system-wide_capabilities>` of :numref:`%s <ref_cloud_storage_system-wide_capabilities>` shall also be set to "``true``".
      
        .. raw:: latex

          \vspace*{1ex}

        If not present, there is no support for ACL-based access control.
    * - cdmi_size     
      - JSON string    
      - If present and "``true``", the CDMI server shall generate a ``cdmi_size`` storage system metadata for each stored object.
    * - cdmi_ctime     
      - JSON string    
      - If present and "``true``", the CDMI server shall generate a ``cdmi_ctime`` storage system metadata for each stored object.
    * - cdmi_atime     
      - JSON string    
      - If present and "``true``", the CDMI server shall generate a ``cdmi_atime`` storage system metadata for each stored object.
    * - cdmi_mtime     
      - JSON string    
      - If present and "``true``", the CDMI server shall generate a ``cdmi_mtime`` storage system metadata for each stored object.
    * - cdmi_acount     
      - JSON string    
      - If present and "``true``", the CDMI server shall generate a ``cdmi_acount`` storage system metadata for each stored object.
    * - cdmi_mcount     
      - JSON string    
      - If present and "``true``", the CDMI server shall generate a ``cdmi_mcount`` storage system metadata for each stored object.
    * - cdmi_dac_uri
      - JSON string
      - If present and "``true``", the CDMI server supports delegated access control metadata.
    * - cdmi_dac_certificate
      - JSON string
      - If present and "``true``", the CDMI server supports delegated access control metadata.
    * - cdmi_enc_signature	
      - JSON string	
      - If present and "``true``", the CDMI server shall generate a ``cdmi_signature`` storage system metadata for each stored object when a corresponding ``sign_id`` data system metadata item is present.
    * - cdmi_version_object
      - JSON string
      - If present and "``true``", the CDMI server shall generate a ``cdmi_version_object`` storage system metadata for each version-enabled data object and data object version.
    * - cdmi_version_current
      - JSON string
      - If present and "``true``", the CDMI server shall generate a ``cdmi_version_current`` storage system metadata for each version-enabled data object and data object version.
    * - cdmi_version_oldest
      - JSON array of JSON strings
      - If present and "``true``", the CDMI server shall generate a ``cdmi_version_oldest`` storage system metadata for each version-enabled data object and data object version.
    * - cdmi_version_parent
      - JSON string
      - If present and "``true``", the CDMI server shall generate a ``cdmi_version_parent`` storage system metadata for each data object version that has a previous version.
    * - cdmi_version_children
      - JSON array of JSON strings
      - If present and "``true``", the CDMI server shall generate a ``cdmi_version_children`` storage system metadata for each data object version.

.. raw:: latex

  \newpage

.. _ref_data_system_metadata_capabilities:

Data system metadata capabilities
---------------------------------

:numref:`tbl_capabilities_for_data_system_metadata` defines the capabilities that indicate which data system metadata items are interpreted for objects stored in a cloud storage system. These capabilities are found in the capabilities objects for domains, data objects, containers, and queues. See :numref:`%s <ref_support_for_data_system_metadata>` for a description of the meaning of the corresponding data system metadata items.

.. tabularcolumns:: |>{\raggedright\arraybackslash}\Y{0.35}
                    |>{\raggedright\arraybackslash}\Y{0.15}
                    |>{\raggedright\arraybackslash}\Y{0.50}|

.. _tbl_capabilities_for_data_system_metadata:

.. list-table:: Capabilities for data system metadata
    :class: longtable
    :header-rows: 1
    :align: center 

    * - Capability name    
      - Type    
      - Definition
    * - cdmi_assignedsize    
      - JSON string    
      - If present and "``true``", the CDMI server supports the ``cdmi_assignedsize`` data system metadata as defined in :numref:`%s <ref_support_for_data_system_metadata>`.
    * - cdmi_data_redundancy     
      - JSON string    
      - If present, the CDMI server supports the ``cdmi_data_redundancy`` data system metadata as defined in :numref:`%s <ref_support_for_data_system_metadata>`. The value of the capability shall be set to a positive numeric string representing the maximum value that the server supports.
    * - cdmi_data_dispersion     
      - JSON string    
      - If present and "``true``", the CDMI server supports the ``cdmi_data_dispersion`` data system metadata as defined in :numref:`%s <ref_support_for_data_system_metadata>`.
    * - cdmi_data_retention     
      - JSON string    
      - If present and "``true``", the CDMI server supports both the ``cdmi_retention_id`` and ``cdmi_retention_period`` data system metadata as defined in :numref:`%s <ref_support_for_data_system_metadata>`. 
    * - cdmi_data_autodelete     
      - JSON string
      - If present and "``true``", the CDMI server supports the ``cdmi_data_autodelete`` data system metadata as defined in :numref:`%s <ref_support_for_data_system_metadata>`. 
    * - cdmi_data_holds     
      - JSON string    
      - If present and "``true``", the CDMI server supports the ``cdmi_hold_id`` data system metadata as defined in :numref:`%s <ref_support_for_data_system_metadata>`.
      
        .. raw:: latex

          \vspace*{1ex}

        When a cloud storage system supports holds for the purpose of making data immutable, the system-wide capability of ``cdmi_security_immutability`` specified in :numref:`tbl_system_wide_capabilities` of :numref:`%s <ref_cloud_storage_system-wide_capabilities>` shall be present and set to "``true``".
    * - cdmi_encryption     
      - JSON array of JSON strings    
      - If present, the CDMI server supports the ``cdmi_encryption`` data system metadata as defined in :numref:`%s <ref_support_for_data_system_metadata>`.
      
        .. raw:: latex

          \vspace*{1ex}

        When present, this capability shall contain one or more JSON strings, each string corresponding to an algorithm/mode/length value as described in the ``cdmi_encryption`` data system metadata in :numref:`%s <ref_support_for_data_system_metadata>`.
      
        .. raw:: latex

          \vspace*{1ex}

        When a cloud storage system supports at-rest encryption, the system-wide capability of ``cdmi_security_encryption`` specified in :numref:`tbl_system_wide_capabilities` of :numref:`%s <ref_cloud_storage_system-wide_capabilities>` shall be present and set to "``true``".
    * - cdmi_geographic_placement    
      - JSON string    
      - If present and "``true``", the CDMI server supports the ``cdmi_geographic_placement`` data system metadata as defined in :numref:`%s <ref_support_for_data_system_metadata>`.
    * - cdmi_immediate_redundancy    
      - JSON string    
      - If present, the CDMI server supports the ``cdmi_immediate_redundancy`` data system metadata as defined in :numref:`%s <ref_support_for_data_system_metadata>`.
      
        .. raw:: latex

          \vspace*{1ex}

        When present, this capability shall contain a string set to a positive numeric string representing the maximum value that the server supports. 
    * - cdmi_infrastructure_redundancy    
      - JSON string    
      - If present, the CDMI server supports the ``cdmi_infrastructure_redundancy`` data system metadata as defined in :numref:`%s <ref_support_for_data_system_metadata>`. 
      
        .. raw:: latex

          \vspace*{1ex}

        When present, this capability shall contain a string set to a positive numeric string representing the maximum value that the server supports.
    * - cdmi_latency     
      - JSON string    
      - If present and "``true``", the CDMI server supports the ``cdmi_latency`` data system metadata as defined in :numref:`%s <ref_support_for_data_system_metadata>`. 
    * - cdmi_RPO     
      - JSON string    
      - If present and "``true``", the CDMI server supports the cdmi_RPO data system metadata as defined in :numref:`%s <ref_support_for_data_system_metadata>`.
    * - cdmi_RTO     
      - JSON string    
      - If present and "``true``", the CDMI server supports the ``cdmi_RTO`` data system metadata as defined in :numref:`%s <ref_support_for_data_system_metadata>`
    * - cdmi_sanitization_method     
      - JSON array of JSON strings    
      - If present, the CDMI server supports the ``cdmi_sanitization_method`` data system metadata as defined in :numref:`%s <ref_support_for_data_system_metadata>`.
      
        .. raw:: latex

          \vspace*{1ex}

        When present, this capability shall contain one or more JSON strings, each string corresponding to a sanitization method as described in the ``cdmi_sanitization_method`` data system metadata in :numref:`%s <ref_support_for_data_system_metadata>`.
      
        .. raw:: latex

          \vspace*{1ex}

        When a cloud storage system supports sanitization, the system-wide capability of ``cdmi_security_sanitization`` specified in :numref:`tbl_system_wide_capabilities` of :numref:`%s <ref_cloud_storage_system-wide_capabilities>` shall be present and set to "``true``".
    * - cdmi_throughput     
      - JSON string    
      - If present and "``true``", the CDMI server supports the cdmi_throughput data system metadata as defined in :numref:`%s <ref_support_for_data_system_metadata>`. 
    * - cdmi_value_hash     
      - JSON array of JSON strings    
      - If present, the CDMI server supports the cdmi_value_hash data system metadata as defined in :numref:`%s <ref_support_for_data_system_metadata>`.
      
        .. raw:: latex

          \vspace*{1ex}

        When present, this capability shall contain one or more JSON strings, each string corresponding to an algorithm/length value as described in the ``cdmi_value_hash`` data system metadata in :numref:`%s <ref_support_for_data_system_metadata>`.
      
        .. raw:: latex

          \vspace*{1ex}

        When a cloud storage system supports value hashing, the system-wide capability of ``cdmi_security_data_integrity`` specified in :numref:`tbl_system_wide_capabilities` of :numref:`%s <ref_cloud_storage_system-wide_capabilities>` shall be present and set to "``true``". 
    * - cdmi_enc_key_id	
      - JSON string	
      - When the cloud storage system supports the ``cdmi_enc_key_id`` data system metadata as defined in :numref:`clause %s <ref_support_for_data_system_metadata>`, the ``cdmi_enc_key_id`` capability shall be present and set to the string value "``true``". When this capability is absent, or present and set to the string value "``false``", ``cdmi_enc_key_id`` data system metadata shall not be used.
    * - cdmi_enc_value_sign_id	
      - JSON string	
      - When the cloud storage system supports the ``cdmi_enc_value_sign_id`` data system metadata as defined in :numref:`clause %s <ref_support_for_data_system_metadata>`, the ``cdmi_enc_value_sign_id`` capability shall be present and set to the string value "``true``". When this capability is absent, or present and set to the string value "``false``", ``cdmi_enc_value_sign_id`` data system metadata shall not be used.
    * - cdmi_enc_value_verify_id	
      - JSON string	
      - When the cloud storage system supports the ``cdmi_enc_value_verify_id`` data system metadata as defined in :numref:`clause %s <ref_support_for_data_system_metadata>`, the ``cdmi_enc_value_verify_id`` capability shall be present and set to the string value "``true``". When this capability is absent, or present and set to the string value "``false``", ``cdmi_enc_value_verify_id`` data system metadata shall not be used.
    * - cdmi_enc_object_sign_id	
      - JSON string	
      - When the cloud storage system supports the ``cdmi_enc_object_sign_id`` data system metadata as defined in :numref:`clause %s <ref_support_for_data_system_metadata>`, the ``cdmi_enc_object_sign_id`` capability shall be present and set to the string value "``true``". When this capability is absent, or present and set to the string value "``false``", ``cdmi_enc_object_sign_id`` data system metadata shall not be used.
    * - cdmi_enc_object_verify_id	
      - JSON string	
      - When the cloud storage system supports the ``cdmi_enc_object_verify_id`` data system metadata as defined in :numref:`clause %s <ref_support_for_data_system_metadata>`, the ``cdmi_enc_object_verify_id`` capability shall be present and set to the string value "``true``". When this capability is absent, or present and set to the string value "``false``", ``cdmi_enc_object_verify_id`` data system metadata shall not be used.
    * - cdmi_versioning 
      - JSON array of JSON strings
      - If present, this capability indicates that the cloud storage system shall support versioning of data objects and contains a list of which versioning behaviors are supported. The following values are defined:

        * "value" indicates that the system shall support the versioning of the object value.
        * "user" indicates that the system shall support the versioning of the object value and user metadata.
        * "all" indicates that the system shall support the versioning of all updates made to a data object.

        When present, the system shall support the following storage system metadata: ``cdmi_version_object``, ``cdmi_version_current``, ``cdmi_version_oldest``, ``cdmi_version_parent``, and ``cdmi_version_children`` as indicated by the corresponding storage system metadata capabilities.
    * - cdmi_versions_count 
      - JSON string
      - If present, this capability specifies the maximum number of historical versions that may be specified. If absent, restrictions on the number of historical versions specified shall be ignored.
    * - cdmi_version_age 
      - JSON string
      - If present, this capability specifies the maximum age of historical versions that may be specified. If absent, restrictions on the age of historical versions specified shall be ignored.
    * - cdmi_versions_size 
      - JSON string
      - If present, this capability specifies the maximum total size of historical versions that may be specified. If absent, restrictions on the size of historical versions specified shall be ignored.

.. raw:: latex

  \newpage

.. _ref_cdata_object_capabilities:

Data object capabilities
------------------------

:numref:`tbl_capabilities_for_data_objects` defines the capabilities for data objects in a cloud storage system.

.. tabularcolumns:: |>{\raggedright\arraybackslash}\Y{0.35}
                    |>{\raggedright\arraybackslash}\Y{0.15}
                    |>{\raggedright\arraybackslash}\Y{0.50}|

.. _tbl_capabilities_for_data_objects:

.. list-table:: Capabilities for data objects
    :class: longtable
    :header-rows: 1
    :align: center 

    * - Capability name    
      - Type    
      - Definition
    * - cdmi_read_value     
      - JSON string    
      - If present and "``true``", this capability indicates that the CDMI server shall support the ability to read the object’s value.
    * - cdmi_read_value_range     
      - JSON string    
      - If present and "``true``", this capability indicates that the CDMI server shall support the ability to read the object’s value with byte ranges.
    * - cdmi_read_metadata     
      - JSON string    
      - If present and "``true``", this capability indicates that the CDMI server shall support the ability to read the object’s metadata.
    * - cdmi_modify_value     
      - JSON string    
      - If present and "``true``", this capability indicates that the CDMI server shall support the ability to modify the object’s value.
    * - cdmi_modify_value_range     
      - JSON string    
      - If present and "``true``", this capability indicates that the CDMI server shall support the ability to modify the object’s value with byte ranges.
    * - cdmi_modify_metadata     
      - JSON string    
      - If present and "``true``", this capability indicates that the CDMI server shall support the ability to modify the object’s metadata.
    * - cdmi_modify_deserialize_dataobject    
      - JSON string    
      - If present and "``true``", this capability indicates that the CDMI server shall support the ability of the data object to deserialize a serialized data object into the data object as an update.
    * - cdmi_delete_dataobject     
      - JSON string    
      - If present and "``true``", this capability indicates that the CDMI server shall support the ability to delete the object. 

.. raw:: latex

  \newpage

.. _ref_container_capabilities:

Container object capabilities
-----------------------------

:numref:`tbl_capabilities_for_containers` defines the capabilities for containers in a cloud storage system.

.. tabularcolumns:: |>{\raggedright\arraybackslash}\Y{0.35}
                    |>{\raggedright\arraybackslash}\Y{0.15}
                    |>{\raggedright\arraybackslash}\Y{0.50}|

.. _tbl_capabilities_for_containers:

.. list-table:: Capabilities for container objects
    :class: longtable
    :header-rows: 1
    :align: center 

    * - Capability name    
      - Type    
      - Definition
    * - cdmi_list_children     
      - JSON string    
      - If present and "``true``", this capability indicates that the CDMI server shall support the ability to list the container’s children.
    * - cdmi_list_children_range     
      - JSON string    
      - If present and "``true``", this capability indicates that the CDMI server shall support the ability to list the container’s children with ranges.
    * - cdmi_read_metadata     
      - JSON string    
      - If present and "``true``", this capability indicates that the CDMI server shall support the ability to read the container’s metadata.
    * - cdmi_modify_metadata     
      - JSON string    
      - If present and "``true``", this capability indicates that the CDMI server shall support the ability to modify the container’s metadata.
    * - cdmi_modify_deserialize_container    
      - JSON string    
      - If present and "``true``", this capability indicates that the CDMI server shall support the ability of the container object to deserialize a serialized container object into the container object as an update.
    * - cdmi_snapshot     
      - JSON string    
      - If present and "``true``", this capability indicates that the CDMI server shall support the ability of the container object to create a new snapshot.
    * - cdmi_serialize_dataobject     
      - JSON string    
      - If present and "``true``", this capability indicates that the CDMI server shall support the ability to serialize a data object.
    * - cdmi_serialize_container     
      - JSON string    
      - If present and "``true``", this capability indicates that the CDMI server shall support the ability to serialize the container and all children’s contents.
    * - cdmi_serialize_queue     
      - JSON string    
      - If present and "``true``", this capability indicates that the CDMI server shall support the ability to serialize a queue object.
    * - cdmi_serialize_domain    
      - JSON string    
      - If present and "``true``", this capability indicates that the CDMI server shall support the ability to serialize the domain and all child domains. 
    * - cdmi_deserialize_container    
      - JSON string    
      - If present and "``true``", this capability indicates that the CDMI server shall support the ability of the container to deserialize the serialized containers and associated serialized children into the container.
    * - cdmi_deserialize_queue     
      - JSON string    
      - If present and "``true``", this capability indicates that the CDMI server shall support the ability of the container to deserialize the serialized queue objects into the container.
    * - cdmi_deserialize_dataobject     
      - JSON string    
      - If present and "``true``", this capability indicates that the CDMI server shall support the ability of the container to deserialize the serialized data objects into the container.
    * - cdmi_create_dataobject     
      - JSON string    
      - If present and "``true``", this capability indicates that the CDMI server shall support the ability of the container to add a new data object.
    * - cdmi_post_dataobject     
      - JSON string    
      - If present and "``true``", this capability indicates that the CDMI server shall support the ability of the container to add a new data object via POST.
    * - cdmi_post_queue     
      - JSON string    
      - If present and "``true``", this capability indicates that the CDMI server shall support the ability of the container to add a new queue object via POST.
    * - cdmi_create_container     
      - JSON string    
      - If present and "``true``", this capability indicates that the CDMI server shall support the ability to create a new container object via PUT.
    * - cdmi_create_queue     
      - JSON string    
      - If present and "``true``", this capability indicates that the CDMI server shall support the ability to create new queue objects..
    * - cdmi_create_reference     
      - JSON string    
      - If present and "``true``", this capability indicates that the CDMI server shall support the ability to create a new child reference via PUT.
    * - cdmi_export_container_smb    
      - JSON string    
      - If present and "``true``", this capability indicates that the CDMI server shall support the ability to export a container as a file system via SMB.
    * - cdmi_export_container_nfs    
      - JSON string    
      - If present and "``true``", this capability indicates that the CDMI server shall support the ability to export a container as a file system via NFS.
    * - cdmi_export_container_iscsi    
      - JSON string    
      - If present and "``true``", this capability indicates that the CDMI server shall support the ability to export a container as a file system via iSCSI.
    * - cdmi_export_container_occi    
      - JSON string    
      - If present and "``true``", this capability indicates that the CDMI server shall support the ability to export a container as a file system via OCCI.
    * - cdmi_export_container_webdav    
      - JSON string    
      - If present and "``true``", this capability indicates that the CDMI server shall support the ability to export a container as a file system via WebDAV.
    * - cdmi_delete_container     
      - JSON string    
      - If present and "``true``", this capability indicates that the CDMI server shall support the ability to delete a container.
    * - cdmi_move_container     
      - JSON string    
      - If present and "``true``", this capability indicates that the CDMI server shall support the ability to move a container object into a container.
    * - cdmi_copy_container     
      - JSON string    
      - If present and "``true``", this capability indicates that the CDMI server shall support the ability to copy a container object into a container.
    * - cdmi_move_dataobject    
      - JSON string    
      - If present and "``true``", this capability indicates that the CDMI server shall support the ability to move a data object into a container.
    * - cdmi_copy_dataobject    
      - JSON string    
      - If present and "``true``", this capability indicates that the CDMI server shall support the ability to copy a data object into a container.
    * - cdmi_create_value_range    
      - JSON string    
      - If present and "``true``", this capability indicates that the container allows a new data object’s value to be created with byte ranges.

.. raw:: latex

  \newpage

.. _ref_domain_capabilities:

Domain object capabilities
--------------------------

:numref:`tbl_capabilities_for_domain_objects` defines the capabilities for domains in a cloud storage system. (All capabilities refer to what may be done via CDMI content-type operations.  

.. tabularcolumns:: |>{\raggedright\arraybackslash}\Y{0.35}
                    |>{\raggedright\arraybackslash}\Y{0.15}
                    |>{\raggedright\arraybackslash}\Y{0.50}|

.. _tbl_capabilities_for_domain_objects:

.. list-table:: Capabilities for domain objects
    :class: longtable
    :header-rows: 1
    :align: center 

    * - Capability name    
      - Type    
      - Definition
    * - cdmi_create_domain    
      - JSON string    
      - If present and "``true``", this capability indicates that the CDMI server shall support the ability to add a new subdomain.
    * - cdmi_delete_domain    
      - JSON string    
      - If present and "``true``", this capability indicates that the CDMI server shall support the ability to delete a domain.
    * - cdmi_move_domain    
      - JSON string    
      - If present and "``true``", this capability indicates that the CDMI server shall support the ability to move a domain.
    * - cdmi_domain_summary    
      - JSON string    
      - If present and "``true``", this capability indicates that the CDMI server shall support the ability to support domain summaries.
    * - cdmi_domain_members     
      - JSON string    
      - If present and "``true``", this capability indicates that the CDMI server shall support the ability to support domain user management.
    * - cdmi_list_children     
      - JSON string    
      - If present and "``true``", this capability indicates that the CDMI server shall support the ability to list the domain's children.
    * - cdmi_read_metadata     
      - JSON string    
      - If present and "``true``", this capability indicates that the CDMI server shall support the ability to read the domain's metadata.
    * - cdmi_modify_metadata     
      - JSON string    
      - If present and "``true``", this capability indicates that the CDMI server shall support the ability to modify the domain's metadata.
    * - cdmi_modify_deserialize_domain    
      - JSON string    
      - If present and "``true``", this capability indicates that the CDMI server shall support the ability to deserialize a serialized domain object into the domain object as an update.
    * - cdmi_copy_domain     
      - JSON string    
      - If present and "``true``", this capability indicates that the CDMI server shall support the ability to copy the domain (via PUT) to another URI.
    * - cdmi_deserialize_domain    
      - JSON string    
      - If present and "``true``", this capability indicates that the CDMI server shall support the ability to deserialize serialized domains and associated serialized children into the domain.
    * - cdmi_authentication_methods    
      - JSON array of JSON strings    
      - If present, the CDMI server supports authentication methods that are supported by a domain.
      
        .. raw:: latex

          \vspace*{1ex}

        When present, this capability shall contain one or more of the following JSON strings: 

        * "anonymous" - Absence of authentication supported 
        * "basic" - HTTP basic authentication supported (RFC 2617 :cite:`rfc2617`) 
        * "digest" - HTTP digest authentication supported (RFC 2617 :cite:`rfc2617`) 
        * "krb5" - Kerberos authentication supported, using the Kerberos domain specified in the CDMI domain (RFC 4559 :cite:`rfc4559`) 
        * "x509" - certificate-based authentication via TLS (RFC 5246 :cite:`rfc5246`, RFC 8446 :cite:`rfc8446`) 
        * "s3" - S3 API signed header authentication supported 
        * "openstack" - OpenStack Identity API header authentication supported
      
        .. raw:: latex

          \vspace*{1ex}

        Interoperability with these authentication methods are not defined by this International Standard. Servers may include other authentication methods not included in the above list. In these cases, it is up to the CDMI client and CDMI server to ensure interoperability.

.. raw:: latex

  \newpage

.. _ref_queue_capabilities:

Queue object capabilities
-------------------------

:numref:`tbl_capabilities_for_queue_objects` defines the capabilities for queue objects in a cloud storage system.

.. tabularcolumns:: |>{\raggedright\arraybackslash}\Y{0.35}
                    |>{\raggedright\arraybackslash}\Y{0.15}
                    |>{\raggedright\arraybackslash}\Y{0.50}|

.. _tbl_capabilities_for_queue_objects:

.. list-table:: Capabilities for queue objects
    :class: longtable
    :header-rows: 1
    :align: center 

    * - Capability name    
      - Type    
      - Definition
    * - cdmi_read_value     
      - JSON string    
      - If present and "``true``", this capability indicates that the CDMI server shall support the ability to read a queue's value.
    * - cdmi_read_metadata     
      - JSON string    
      - If present and "``true``", this capability indicates that the CDMI server shall support the ability to read the queue's metadata.
    * - cdmi_modify_value     
      - JSON string    
      - If present and "``true``", this capability indicates that the CDMI server shall support the ability to modify the queue's value.
    * - cdmi_modify_metadata     
      - JSON string    
      - If present and "``true``", this capability indicates that the CDMI server shall support the ability to modify the queue's metadata.
    * - cdmi_modify_deserialize_queue    
      - JSON string    
      - If present and "``true``", this capability indicates that the CDMI server shall support the ability to deserialize a serialized queue into the queue as an update.
    * - cdmi_delete_queue     
      - JSON string    
      - If present and "``true``", this capability indicates that the CDMI server shall support the ability to delete a queue.
    * - cdmi_move_queue     
      - JSON string    
      - If present and "``true``", this capability indicates that the CDMI server shall support the ability to move a queue to another URI.
    * - cdmi_copy_queue     
      - JSON string    
      - If present and "``true``", this capability indicates that the CDMI server shall support the ability to copy a queue to another URI.
    * - cdmi_reference_queue     
      - JSON string    
      - If present and "``true``", this capability indicates that the CDMI server shall support the ability to reference a queue  from another queue.


.. _ref_cdmi_capability_object_read:

Read a capabilities object using CDMI
*************************************

Synopsis 
--------

To read an existing capability object, the following requests shall be performed:

* ``GET <root URI>/cdmi_capabilities/<Capability>/<TheCapability>/``
* ``GET <root URI>/cdmi_capabilities/<Capability>/<TheCapability>/?<fieldname>&<fieldname>&...``
* ``GET <root URI>/cdmi_capabilities/<Capability>/<TheCapability>/?children=<range>&...``
* ``GET <root URI>/cdmi_objectid/<CapabilityObjectID>/``
* ``GET <root URI>/cdmi_objectid/<CapabilityObjectID>/?<fieldname>&<fieldname>&...``
* ``GET <root URI>/cdmi_objectid/<CapabilityObjectID>/?children=<range>&...``

Where:

* ``<root URI>`` is the path to the CDMI cloud.
* ``<Capability>`` is zero or more parent capabilities.
* ``<TheCapability>`` is the name specified for the capability to be read from.
* ``<fieldname>`` is the name of a field.
* ``<range>`` is a numeric range within the list of children.
* ``<prefix>`` is a matching prefix that returns all metadata items that start with the prefix value.
* ``<CapabilityObjectID>`` is the ID of the capability object to be read from.

Capabilities 
------------

Capabilities that indicate which operations are supported are shown in :numref:`tbl_cdmi_capability_object_read_capabilities`.

.. tabularcolumns:: |>{\raggedright\arraybackslash}\Y{0.35}
                    |>{\raggedright\arraybackslash}\Y{0.20}
                    |>{\raggedright\arraybackslash}\Y{0.45}|

.. _tbl_cdmi_capability_object_read_capabilities:

.. list-table:: Capabilities - Read a capabilities object using CDMI
    :class: longtable
    :header-rows: 1
    :align: center 

    * - Capability
      - Location
      - Description
    * - cdmi_object_access_by_ID
      - System wide capability
      - Ability to access the object by ID

Request headers
---------------

The HTTP request headers for reading a CDMI capabilities object using CDMI are shown in :numref:`tbl_cdmi_capability_object_read_request_headers`. 

.. tabularcolumns:: |>{\raggedright\arraybackslash}\Y{0.20}
                    |>{\raggedright\arraybackslash}\Y{0.10}
                    |>{\raggedright\arraybackslash}\Y{0.55}
                    |>{\raggedright\arraybackslash}\Y{0.15}|

.. _tbl_cdmi_capability_object_read_request_headers:

.. list-table:: Request headers - Read a capabilities object using CDMI
    :class: longtable
    :header-rows: 1
    :align: center 

    * - Header    
      - Type    
      - Description    
      - Requirement
    * - Accept    
      - Header string    
      - "``application/cdmi-capability``" or a consistent value as described in :numref:`%s <ref_content-type_negotiation>`    
      - Optional

Request message body 
--------------------

A request body shall not be provided.

Response headers
----------------

The HTTP response headers for reading a CDMI capabilities object using CDMI are shown in :numref:`tbl_cdmi_capability_object_read_response_headers`.

.. tabularcolumns:: |>{\raggedright\arraybackslash}\Y{0.20}
                    |>{\raggedright\arraybackslash}\Y{0.10}
                    |>{\raggedright\arraybackslash}\Y{0.55}
                    |>{\raggedright\arraybackslash}\Y{0.15}|

.. _tbl_cdmi_capability_object_read_response_headers:

.. list-table:: Response headers - Read a capabilities object Using CDMI
    :class: longtable
    :header-rows: 1
    :align: center 

    * - Header    
      - Type    
      - Description    
      - Requirement
    * - Content-Type    
      - Header string    
      - "``application/cdmi-capability``"    
      - Mandatory

Response message body
---------------------

The response message body fields for reading a CDMI capabilities object using CDMI are shown in :numref:`tbl_cdmi_capability_object_read_response_message_body`.

.. tabularcolumns:: |>{\raggedright\arraybackslash}\Y{0.20}
                    |>{\raggedright\arraybackslash}\Y{0.10}
                    |>{\raggedright\arraybackslash}\Y{0.55}
                    |>{\raggedright\arraybackslash}\Y{0.15}|

.. _tbl_cdmi_capability_object_read_response_message_body:

.. list-table:: Response message body - Read a capabilities object using CDMI
    :class: longtable
    :header-rows: 1
    :align: center 

    * - Field name    
      - Type    
      - Description    
      - Requirement
    * - objectType    
      - JSON string    
      - "``application/cdmi-capability``"    
      - Mandatory
    * - objectID    
      - JSON string    
      - Object ID of the object    
      - Mandatory
    * - objectName    
      - JSON string    
      - Name of the object    
      - Mandatory
    * - parentURI
      - JSON string
      - URI for the parent object
      
        .. raw:: latex

          \vspace*{1ex}

        Appending the "``objectName``" to the "``parentURI``" shall always produce a valid URI for the object. 
      - Mandatory
    * - parentID    
      - JSON string    
      - Object ID of the parent capability object.
      - Mandatory
    * - capabilities    
      - JSON object    
      - The capabilities supported by the corresponding object.
      
        .. raw:: latex

          \vspace*{1ex}

        Capabilities in the "``/cdmi_capabilities/``" object are system-wide capabilities. Capabilities found in children objects under "``/cdmi_capabilities/``" correspond to the capabilities of a specific subset of objects.
      - Mandatory
    * - childrenrange    
      - JSON string     
      - The child capabilities of the capability expressed as a range. If a range of child capabilities is requested, this field indicates the children returned as a range.    
      - Mandatory
    * - children    
      - JSON array of JSON strings    
      - Names of the children capabilities objects.
      
        .. raw:: latex

          \vspace*{1ex}

        For the root container capabilities, this includes "``domain/``", "``container/``", "``dataobject/``", and "``queue/``". Within each of these capabilities objects, further more specialized capabilities profiles may be specified by the CDMI server.    
      - Mandatory

If individual fields are specified in the GET request, only these fields are returned in the result body. Optional fields that are requested but do not exist are omitted from the result body.

Response status
---------------

:numref:`tbl_cdmi_capability_object_read_response_status` describes the HTTP status codes that occur when reading a capabilities object using CDMI. 

.. tabularcolumns:: |>{\raggedright\arraybackslash}\Y{0.30}
                    |>{\raggedright\arraybackslash}\Y{0.70}|

.. _tbl_cdmi_capability_object_read_response_status:

.. list-table:: HTTP status codes - Read a capabilities object using CDMI
    :header-rows: 1
    :align: center 

    * - HTTP status    
      - Description
    * - ``200 OK``
      - The capabilities object content was returned in the response.
    * - ``400 Bad Request``
      - The request contains invalid parameters or field names.
    * - ``401 Unauthorized``
      - The authentication credentials are missing or invalid.
    * - ``403 Forbidden``
      - The client lacks the proper authorization to perform this request.
    * - ``404 Not Found``
      - The resource was not found at the specified URI.
    * - ``406 Not Acceptable``
      - The server is unable to provide the object in the content type specified in the Accept header.

Examples
--------

EXAMPLE 1: GET to the root container capabilities URI to read all fields of the container:

    .. code-block:: none

        GET /cdmi/2.0.0/cdmi_capabilities/ HTTP/1.1
        Host: cloud.example.com
        Accept: application/cdmi-capability

    The following shows the response.

    .. code-block:: none

        HTTP/1.1 200 OK
        Content-Type: application/cdmi-capability
         
        {
            "objectType": "application/cdmi-capability",
            "objectID": "00007E7F00104BE66AB53A9572F9F51E",
            "objectName": "cdmi_capabilities/",
            "parentURI": "/",
            "parentID": "00007E7F0010128E42D87EE34F5A6560",
            "capabilities": {
                "cdmi_domains": "true",
                "cdmi_export_nfs": "true",
                "cdmi_export_iscsi": "true",
                "cdmi_queues": "true",
                "cdmi_notification": "true",
                "cdmi_query": "true",
                "cdmi_metadata_maxsize": "4096",
                "cdmi_metadata_maxitems": "1024"
            },
            "childrenrange": "0-3",
            "children": [
                "domain/",
                "container/",
                "dataobject/",
                "queue/"
            ]
        }

        
EXAMPLE 2: GET to the root container capabilities URI to read the capabilities and children of the container:

    .. code-block:: none

        GET /cdmi/2.0.0/cdmi_capabilities/?capabilities&children HTTP/1.1
        Host: cloud.example.com
        Accept: application/cdmi-capability

    The following shows the response.

    .. code-block:: none

        HTTP/1.1 200 OK
        Content-Type: application/cdmi-capability
         
        {
            "capabilities": {
                "cdmi_domains": "true",
                "cdmi_export_nfs": "true",
                "cdmi_export_iscsi": "true",
                "cdmi_queues": "true",
                "cdmi_notification": "true",
                "cdmi_query": "true",
                "cdmi_metadata_maxsize": "4096",
                "cdmi_metadata_maxitems": "1024"
            },
            "children": [
                "domain/",
                "container/",
                "dataobject/",
                "queue/"
            ]
        }

EXAMPLE 3: GET to the root container capabilities URI to read the first two children contained within a domain:

    .. code-block:: none

        GET /cdmi/2.0.0/cdmi_capabilities/?childrenrange&children=0-1 HTTP/1.1
        Host: cloud.example.com
        Accept: application/cdmi-capability

    The following shows the response.

    .. code-block:: none

        HTTP/1.1 200 OK
        Content-Type: application/cdmi-capability
         
        {
            "childrenrange" : "0-1",
            "children" : [
                "domain/",
                "container/" 
            ]
        }
     



