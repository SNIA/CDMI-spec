.. _clause_cdmi_metadata:

Metadata
========

.. _ref_metadata:

Overview
***********************************

CDMI metadata allows for additional information to be associated with stored objects. JSON objects, strings and arrays are used to transfer metadata in CDMI operations, which allows for metadata to be hierachical. CDMI servers may place a restriction on the number of metadata items, maximum size per metadata item, and total size of metadata items, as specified in the ``cdmi_metadata_maxitems``, ``cdmi_metadata_maxsize``, and ``cdmi_metadata_maxtotalsize`` capabilities. CDMI servers shall not place a restriction on the depth of the metadata hierarchy and number of array items, outside of the above restrictions.

When objects are created, object metadata is created according to the following process:

1. Metadata items specified in the create operation are added, overriding pre-existing metadata items
2. Storage System metadata items are added to the object, overriding pre-existing metadata items subject to the restrictions described in :numref:`ref_support_for_storage_system_metadata`

When objects are updated, object metadata is updated according to the following process:

1. Existing metadata items are deleted, changed and/or added, as specified in the update operation
2. Storage System metadata items are updated for the object, overriding pre-existing metadata items subject to the restrictions described in :numref:`ref_support_for_storage_system_metadata`

When objects are read, object metadata is returned according to the following process:

1. Data System Metadata items is inherited from the parent container
2. Metadata items stored with the object are returned, overriding any inherited Data System Metadata items

.. _ref_support_for_storage_system_metadata:

Support for storage system metadata
***********************************

After an object has been created or updated, the storage system metadata, as described in :numref:`tbl_storage_system_metadata`, shall be generated or updated by the cloud storage system, and shall immediately be made available to a CDMI client in the metadata that is returned as a result of the create operation and any subsequent retrievals.

Which storage system metadata is supported by the CDMI server defined in :numref:`%s <ref_storage_system_metadata_capabilities>`. Storage system metadata that is not supported by the CDMI server shall be preserved.

.. tabularcolumns:: |>{\raggedright\arraybackslash}\Y{0.29}
                    |>{\raggedright\arraybackslash}\Y{0.09}
                    |>{\raggedright\arraybackslash}\Y{0.48}
                    |>{\raggedright\arraybackslash}\Y{0.14}|

.. _tbl_storage_system_metadata:

.. list-table:: Storage system metadata
    :class: longtable
    :header-rows: 1
    :align: center 

    * - Metadata name
      - Type
      - Description
      - Requirement
    * - ``cdmi_size``
      - JSON string
      - The number of bytes consumed by the object.
      
        .. raw:: latex

          \vspace*{1ex}

        This storage system metadata item is computed by the storage system, and any attempts to set or modify it will be ignored.
      - Optional
    * - ``cdmi_ctime``
      - JSON string
      - The time when the object was created, in  ISO-8601 point-in-time format, as described in :numref:`%s <ref_time_representations>`.
      
        .. raw:: latex

          \vspace*{1ex}

        For a newly created object, this value shall be set to the creation time.
      
        .. raw:: latex

          \vspace*{1ex}

        This metadata value may only be updated by a client if it has the "``backup_operator``" privilege. If a client does not have the backup operator privilege, updates of this metadata item shall be ignored.
      - Optional
    * - ``cdmi_atime``
      - JSON string
      - The time when the object was last accessed in ISO-8601 point-in-time format, as described in :numref:`%s <ref_time_representations>`. The access or modification of a child is not considered an access of a parent container (access/modify times do not propagate up the tree).
      
        .. raw:: latex

          \vspace*{1ex}

        For a newly created object, this value shall be set to the creation time.
      
        .. raw:: latex

          \vspace*{1ex}

        This metadata value may only be updated by a client if it has the "``backup_operator``" privilege. If a client does not have the backup operator privilege, updates of this metadata item shall be ignored.
      - Optional
    * - ``cdmi_mtime``
      - JSON string
      - The time when the object was last modified, in ISO-8601 point-in-time format, as described in :numref:`%s <ref_time_representations>`. The modification of a child is not considered a modification of a container object (modification times do not propagate up the tree).
      
        .. raw:: latex

          \vspace*{1ex}

        For a newly created object, this value shall be set to the creation time.
      
        .. raw:: latex

          \vspace*{1ex}

        This metadata value may only be updated by a client if it has the "``backup_operator``" privilege. If a client does not have the backup operator privilege, updates of this metadata item shall be ignored.
      - Optional
    * - ``cdmi_acount``
      - JSON string
      - The number of times that the object has been accessed since it was originally created. Accesses include all reads, writes, and lists.
      
        .. raw:: latex

          \vspace*{1ex}

        For a newly created object, this value shall be set to the value "``0``".
      
        .. raw:: latex

          \vspace*{1ex}

        This metadata value may only be updated by a client if it has the "``backup_operator``" privilege. If a client does not have the backup operator privilege, updates of this metadata item shall be ignored.
      - Optional
    * - ``cdmi_mcount``
      - JSON string
      - The number of times that the object has been modified since it was originally created. Modifications include all value and metadata changes. Modifications to metadata resulting from reads (such as updates to atime) do not count as a modification.
      
        .. raw:: latex

          \vspace*{1ex}

        For a newly created object, this value shall be set to the value "``0``".
      
        .. raw:: latex

          \vspace*{1ex}

        This metadata value may only be updated by a client if it has the "``backup_operator``" privilege. If a client does not have the backup operator privilege, updates of this metadata item shall be ignored.
      - Optional
    * - ``cdmi_hash``
      - JSON string
      - The hash of the value of the object, encoded using Base16 encoding rules described in RFC 4648 :cite:`rfc4648`. This metadata field shall be present when the "``cdmi_value_hash``" data system metadata for the object or a parent object indicates that the value of the object should be hashed.
      
        .. raw:: latex

          \vspace*{1ex}

        This storage system metadata item is computed by the storage system, and any attempts to set or modify it will be ignored.
      - Optional
    * - ``cdmi_owner``
      - JSON string
      - The name of the principal that has owner privileges for the object.
      
        .. raw:: latex

          \vspace*{1ex}

        If not specified when the object is created, this principal associated with the user creating the object shall be used.
      
        .. raw:: latex

          \vspace*{1ex}

        This metadata value can be updated by users with appropriate permissions.
      - Optional
    * - ``cdmi_acl``
      - JSON array of JSON objects
      - Standard ACL metadata as described in :numref:`%s <ref_access_control>`.
      
        .. raw:: latex

          \vspace*{1ex}

        If not specified when the object is created, the ACL metadata shall be generated in by the system.
      
        .. raw:: latex

          \vspace*{1ex}

        This metadata value can be updated by users with appropriate permissions.
      - Optional
    * - ``cdmi_dac_uri``
      - JSON string	
      - Contains the URI used to submit a DAC request for the data object.

        URI schemes supported is defined in the ``cdmi_dac_methods capability``.

        Both ``cdmi_dac_certificate`` and ``cdmi_dac_uri`` shall be included for delegated access control to be enabled for a given object.	
      - Optional
      
    * - ``cdmi_dac_certificate``
      - JSON object	
      - A JSON object, containing a JWE JWK which shall include a public key that is used to submit a DAC request for the data object, and should contains a X.509 certificate or certificate chain used to verify the identity of the DAC provider.
      
        Both ``cdmi_dac_certificate`` and ``cdmi_dac_uri`` shall be included for delegated access control to be enabled for a given object.	
      - Optional
    * - ``cdmi_enc_signature``
      - JSON object
      - Contains JWS compact serialization of a signature for the entire object (value and metadata). See :numref:`clause %s <ref_cdmi_encrypted_objects_signature_verification>` for more details.
      - Optional
    * - ``cdmi_representations``
      - JSON object
      - Contains zero or more JSON objects, one for each supported representation for the object, container or queue. The format for the name of each contained representation JSON object shall be an RFC 9110 media-range. Each contained representation JSON object in turn contains CDMI storage system metadata for the representation that overrides the object, container or queue storage system metadata. Other contained metadata items shall be ignored by CDMI clients and CDMI servers.
      
        .. raw:: latex

          \vspace*{1ex}

        An empty object indicates that representations exist, but no representations are available to the user.
      
        .. raw:: latex

          \vspace*{1ex}

        Example JSON object structure:
      
        .. raw:: latex

          \vspace*{1ex}

        .. code-block:: none

             /metadata/
             /metadata/cdmi_representations/
             /metadata/cdmi_representations/image%2Fjpeg/
             /metadata/cdmi_representations/image%2Fjpeg/cdmi_size
             /metadata/cdmi_representations/image%2Fpng/
             /metadata/cdmi_representations/image%2Fpng/cdmi_size

      
        .. raw:: latex

          \vspace*{1ex}

        Representation JSON objects shall only be returned to a client if the client has ``CDMI_ACE_READ_METADATA`` access permission for the corresponding representation.

      - Optional

.. _ref_support_for_data_system_metadata:

Support for data system metadata
********************************

When specified, data system metadata, as described in :numref:`tbl_data_system_metadata`, provides guidelines to the cloud storage system on how to provide storage data services for data managed through the CDMI interface.

Data system metadata is inherited from parent objects to any children objects. If a child object explicitly contains data system metadata, the metadata value of the child object data system metadata shall override any corresponding inherited metadata value of the parent object data system metadata. 

Which data system metadata is supported by the CDMI server defined in :numref:`%s <ref_data_system_metadata_capabilities>`. Data system metadata that is not supported by a CDMI server shall be preserved.

.. tabularcolumns:: |>{\raggedright\arraybackslash}\Y{0.29}
                    |>{\raggedright\arraybackslash}\Y{0.09}
                    |>{\raggedright\arraybackslash}\Y{0.48}
                    |>{\raggedright\arraybackslash}\Y{0.14}|

.. _tbl_data_system_metadata:

.. list-table:: Data system metadata
    :class: longtable
    :header-rows: 1
    :align: center 

    * - Metadata name
      - Type
      - Description
      - Requirement
    * - ``cdmi_data_redundancy``
      - JSON string
      - If this data system metadata item is present and set to a positive numeric string, it indicates that the client is requesting a desired number of complete copies.
      
        .. raw:: latex

          \vspace*{1ex}

        Additional copies may be made to satisfy demand for the value. When this data system metadata item is absent, or is present and is not set to a positive numeric string, this data system metadata item shall not be used.
      - Optional
    * - ``cdmi_immediate_`` :math:`\newline\color{red}\hookrightarrow` ``redundancy``
      - JSON string
      - If this data system metadata item is present and set to "``true``", it indicates that the client is requesting that at least the number of copies indicated in ``cdmi_data_redundancy`` contain the newly written value before the operation completes. This metadata is used to make sure that multiple copies of the data are written to permanent storage to prevent possible data loss. When this data system metadata item is absent, or is present and is not set to "``true``", this data system metadata item shall not be used. 
      
        .. raw:: latex

          \vspace*{1ex}

        If the requested number of copies cannot be created within the HTTP timeout period, the transaction shall complete, but the ``cdmi_immediate_redundancy_provided`` data system metadata shall be set to "``false``".  
      - Optional
    * - ``cdmi_assignedsize``
      - JSON string
      - If this data system metadata item is present and set to a positive numeric string, it indicates that the client is specifying the size in bytes that is desired to be reported for a container object exported via other protocols (see :numref:`%s <ref_container_metadata>`). The system is not required to reserve this space and may thin-provision the requested space. Thus, the requested value may be greater than the actual storage space consumed. When this data system metadata item is absent, or is present and is not set to a positive numeric string, this data system metadata item shall not be used. 
      
        .. raw:: latex

          \vspace*{1ex}

        This data system metadata item is only applied against container objects and is not inherited by child objects.
      - Optional
    * - ``cdmi_infrastructure_`` :math:`\newline\color{red}\hookrightarrow` ``redundancy``
      - JSON string
      - If this data system metadata item is present and set to a positive numeric string, it indicates that the client is requesting a desired number of independent storage infrastructures supporting the multiple copies of data. This metadata is used to convey that, of the copies specified in ``cdmi_data_redundancy``, these copies shall be stored on this many separate infrastructures.
      
        .. raw:: latex

          \vspace*{1ex}

        When this data system metadata item is absent, or is present and is not set to a positive numeric string, this data system metadata item shall not be used. 
      - Optional
    * - ``cdmi_data_dispersion``
      - JSON string
      - If this data system metadata item is present and set to a positive numeric string, it indicates that the client is requesting a minimum desired distance (in km) between the infrastructures supporting the multiple copies of data. This metadata is used to separate the (``cdmi_infrastructure_redundancy`` number of) infrastructures by a minimum geographic distance to prevent data loss due to site disasters.
      
        .. raw:: latex

          \vspace*{1ex}

        When this data system metadata item is absent, or is present and is not set to a positive numeric string, this data system metadata item shall not be used.
      - Optional
    * - ``cdmi_geographic_`` :math:`\newline\color{red}\hookrightarrow` ``placement``
      - JSON array of JSON strings
      - If this data system metadata item is present and set to zero or more geopolitical identifiers, it indicates that the client is requesting restrictions on the geographic regions where the object is permitted to be stored. Each geopolitical identifier shall be in the form of either a string containing a valid ISO 3166 country/country-subdivision code, which indicates that storage is permitted within that geopolitical region, or in the form of a string starting with the "``!``" character in front of a valid ISO 3166 country/country-subdivision code, which excludes that country/country-subdivision from the previous list of geopolitical regions. 
      
        .. raw:: latex

          \vspace*{1ex}

        The list is evaluated, in order, from left to right, with evaluation of each candidate storage location stopping when the candidate location is a permitted or prohibited region or is contained within a permitted or prohibited region. In addition to the ISO 3166 codes, "``*``" shall indicate all regions. If a candidate location does not match any of the entries in the list, the candidate location shall be considered to be prohibited. 
      
        * When this data system metadata item is absent, this data system metadata item shall not be used. 
        * When this data system metadata item is present and does not contain valid geopolitical identifiers, the create, update, or deserialize operation shall fail with an HTTP status code of ``400 Bad Request.``
        * When this data system metadata item is present and valid, but no available storage locations are permitted, the create, update, or deserialize operation shall fail with an HTTP status code of ``403 Forbidden.``
      - Optional
    * - ``cdmi_retention_id``
      - JSON string
      - If this data system metadata item is present and not an empty string, it indicates that the client is requesting that the string be used to tag a given object as being managed by a specific retention policy. This data system metadata item is not required to place an object under retention, but is useful when needing to be able to perform a query to find all objects under a specific retention policy.
      
        .. raw:: latex

          \vspace*{1ex}

        When this data system metadata item is absent, or is present and an empty string, this data system metadata item shall not be used.
      - Optional
    * - ``cdmi_retention_period``
      - JSON string
      - If this data system metadata item is present and contains a valid ISO 8601:2004 time interval (as described in ), it indicates that the client is requesting that an object be placed under retention (see :numref:`%s <cdmi_retention>`). When this data system metadata item is absent, this data system metadata item shall not be used. When this data system metadata item is present but does not contain a valid ISO 8601:2004 time interval, the create, update, or deserialize operation shall fail with an HTTP status code of ``400 Bad Request``.
      
        .. raw:: latex

          \vspace*{1ex}

        If this data system metadata item is updated and the new end date is before the current end date, the update operation shall fail with an HTTP status code of ``403 Forbidden``. 
      - Optional
    * - ``cdmi_retention_`` :math:`\newline\color{red}\hookrightarrow` ``autodelete``
      - JSON string
      - If this data system metadata item is present and set to "``true``", it indicates that the client is requesting that an object under retention be automatically deleted when retention expires.
      
        .. raw:: latex

          \vspace*{1ex}

        When this data system metadata item is absent, or is present and is not set to "``true``", this data system metadata item shall not be used.
      - Optional
    * - ``cdmi_hold_id``
      - JSON array of JSON strings
      - If this data system metadata item is present and not an empty array, it indicates that the client is requesting that an object be placed under hold (see :numref:`%s <cdmi_hold>`). Each string in the array shall contain a unique user-specified hold identifier. 
      
        .. raw:: latex

          \vspace*{1ex}

        When this data system metadata item is absent, or is present and is an empty JSON array, this data system metadata item shall not be used. 
      
        .. raw:: latex

          \vspace*{1ex}

        If this data system metadata item is updated, and a previously existing hold string has been removed or changed in the update, the update operation shall fail with an HTTP status code of ``403 Forbidden``. (See :numref:`%s <cdmi_hold>` concerning releasing holds.)
      - Optional
    * - ``cdmi_encryption``
      - JSON string
      - If this data system metadata item is present and not an empty string, it indicates that the client is requesting that the object be encrypted while at rest. If encrypted, all data and metadata related to the object shall be encrypted. Supported algorithm/mode/length values are provided by the ``cdmi_encryption`` capability. 
      
        .. raw:: latex

          \vspace*{1ex}

        When this data system metadata item is absent, this data system metadata item shall not be used. 
      
        .. raw:: latex

          \vspace*{1ex}

        If this data system metadata item is present but does not contain a valid encryption algorithm/mode/length string, the system is free to choose to ignore the data system metadata, to fail with an HTTP status code of ``400 Bad Request``, or to select an encryption algorithm/mode/length of the system's choice. 
      
        .. raw:: latex

          \vspace*{1ex}

        Supported encryption algorithms are expressed as a string in the form of ALGORITHM_MODE_KEYLENGTH, where: 
        
        * "``ALGORITHM``" is the encryption algorithm (e.g., "``AES``" or "``3DES``"). 
        * "``MODE``" is the mode of operation (e.g., "``XTS``", "``CBC``", or "``CTR``"). 
        * "``KEYLENGTH``" is the key size in bytes (e.g., "``128``", "``192``", "``256``"). 

        To improve interoperability between CDMI implementations, the following designators should be used for the more common encryption combinations: 
        
        * "``3DES_ECB_168``" for the three-key TripleDES algorithm, the Electronic Code Book (ECB) mode of operation, and a key size of 168 bits; 
        * "``3DES_CBC_168``" for the three-key TripleDES algorithm, the Cipher Block Chaining (CBC) mode of operation, and a key size of 168 bits; 
        * "``AES_CBC_128``" for the AES algorithm, the CBC mode of operation, and a key size of 128 bits; 
        * "``AES_CBC_256``" for the AES algorithm, the CBC mode of operation, and a key size of 256 bits; 
        * "``AES_XTS_128``" for the AES algorithm, the XTS mode of operation, and a key size of 128 bits; and 
        * "``AES_XTS_256``" for the AES algorithm, the XTS mode of operation, and a key size of 256 bits.

      - Optional
    * - ``cdmi_value_hash``
      - JSON string
      - If this data system metadata item is present and not an empty string, it indicates that the client is requesting that the system hash the object value using the hashing algorithm and length requested. The result of the hash shall be provided in the ``cdmi_hash`` storage system metadata item. Supported algorithm/length values are provided by the ``cdmi_value_hash`` storage system capability. 
      
        .. raw:: latex

          \vspace*{1ex}

        When this data system metadata item is absent, this data system metadata item shall not be used. 
      
        .. raw:: latex

          \vspace*{1ex}

        If this data system metadata item is present but does not contain a valid hash algorithm/length string, the system is free to choose to ignore the data system metadata, to fail with an HTTP status code of ``400 Bad Request``, or to select a hash algorithm/length of the system's choice. 
      
        .. raw:: latex

          \vspace*{1ex}

        Supported hash algorithms are expressed as a string in the form of ALGORITHM LENGTH, where: 
        
        * "``ALGORITHM``" is the hash algorithm (e.g., "``SHA``"). 
        * "``LENGTH``" is the hash size in bytes (e.g., "``160``", "``256``"). 

        To improve interoperability between CDMI implementations, the following designators should be used for the more common encryption combinations: 
        
        * "``SHA160``" for SHA-1, and 
        * "``SHA256``" for SHA-2.
      - Optional
    * - ``cdmi_latency``
      - JSON string
      - If this data system metadata item is present and set to a positive numeric string, it indicates that the client is requesting a desired maximum time to first byte, in milliseconds. This metadata is the desired latency (in milliseconds) to the first byte of data, as measured from the edge of the cloud and factoring out any propagation latency between the client and the cloud. For example, this metadata may be used to determine, in an interoperable way, from what type of storage medium the data may be served.
      
        .. raw:: latex

          \vspace*{1ex}

        When this data system metadata item is absent, or is present and is not set to a positive numeric string, this data system metadata item shall not be used.
      - Optional
    * - ``cdmi_throughput``
      - JSON string
      - If this data system metadata item is present and set to a positive numeric string, it indicates that the client is requesting a desired maximum data rate on retrieve, in bytes per second. This metadata is the desired bandwidth to the data, as measured from the edge of the cloud and factoring out any bandwidth capability between the client and the cloud. This metadata is used to stage the data in locations where there is sufficient bandwidth to accommodate a maximum usage.
      
        .. raw:: latex

          \vspace*{1ex}

        When this data system metadata item is absent, or is present and is not set to a positive numeric string, this data system metadata item shall not be used. 
      - Optional
    * - ``cdmi_sanitization_`` :math:`\newline\color{red}\hookrightarrow` ``method``
      - JSON string
      - If this data system metadata item is present and not an empty string, it indicates that the client is requesting that the system use a specific sanitization method to delete data such that the data is unrecoverable after an update or delete operation. Supported sanitization method values are provided by the ``cdmi_sanitization_method`` capability. 
      
        .. raw:: latex

          \vspace*{1ex}

        When this data system metadata item is absent, this data system metadata item shall not be used. 
      
        .. raw:: latex

          \vspace*{1ex}

        If this data system metadata item is present but does not contain a valid sanitization method string, the system is free to choose to ignore the data system metadata, to fail with an HTTP status code of ``400 Bad Request``, or to select a sanitization method of the system's choice.
      
        .. raw:: latex

          \vspace*{1ex}

        Supported sanitization methods are defined as system-specific strings.
      - Optional
    * - ``cdmi_RPO``
      - JSON string
      - If this data system metadata item is present and set to a positive numeric string, it indicates that the client is requesting a largest acceptable duration in time between an update or create and when the object may be recovered, specified in seconds. This metadata is used to indicate the desired backup frequency from the primary copy or copies of the data to the secondary copy or copies. It is the maximum acceptable time period before a failure or disaster during which changes to data may be lost as a consequence of recovery.
      
        .. raw:: latex

          \vspace*{1ex}

        When this data system metadata item is absent, or is present and is not set to a positive numeric string, this data system metadata item shall not be used. 
      - Optional
    * - ``cdmi_RTO``
      - JSON string
      - If this data system metadata item is present and set to a positive numeric string, it indicates that the client is requesting the largest acceptable duration in time to restore data, specified in seconds. This metadata is used to indicate the desired maximum acceptable duration to restore the primary copy or copies of the data from a secondary backup copy or copies.
      
        .. raw:: latex

          \vspace*{1ex}

        When this data system metadata item is absent, or is present and is not set to a positive numeric string, this data system metadata item shall not be used.
      - Optional
    * - ``cdmi_enc_key_id``
      - JSON string
      - If this data system metadata item is present and not an empty string, it indicates that the client is requesting that the system associate with the object a key identifier (e.g. KMIP Identifier) for the symmetric key used to encrypt and decrypt the object.
      - Optional
    * - ``cdmi_enc_value_sign_id``
      - JSON string
      - If this data system metadata item is present and not an empty string, it indicates that the client is requesting that the system associate with the object a key identifier (e.g. KMIP Identifier) for the private key used for signing the value of the object.
      - Optional
    * - ``cdmi_enc_value_verify`` :math:`\newline\color{red}\hookrightarrow` ``_id``
      - JSON string
      - If this data system metadata item is present and not an empty string, it indicates that the client is requesting that the system associate with the object a key identifier (e.g. KMIP Identifier) for the public key or certificate chain used for verifying the signature of the value of the object.
      - Optional
    * - ``cdmi_enc_object_sign`` :math:`\newline\color{red}\hookrightarrow` ``_id``
      - JSON string
      - If this data system metadata item is present and not an empty string, it indicates that the client is requesting that the system associate with the object a key identifier (e.g. KMIP Identifier) for the private key used for signing the entire object.
      - Optional
    * - ``cdmi_enc_object_verify`` :math:`\color{red}\hookrightarrow` ``_id``
      - JSON string
      - If this data system metadata item is present and not an empty string, it indicates that the client is requesting that the system associate with the object a key identifier (.e.g. KMIP Identifier) for the public key or certificate chain used for verifying the signature of the entire object.
      - Optional
    * - ``cdmi_versioning``
      - JSON string
      - If this data system metadata item is present and not an empty string, it indicates that the client is requesting that versioning be enabled for the data object, and what level of versioning is requrested.

        * If set to the value "``value``", versions shall be created when the value is updated.
        * If set to the value "``user``", versions shall be created when the value and/or user metadata is updated.
        * If set to the value "``all``", versions shall be created when any update is performed against the version-enabled data object.

        This data system metadata item shall not be present in data object versions.
      - Optional
    * - ``cdmi_versions_count``
      - JSON string
      - If this data system metadata item is present and not an empty string, it indicates that the client is requesting limits on the maximum number of historical versions to be retained.

        * If ``cdmi_versions_count`` is not present, no limits should be placed on the number of versions that are retained.
        * If ``cdmi_versions_count`` is present and has a value of zero, only the current version should be retained.
        * If ``cdmi_versions_count`` is present and has a value greater than zero, up to the specified number of historical versions should be retained.
        * If the number of historical versions exceeds the value specified, historical versions should be deleted from the oldest to the newest until the number of historical versions equals the value contained in ``cdmi_versions_count``.
      - Optional
    * - ``cdmi_versions_age``
      - JSON string
      - If this data system metadata item is present and not an empty string, it indicates that the client is requesting limits on the maximum age of the oldest historical version requested to be retained.

        * If ``cdmi_versions_age`` is not present, no limit should be placed on the age of versions that are retained.
        * If ``cdmi_versions_age`` is present, historical versions should be retained until their age in seconds since creation is greater than the value contained in ``cdmi_versions_age``.
        * If the age of a historical version exceeds the value specified, that historical version should be deleted.
      - Optional
    * - ``cdmi_versions_size``
      - JSON string
      - If this data system metadata item is present and not an empty string, it indicates that the client is requesting limits on the maximum amount of space to be used to retain historical versions.

        * If ``cdmi_versions_size`` is not present, no limit should be placed on the size of versions that are retained.
        * If ``cdmi_versions_size`` is present, historic versions should be retained until the total storage consumption in bytes of the historical versions exceeds the value contained in ``cdmi_versions_size``.
        * If the total size consumed by historical versions exceeds the value specified, historical versions should be deleted from the oldest to the newest until the total storage consumption of historical versions is equal or less than the value contained in ``cdmi_versions_size``.
      - Optional
    * - ``cdmi_representation_`` :math:`\newline\color{red}\hookrightarrow` ``default``
      - JSON string
      - If this data system metadata item is present and not an empty string, it indicates that the client is requesting a specific representation be provided when a representation is not specifically requested for the CDMI object, container or queue. The default representation shall be specified as an RFC 9110 media-range.
      
        .. raw:: latex

          \vspace*{1ex}

        * If ``cdmi_representation_default`` is not present, the default representation provided shall be determined by the CDMI server.
        * If ``cdmi_representation_default`` is present, and the requested default representation is both supported by the CDMI server and is authorized for the user, the default representation provided shall be the representation specified in this metadata item.
      
        .. raw:: latex

          \vspace*{1ex}

        Example JSON string value:
      
        .. raw:: latex

          \vspace*{1ex}

        .. code-block:: none

             image/jpeg

      - Optional

.. _ref_support_for_provided_data_system_metadata:

Support for provided data system metadata
*****************************************

For each metadata item in a data system, there is an actual value that the cloud service is able to achieve at this time, as shown in :numref:`tbl_provided_values_of_data_systems_metadata_items`. Data system-provided metadata items are read only. Updates of these metadata items shall be ignored.

.. tabularcolumns:: |>{\raggedright\arraybackslash}\Y{0.38}
                    |>{\raggedright\arraybackslash}\Y{0.09}
                    |>{\raggedright\arraybackslash}\Y{0.39}
                    |>{\raggedright\arraybackslash}\Y{0.14}|

.. _tbl_provided_values_of_data_systems_metadata_items:

.. list-table:: Provided values of data system metadata
    :class: longtable
    :header-rows: 1
    :align: center 

    * - Metadata name
      - Type
      - Description
      - Requirement
    * - ``cdmi_data_redundancy_provided``
      - JSON string
      - Contains the current number of complete copies of the data object at this time
      - Optional
    * - ``cdmi_immediate_redundancy_`` :math:`\newline\color{red}\hookrightarrow` ``provided``
      - JSON string
      - If present and set to "``true``", indicates if immediate redundancy is provided for the object
      - Optional
    * - ``cdmi_infrastructure_`` :math:`\newline\color{red}\hookrightarrow` ``redundancy_provided``
      - JSON string
      - Contains the current number of independent storage infrastructures supporting the data currently operating
      - Optional
    * - ``cdmi_data_dispersion_provided``
      - JSON string
      - Contains the current lowest distance (km) between any two infrastructures hosting the data
      - Optional
    * - ``cdmi_geographic_placement_`` :math:`\newline\color{red}\hookrightarrow` ``provided``
      - JSON array of JSON strings
      - Contains an ISO-3166 identifier that corresponds to a geopolitical region where the object is stored
      - Optional
    * - ``cdmi_retention_period_provided``
      - JSON string
      - Contains an ISO-8601 time interval (as described in :numref:`%s <ref_time_representations>`) specifying the period the object is protected by retention
      - Optional
    * - ``cdmi_retention_autodelete_`` :math:`\newline\color{red}\hookrightarrow` ``provided``
      - JSON string
      - Contains "``true``" if the object will automatically be deleted when retention expires
      - Optional
    * - ``cdmi_hold_id_provided``
      - JSON array of JSON strings
      - Contains the user-specified hold identifiers for active holds
      - Optional
    * - ``cdmi_encryption_provided``
      - JSON string
      - Contains the algorithm used for encryption, the mode of operation, and the key size. (See ``cdmi_encryption`` in :numref:`%s <ref_support_for_data_system_metadata>` for the format.)
      - Optional
    * - ``cdmi_value_hash_provided``
      - JSON string
      - Contains the algorithm and length being used to hash the object value. See ``cdmi_value_hash`` in :numref:`%s <ref_support_for_data_system_metadata>` for the format.
      - Optional
    * - ``cdmi_latency_provided``
      - JSON string
      - Contains the provided maximum time to first byte
      - Optional
    * - ``cdmi_throughput_provided``
      - JSON string
      - Contains the provided maximum data rate on retrieve
      - Optional
    * - ``cdmi_sanitization_method_`` :math:`\newline\color{red}\hookrightarrow` ``provided``
      - JSON string
      - Contains the sanitization method used. See ``cdmi_sanitization_method`` in :numref:`%s <ref_support_for_data_system_metadata>` for the format.
      - Optional
    * - ``cdmi_RPO_provided``
      - JSON string
      - Contains the provided duration, in seconds, between an update and when the update may be recovered
      - Optional
    * - ``cdmi_RTO_provided``
      - JSON string
      - Contains the provided duration, in seconds, to restore data
      - Optional
    * - ``cdmi_authentication_methods_`` :math:`\newline\color{red}\hookrightarrow` ``provided``
      - JSON array of JSON strings
      - Contains a list of authentication methods enabled for the domain. See ``cdmi_authentication_methods`` in :numref:`%s <ref_support_for_data_system_metadata>` for the format.
      - Optional
    * - ``cdmi_versioning_provided``
      - JSON string
      - Contains the value "``value``", "``user``", or "``all``" if versioning is enabled for the data object.
      - Optional
    * - ``cdmi_versions_count_provided``
      - JSON string
      - Contains the maximum number of historical versions that will be retained.
      - Optional
    * - ``cdmi_versions_age_provided``
      - JSON string
      - Contains the oldest age of a historical version that will be retained, in seconds before the current time.
      - Optional
    * - ``cdmi_versions_size_provided``
      - JSON string
      - Contains the maximum amount of space that can be used to retain historical versions, in bytes.
      - Optional
    * - ``cdmi_representation_`` :math:`\newline\color{red}\hookrightarrow` ``default_provided``
      - JSON string
      - Indicates the default representation being provided for the object, container or queue.
      
        .. raw:: latex

          \vspace*{1ex}

        Example JSON string value:
      
        .. raw:: latex

          \vspace*{1ex}

        .. code-block:: none

             image/jpeg

      - Optional

.. _ref_support_for_user_metadata:

Support for user metadata
*************************

All CDMI objects that support metadata shall permit the inclusion of arbitrary user-defined metadata items, with the restriction that the name of a user-defined metadata item shall not start with the prefix "``cdmi\_``".

* The maximum number of user-defined metadata items is specified by the capability ``cdmi_metadata_maxitems``.
* The maximum size of each user-defined metadata item is specified by the capability ``cdmi_metadata_maxsize``.
* The maximum total size of user-defined metadata items for an object is specified by the capability ``cdmi_metadata_maxtotalsize``.

Metadata update operations
**************************

CDMI permits a client to replace all metadata items or to perform operations against one or more individual metadata items. 

Replacing all metadata items is accomplished by including the metadata field in the update request body JSON and not specifying specific metadata items in the update URI. 

Adding, updating, and removing specific metadata items is accomplished by specifying the specific metadata item names in the update URI: 

* To add a new metadata item to an existing object, the metadata item name shall be included in the update request URI, and the metadata item shall be included in the metadata field in the update request body JSON. 
* To update the value of an existing metadata item, the metadata item name shall be included in the update request URI, and the metadata item shall be included in the metadata field in the update request body JSON. 
* To remove an existing metadata item, the metadata item name shall be included in the update request URI, and the metadata item shall not be included in the metadata field in the update request body JSON. 

When individual metadata items are specified in the update URI, metadata items included in the metadata field in the request body JSON that are not referred to in the update URI shall be ignored.
