.. _ref_cdmi_container_object_create_post_object:

Create (POST) a New Data Object using CDMI
******************************************


Synopsis
--------

To create a new data object in a specified container where the name of the data object is a server-assigned object identifier, the following request shall be performed:

    POST <root URI>/<ContainerName>/

To create a new data object where the data object does not belong to a container and is only accessible by ID (see :numref:`ref_object_model_for_cdmi`), the following request shall be performed:

    POST <root URI>/cdmi_objectid/

Where:


* <root URI> is the path to the CDMI cloud.
* <ContainerName> is zero or more intermediate container objects that already exist, with one slash (i.e., "/") between each pair of container object names.


If created in "/cdmi_objectid/", the data object shall be accessible at <root URI>/cdmi_objectid/<objectID>. 

If created in a container, the data object shall be accessible as a child of the container with a server-assigned name, and shall also be accessible at <root URI>/cdmi_objectid/<objectID>. 


Delayed Completion of Create
----------------------------

In response to a create operation for a data object, the server may return an HTTP status code of ``202 Accepted`` to indicate that the object is in the process of being created. This response is useful for long-running operations (e.g., copying a large data object from a source URI). Such a response has the following implications.


* The server shall return a Location header with an absolute URI to the object to be created along with an HTTP status code of ``202 Accepted``.
* With an HTTP status code of ``202 Accepted``, the server implies that the following checks have passed:
   - user authorization for creating the object;
   - user authorization for read access to any source object for move, copy, serialize, or deserialize; and
   - availability of space to create the object or at least enough space to create a URI to report an error.
* A client might not be able to immediately access the created object, e.g., due to delays resulting from the implementationâ€™s use of eventual consistency. 


The client performs GET operations to the URI to track the progress of the operation. In response, the server returns two fields in its response body to indicate progress.


* A mandatory completionStatus text field contains either "Processing", "Complete", or an error string starting with the value "Error".
* An optional percentComplete field contains the percentage that the Accepted POST has completed (0 to 100). 


GET does not return any value for the object when completionStatus is not "Complete". When the final result of the create operation is an error, the URI is created with the completionStatus field set to the error message. It is the client's responsibility to delete the URI after the error has been noted.


Capabilities 
------------

The following capabilities describe the supported operations that may be performed when creating a new data object by ID in "/cdmi_objectid/": 


* Support for the ability to create data objects through this operation is indicated by the presence of the cdmi_post_dataobject_by_ID system capability. 
* If the object being created in "/cdmi_objectid/" is a reference, support for that ability is indicated by the presence of the cdmi_create_reference_by_ID system capability. 
* If the new data object being created in "/cdmi_objectid/" is a copy of an existing data object, support for the ability to copy is indicated by the presence of the cdmi_copy_dataobject_by_ID system capability. 
* If the new data object being created in "/cdmi_objectid/" is the destination of a move, support for the ability to move the data object to "/cdmi_objectid/" is indicated by the presence of the cdmi_object_move_to_ID system capability. 
* If the new data object being created in "/cdmi_objectid/" is the destination of a deserialization operation, support for the ability to deserialize the data object is indicated by the presence of the cdmi_deserialize_dataobject_by_ID system capability. 
* If the new data object being created in "/cdmi_objectid/" is the destination of a serialize operation, support for the ability to serialize the data object is indicated by the presence of the cdmi_serialize_dataobject_to_ID, cdmi_serialize_container_to_ID, cdmi_serialize_domain_to_ID, or cdmi_serialize_queue_to_ID system capabilities. 


The following capabilities describe the supported operations that may be performed when creating a new data object by ID in a container: 


* Support for the ability to create data objects through this operation is indicated by the presence of both the cdmi_post_dataobject and the cdmi_create_dataobject capabilities in the specified container object. 
* If the object being created in the parent container object is a reference, support for that ability is indicated by the presence of the cdmi_create_reference capability in the parent container object. 
* If the new data object is a copy of an existing data object, support for the ability to copy is indicated by the presence of the cdmi_copy_dataobject capability in the parent container object. 
* If the new data object is the destination of a move, support for the ability to move the data object is indicated by the presence of the cdmi_move_dataobject capability in the parent container object. 
* If the new data object is the destination of a deserialize operation, support for the ability to deserialize the the data object is indicated by the presence of the cdmi_deserialize_dataobject capability in the parent container object. 
* If the new data object is the destination of a serialize operation, support for the ability to serialize the source data object is indicated by the presence of the cdmi_serialize_dataobject, cdmi_serialize_container, cdmi_serialize_domain, or cdmi_serialize_queue capabilities in the parent container object. 



Request Headers
---------------

The HTTP request headers for creating a new CDMI data object using CDMI are shown in :numref:`tbl_request_headers_create_a_new_data_object_using_cdmi`. 

.. _tbl_request_headers_create_a_new_data_object_using_cdmi:

.. list-table:: Request Headers - Create a New Data Object Using CDMI
    :header-rows: 1
    :widths: auto
    :align: center 


    * - Header
      - Type
      - Description
      - Requirement
    * - Accept
      - Header String
      - "application/cdmi-object" or a consistent value as per clause :numref:`ref_content-type_negotiation` 
      - Optional
    * - Content-Type
      - Header String
      - "application/cdmi-object" or "multipart/mixed"
        * If multipart/mixed is specified, the body shall consist of at least two MIME parts, where the first part shall contain a body of content-type "application/cdmi-object" and the second and subsequent parts shall contain one or more byte ranges of the value as described in :numref:`ref_cdmi_data_object_read`. 
        * If multiple byte ranges are included and the "Content-Range" header is omitted for a part, the data in the part shall be appended to the data in the preceding part, with the first part having a byte offset of zero.
      - Mandatory
    * - X-CDMI-Specification-Version
      - Header String
      - A comma-separated list of versions that the client supports, e.g., "1.1, 1.5, 2.0"
      - Mandatory
    * - X-CDMI-Partial
      - Header String 
      - "true". Indicates that the newly created object is part of a series of writes and the value has not yet been fully populated. If X-CDMI-Partial is present, the completionStatus field in the response body shall be set to "Processing". X-CDMI-Partial works across CDMI and non-CDMI operations.
      - Optional



Request Message Body
--------------------

The request message body fields for creating a new data object using CDMI are shown in :numref:`tbl_request_message_body_create_a_new_data_object_using_cdmi`.


.. _tbl_request_message_body_create_a_new_data_object_using_cdmi:

.. list-table:: Request Message Body - Create a New Data Object Using CDMI
    :header-rows: 1
    :widths: auto
    :align: center 


 
    * - Field Name
      - Type
      - Description
      - Requirement
    * - mimetype
      - JSON String
      - MIME type of the data contained within the value field of the data object
        * This field may be included when creating by value or when deserializing, serializing, copying, or moving a data object.
        * If this field is not included and multi-part MIME is not being used, the value of "text/plain" shall be assigned as the field value.
        * If this field is not included and multi-part MIME is being used, the value of the "Content-Type" header of the second MIME part shall be assigned as the field value.
        * This field shall be stored as part of the data object.
        * This field shall not be included when creating a reference.
        * This mimetype field value shall be converted to lower case before being stored. 
      - Optional
    * - metadata
      - JSON Object
      - Metadata for the data object
        * If this field is included when deserializing, serializing, copying, or moving a data object, the value provided in this field shall replace the metadata from the source URI. 
        * If this field is not included when deserializing, serializing, copying, or moving a data object, the metadata from the source URI shall be used. 
        * If this field is included when creating a new data object by specifying a value, the value provided in this field shall be used as the metadata. 
        * If this field is not included when creating a new data object by specifying a value, an empty JSON object (i.e., "{}") shall be assigned as the field value. 
        * This field shall not be included when referencing a data object.
      - Optional
    * - domainURI
      - JSON String
      - URI of the owning domain
        * Any domain may be specified, and the "cross_domain" privilege is not required (see :numref:`cdmi_member_privileges_in_required_settings_for_domain_member_user_objects` .
        * If not specified, the root domain "/cdmi_domains/" shall be used.
      - Optional
    * - deserialize
      - JSON String
      - URI of a CDMI data object that shall be deserialized to create the new data object
      - Optional [#a]_
    * - serialize
      - JSON String
      - URI of a CDMI object that shall be serialized into the new data object
      - Optional [#a]_
    * - copy
      - JSON String
      - URI of a CDMI data object or queue object that shall be copied into the new data object
      - Optional [#a]_
    * - move
      - JSON String
      - URI of a CDMI data object or queue object value that shall be copied into the new data object. The data object or queue object value at the source URI shall be removed upon the successful completion of the copy.
      - Optional [#a]_
    * - reference
      - JSON String
      - URI of a CDMI data object that shall be redirected to by a reference. If other fields are supplied when creating a reference, the server shall respond with an HTTP status code of ``400 Bad Request``.
      - Optional [#a]_
    * - deserializevalue
      - JSON String
      - A data object serialized as specified in :rfc:`4648`.
        * If multi-part MIME is being used and this field contains the value of the MIME boundary parameter, the contents of the second MIME part shall be assigned as the field value. 
        * If the serialized data object in the second MIME part does not include a value field, the contents of the third MIME part shall be assigned as the field value of the value field.
      - Optional [#a]_
    * - valuetransferencoding
      - JSON  String
      - The value transfer encoding used for the container object value. Two value transfer encodings are defined:
        * "utf-8" indicates that the data object contains a valid UTF-8 string, and it shall be transported as a UTF-8 string in the value field. 
        * "base64" indicates that the data object may contain arbitrary binary sequences, and it shall be transported as a base 64-encoded string in the value field. Setting the contents of the data object value field to any value other than a valid base 64 string shall result in an HTTP status code of ``400 Bad Request`` being returned to the client.
        This field shall only be included when creating a data object by value. 
        * If this field is not included and multi-part MIME is not being used, the value of "utf-8" shall be assigned as the field value.
        * If this field is not included and multi-part MIME is being used, the value of "utf-8" shall be assigned as the field value if the "Content-Type" header of the second and all subsequent MIME parts includes the charset parameter as defined in RFC 2046 of "utf-8" (e.g., ";charset=utf-8"). Otherwise, the value of "base64" shall be assigned as the field value. This field applies only to the encoding of the value when represented in JSON; the "Content-Transfer-Encoding" header of the part specifies the encoding of the value within a multi-part MIME request, as defined in :rfc:`2045`.
        This field shall be stored as part of the object.
      - Optional
    * - value
      - JSON String
      - The data object value
        * If this field is not included and multi-part MIME is not being used, an empty JSON String (i.e., "") shall be assigned as the field value.
        * If this field is not included and multi-part MIME is being used, the contents of the second MIME part shall be assigned as the field value.
        * If the valuetransferencoding field indicates UTF-8 encoding, the value shall be a UTF-8 string escaped using the JSON escaping rules described inÂ :rfc:`4627`.
        * If the valuetransferencoding field indicates base 64 encoding, the value shall be first encoded using the base 64 encoding rules described inÂ :rfc:`4648`.
      - Optional [#a]_

.. [#a] Only one of these fields shall be specified in any given operation. Except for value, these fields shall not be stored. If more than one of these fields is supplied, the server shall respond with an HTTP status code of ``400 Bad Request``. 


Response Headers
----------------

The HTTP response headers for creating a new CDMI data object using CDMI are shown in :numref:`tbl_response_headers_create_a_new_data_object_using_cdmi`. 

.. _tbl_response_headers_create_a_new_data_object_using_cdmi:

.. list-table:: Response Headers - Create a New Data Object Using CDMI
    :header-rows: 1
    :widths: auto
    :align: center 


    * - Header
      - Type
      - Description
      - Requirement
    * - Content-Type
      - Header String
      - "application/cdmi-object"
      - Mandatory
    * - X-CDMI-Specification-Version
      - Header String 
      - The server shall respond with the highest version supported by both the client and the server, e.g., "1.1".
        If the server does not support any of the versions that the client supports, the server shall return an HTTP status code of ``400 Bad Request``.
      - Mandatory
    * - Location
      - Header String 
      - The unique absolute URI for the new data object as assigned by the system. In the absence of file name information from the client, the system shall assign the URI in the form: http://host:port/<root URI>/<ContainerName>/<ObjectID> or https://host:port/<root URI>/<ContainerName>/<ObjectID>.
      - Mandatory


Response Message Body
---------------------

The response message body fields for creating a new CDMI data object using CDMI are shown in :numref:`tbl_response_message_body_create_a_new_data_object_using_cdmi`.

.. _tbl_response_message_body_create_a_new_data_object_using_cdmi:

.. list-table:: Response Message Body - Create a New Data Object Using CDMI
    :header-rows: 1
    :widths: auto
    :align: center 


    * - Field Name
      - Type
      - Description
      - Requirement
    * - objectType
      - JSON String
      - "application/cdmi-object"
      - Mandatory
    * - objectID
      - JSON String
      - Object ID of the object
      - Mandatory
    * - objectName
      - JSON String
      - Name of the object
        * For objects in a container, the objectName field shall be returned. 
        * For objects not in a container (objects that are only accessible by ID), the objectName field does not exist and shall not be returned. 
      - Conditional
    * - parentURI
      - JSON String
      - URI for the parent object
        * For objects in a container, the parentURI field shall be returned. 
        * For objects not in a container (objects that are only accessible by ID), the parentURI field does not exist and shall not be returned. 
        Appending the objectName to the parentURI shall always produce a valid URI for the object. 
      - Conditional
    * - parentID
      - JSON String
      - Object ID of the parent container object
        * For objects in a container, the parentID field shall be returned. 
        * For objects not in a container (objects that are only accessible by ID), the parentID field does not exist and shall not be returned.
      - Conditional
    * - domainURI
      - JSON String
      - URI of the owning domain
      - Mandatory
    * - capabilitiesURI
      - JSON String
      - URI to the capabilities for the object
      - Mandatory
    * - completionStatus
      - JSON String
      - A string indicating if the object is still in the process of being created or updated by another operation, and after that operation is complete, indicates if it was successfully created or updated or if an error occurred.
        The value shall be the string "Processing", the string "Complete", or an error string starting with the value "Error".
      - Mandatory
    * - percentComplete
      - JSON String
      - * When the value of completionStatus is "Processing", this field, if provided, shall indicate the percentage of completion as a numeric integer value from 0 through 100. 
        * When the value of completionStatus is "Complete", this field, if provided, shall contain the value "100". 
        * When the value of completionStatus is "Error", this field, if provided, may contain any integer value from 0 through 100.
      - Optional
    * - mimetype
      - JSON String
      - MIME type of the value of the data object
      - Mandatory
    * - metadata
      - JSON Object
      - Metadata for the data object. This field includes any user and data system metadata specified in the request body metadata field, along with storage system metadata generated by the cloud storage system.
        See :numref:`Clause %s <clause_cdmi_metadata>` for a further description of metadata.
      - Mandatory


Response Status
---------------

:numref:`tbl_http_status_codes_create_a_new_data_object_using_cdmi` describes the HTTP status codes that occur when creating a new data object using CDMI. 

.. _tbl_http_status_codes_create_a_new_data_object_using_cdmi:

.. list-table:: HTTP Status Codes - Create a New Data Object Using CDMI
    :header-rows: 1
    :widths: auto
    :align: center 


    * - HTTP Status
      - Description
    * - ``201 Created``
      - The new data object was created.
    * - ``202 Accepted``
      - The data object is in the process of being created. The CDMI client should monitor the completionStatus and percentComplete fields to determine the current status of the operation.
    * - ``400 Bad Request``
      - The request contains invalid parameters or field names.
    * - ``401 Unauthorized``
      - The authentication credentials are missing or invalid.
    * - ``403 Forbidden``
      - The client lacks the proper authorization to perform this request.
    * - ``404 Not Found``
      - The resource was not found at the specified URI.
    * - ``409 Conflict``
      - The operation conflicts with a non-CDMI access protocol lock or may cause a state transition error on the server.



Examples
--------

#. POST to the container object URI the data object contents:

    .. code-block:: http

        POST /MyContainer/ HTTP/1.1
        Host: cloud.example.com
        Accept: application/cdmi-object
        Content-Type: application/cdmi-object
        X-CDMI-Specification-Version: 1.1
         
        {
            "mimetype" : "text/plain",
            "metadata" : {
                
            },
            "value" : "This is the Value of this Data Object"
        }

   The following shows the response.

   .. code-block:: http

        HTTP/1.1 201 Created
        Content-Type: application/cdmi-object
        X-CDMI-Specification-Version: 1.1
        Location: http://cloud.example.com/MyContainer/00007ED900104E1D14771DC67C27BF8B 
         
        {
            "objectType" : "application/cdmi-object",
            "objectID" : "00007ED900104E1D14771DC67C27BF8B",
            "objectName" : "00007ED900104E1D14771DC67C27BF8B",
            "parentURI" : "/MyContainer/",
            "parentID" : "00007ED900104E1D14771DC67C27BF8B",
            "domainURI" : "/cdmi_domains/MyDomain/",
            "capabilitiesURI" : "/cdmi_capabilities/dataobject/",
            "completionStatus" : "Complete",
            "mimetype" : "text/plain",
            "metadata" : {
                ...
            }
        }

#. POST to the object ID URI the data object contents:

    .. code-block:: http

        POST /cdmi_objectid/ HTTP/1.1 
        Host: cloud.example.com 
        Accept: application/cdmi-object 
        Content-Type: application/cdmi-object 
        X-CDMI-Specification-Version: 1.1 
         
        {
            "mimetype": "text/plain",
            "domainURI": "/cdmi_domains/MyDomain/",
            "value": "This is the Value of this Data Object"
        } 

   The following shows the response.

   .. code-block:: http

        HTTP/1.1 201 Created 
        Location: http://cloud.example.com/cdmi_objectid/00007ED900104E1D14771DC67C27BF8B
        Content-Type: application/cdmi-object 
        X-CDMI-Specification-Version: 1.1 
         
        {
            "objectType": "application/cdmi-object",
            "objectID": "00007ED900104E1D14771DC67C27BF8B",
            "domainURI": "/cdmi_domains/MyDomain/",
            "capabilitiesURI": "/cdmi_capabilities/dataobject/",
            "completionStatus": "Complete",
            "mimetype": "text/plain",
            "metadata": {
                "cdmi_acl": [
                    {
                        "acetype": "ALLOW",
                        "identifier": "OWNER@",
                        "aceflags": "NO_FLAGS",
                        "acemask": "ALL_PERMS"
                    }
                ],
                        ...
            }
        }

#. POST to the object ID URI the data object fields and binary contents using multi-part MIME:

   .. code-block:: http

        POST /cdmi_objectid/ HTTP/1.1 
        Host: cloud.example.com 
        Accept: application/cdmi-object 
        Content-Type: multipart/mixed; boundary=gc0p4Jq0M2Yt08j34c0p
        X-CDMI-Specification-Version: 1.1
        
        --gc0p4Jq0M2Yt08j34c0p
        Content-Type: application/cdmi-object
        
        {
            "domainURI": "/cdmi_domains/MyDomain/",
            "metadata": {
                "colour": "blue"
            }
        }
        
        --gc0p4Jq0M2Yt08j34c0p
        Content-Type: application/octet-stream
        Content-Transfer-Encoding: binary
        
        <37 bytes of binary data>
        
        --gc0p4Jq0M2Yt08j34c0p--

    The following shows the response.

    .. code-block:: http

        HTTP/1.1 201 Created
        Location: http://cloud.example.com/cdmi_objectid/00007ED90010C2414303B5C6D4F83170
        Content-Type: application/cdmi-object 
        X-CDMI-Specification-Version: 1.1
        
        {
            "objectType": "application/cdmi-object", 
            "objectID": "00007ED90010C2414303B5C6D4F83170", 
            "domainURI": "/cdmi_domains/MyDomain/", 
            "capabilitiesURI": "/cdmi_capabilities/dataobject/", 
            "completionStatus": "Complete", 
            "mimetype": "application/octet-stream", 
            "metadata": {
                "cdmi_size": "37",
                "colour": "blue",
                ...
            }
        }
