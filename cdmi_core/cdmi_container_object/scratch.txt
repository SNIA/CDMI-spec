
<DIV>
.. _50532466__Toc127343461:
.. _50532466__Ref121026337:
<A NAME="50532466__Ref121026315"></A>Container Object Resource Operations using CDMI
========================================
<DIV>

Overview
************************

Container objects are the fundamental grouping of stored data within CDMI™ and are analogous to directories within a file system. Each container object has zero or more child objects and a set of well-defined fields that include standardized and optional metadata. The metadata is generated by the cloud storage system and specified by the cloud user.

Containers are addressed in CDMI in two ways:


* by name (e.g., http://cloud.example.com/container/); and
* by object ID (e.g., http://cloud.example.com/cdmi_objectid/00007ED900104E1D14771DC67C27BF8B/).


Every container object has a single, globally-unique object ID that remains constant for the life of the object. Each container object may also have one or more URI addresses that allow the container object to be accessed. Following the URI conventions for hierarchical paths, container URIs shall consist of one or more container names that are separated by forward slashes ("/") and that end with a forward slash ("/"). 

If a request is performed against an existing container resource and the trailing slash at the end of the URI is omitted, the server shall respond with an HTTP status code of ``301 Moved Permanently``. In addition, a Location header containing the URI with the trailing slash added shall be returned. 

If a CDMI request is performed to create a new container resource and the trailing slash at the end of the URI is omitted, the server shall respond with an HTTP status code of ``400 Bad Request``.

Non-CDMI requests to create a container resource shall include the trailing slash at the end of the URI; otherwise, the request shall be considered a request to create a data object.

Containers may also be nested.
<DIV>
#. The following URI represents a nested container:

    .. code-block:: http

<P CLASS="Body-Indent">
http://cloud.example.com/container/subcontainer/</P>

A nested container has a parent container object, shall be included in the children field of the parent container object, and shall inherit data system metadata and ACLs from its parent container. 

This model allows direct mapping between CDMI-managed cloud storage and file systems (e.g., NFSv4 or WebDAV). If a CDMI container object is exported as a file system, then the file system may make the CDMI metadata accessible via file system-specific mechanisms. As files and directories are created by the file system, they become visible through the CDMI interface acting as a data path. The mapping between file system constructs and CDMI data objects, container objects, and metadata is outside the scope of this international standard.

Individual fields within a container object may be accessed by specifying the field name after a question mark "?" appended to the end of the container object URI. 
</DIV>
<DIV>
#. The following URI returns just the children field in the response body:

    .. code-block:: http

<P CLASS="Body-Indent">
http://cloud.example.com/container/?children</P>

By specifying a range after the children field name, specific ranges of the children field may be accessed. 
</DIV>
<DIV>
#. The following URI returns the first three children from the children field:

    .. code-block:: http

<P CLASS="Body-Indent">
http://cloud.example.com/container/?children:0-2</P>

Children ranges are specified in a way that is similar to byte ranges as per Section 14.35.1 of :rfc:`2616`
. A client can determine the number of children present by requesting the childrenrange field without requesting a range of children.

A list of fields, separated by a semicolon ";" may be specified, allowing multiple fields to be accessed in a single request. 
</DIV>
<DIV>
#. The following URI would return the children and metadata fields in the response body:

    .. code-block:: http


   http://cloud.example.com/container/?children;metadata

If read access to any of the requested fields is not permitted by the object ACL, only the permitted fields shall be returned. If no requested fields are permitted to be read, an HTTP status code of ``403 Forbidden`` shall be returned to the client. 

If write access to any of the requested fields is not permitted by the object ACL, no updates shall be performed, and an HTTP status code of ``403 Forbidden`` shall be returned to the client.

When a client includes deserialized fields that are not defined in this international standard, these fields shall be stored as part of the object.
</DIV>
<DIV>

Container Metadata
-----

The following optional data system metadata may be provided (see :ref:`Container Metadata`).


.. list-table:: <A NAME="50532466_93233"></A>Container Metadata
    :header-rows: 1
    :widths: auto
    :align: center 


    * - Metadata Name
      - Type
      - Description
      - Requirement
    * - cdmi_assignedsize
      - JSON String
      - The number of bytes that is reported via exported protocols (e.g., the device may be thin provisioned). This number may limit cdmi_size.
      - Optional


Container metadata may also include arbitrary user-supplied metadata, storage system metadata, and data system metadata as described in :ref:`Metadata`.
</DIV>
<DIV>

Reserved Container Names 
-----

This international standard defines reserved container names that shall not be used when creating new containers. These container names are reserved for use by this international standard, and if an attempt is made to create or delete them, an HTTP status code of ``400 Bad Request`` shall be returned to the client. 

The reserved container names include: 


* cdmi_objectid, 
* cdmi_domains, 
* cdmi_capabilities, 
* cdmi_snapshots, and 
* cdmi_versions. 


As additional names may be added in future versions of this international standard, server implementations shall prevent the creation of user-defined containers if the container name starts with "cdmi_". 
</DIV>
<DIV>

Container Object Addressing
-----

Each container object is addressed via one or more unique URIs, and all operations may be performed through any of these URIs. For example, a container object may be accessible via multiple virtual hosting paths, where http://cloud.example.com/users/snia/cdmi/ is also accessible through http://snia.example.com/cdmi/. Conflicting writes via different paths shall be managed the same way that conflicting writes via one path are managed, via the principle of eventual consistency (see :ref:`Create a Container Object using CDMI`).
</DIV>
<DIV>

Container Object Representations
-----

The representations in this clause are shown using JSON notation. Both clients and servers shall support UTF-8 JSON representation. The request and response body JSON fields may be specified or returned in any order, with the exception that, if present, for container objects, the childrenrange and children fields shall appear last and in that order. 
</DIV>
</DIV>
<DIV>
.. _50532466_82229:
Create a Container Object using CDMI
************************
<DIV>

Synopsis 
-----

To create a new container object, the following request shall be performed:

    PUT &lt;root URI&gt;/&lt;ContainerName&gt;/&lt;NewContainerName&gt;/
<DIV>
Where:


* &lt;root URI&gt; is the path to the CDMI cloud.
* &lt;ContainerName&gt; is zero or more intermediate container objects that already exist, with one slash (i.e., "/") between each pair of container object names.
* &lt;NewContainerName&gt; is the name specified for the container object to be created.


After it is created, the container object shall also be accessible at &lt;root URI&gt;/cdmi_objectid/&lt;objectID&gt;/.
</DIV>
</DIV>
<DIV>

Delayed Completion of Create
-----

In response to a create operation for a container object, the server may return an HTTP status code of ``202 Accepted`` to indicate that the object is in the process of being created. This response is useful for long-running operations (e.g., deserializing a source data object to create a large container object hierarchy). Such a response has the following implications.


* The server shall return a Location header with an absolute URI to the object to be created along with an HTTP status code of ``202 Accepted``. 
* With an HTTP status code of ``202 Accepted``, the server implies that the following checks have passed:
<LI CLASS="Bullet-Indent">
user authorization for creating the container object;</LI>
<LI CLASS="Bullet-Indent">
user authorization for read access to any source object for move, copy, serialize, or deserialize; and</LI>
<LI CLASS="Bullet-Indent">
availability of space to create the container object or at least enough space to create a URI to report an error.</LI>
* A client might not be able to immediately access the created object, e.g., due to delays resulting from the implementation’s use of eventual consistency. 


The client performs GET operations to the URI to track the progress of the operation. In response, the server returns two fields in its response body to indicate progress. 


* A mandatory completionStatus text field contains either "Processing", "Complete", or an error string starting with the value "Error".
* An optional percentComplete field contains the percentage that the accepted PUT has completed (0 to 100). GET does not return any children for the container object when completionStatus is not "Complete".


When the final result of the create operation is an error, the URI is created with the completionStatus field set to the error message. It is the client's responsibility to delete the URI after the error has been noted.
</DIV>
<DIV>

Capabilities 
-----

The following capabilities describe the supported operations that may be performed when creating a new container object:


* Support for the ability to create a new container object is indicated by the presence of the cdmi_create_container capability in the parent container object.
* If the object being created in the parent container object is a reference, support for that ability is indicated by the presence of the cdmi_create_reference capability in the parent container object.
* If the new container object is a copy of an existing container object, support for the ability to copy is indicated by the presence of the cdmi_copy_container capability in the parent container object.
* If the new container object is the destination of a move, support for the ability to move the container object is indicated by the presence of the cdmi_move_container capability in the parent container object.
* If the new container object is the destination of a deserialize operation, support for the ability to deserialize the source data object serialization of a container object is indicated by the presence of the cdmi_deserialize_container capability in the parent container object.

</DIV>
<DIV>

Request Headers
-----

The HTTP request headers for creating a CDMI container object using CDMI are shown in :ref:`Request Headers - Create a Container Object using CDMI`. 


.. list-table:: Request Headers - Create a Container Object using CDMI<A NAME="50532466_17973"></A>
    :header-rows: 1
    :widths: auto
    :align: center 


    * - Header
      - Type
      - Description
      - Requirement
    * - Accept
      - Header String
      - "application/cdmi-container" or a consistent value as per clause :ref:`Content-Type Negotiation`
      - Optional
    * - Content-Type
      - Header String
      - "application/cdmi-container"
      - Mandatory
    * - X-CDMI-Specification-Version
      - Header String
      - A comma-separated list of versions that the client supports, for example, "1.1, 1.5, 2.0"
      - Mandatory

</DIV>
<DIV>

Request Message Body
-----

The request message body fields for creating a container object using CDMI are shown in :ref:`Request Message Body - Create a Container Object using CDMI`. 


.. list-table:: <A NAME="50532466_94506"></A>Request Message Body - Create a Container Object using CDMI<BR>
    :header-rows: 1
    :widths: auto
    :align: center 


 (Sheet 1 of 2)
    * - Field Name
      - Type
      - Description
      - Requirement
    * - metadata
      - JSON Object
      - Metadata for the container object


        * If this field is included when deserializing, serializing, copying, or moving a container object, the value provided in this field shall replace the metadata from the source URI. 
        * If this field is not included when deserializing, serializing, copying, or moving a container object, the metadata from the source URI shall be used. 
        * If this field is included when creating a new container object by specifying a value, the value provided in this field shall be used as the metadata. 
        * If this field is not included when creating a new container object by specifying a value, an empty JSON object (i.e., "{}") shall be assigned as the field value. 
        * This field shall not be included when referencing a container object.

      - Optional
    * - domainURI
      - JSON String
      - URI of the owning domain


        * If different from the parent domain, the user shall have the "cross-domain" privilege (see cdmi_member_privileges in :ref:`Required Settings for Domain Member User Objects`).
        * If not specified, the existing domain shall be preserved.

      - Optional
    * - exports
      - JSON Object
      - A structure for each protocol enabled for this container object (see :ref:`Exported Protocols`). This field shall not be included when referencing a container object. 
      - Optional
    * - deserialize
      - JSON String
      - URI of a CDMI data object that shall be deserialized to create the new container object, including all child objects inside the source serialized data object (see :ref:`Serialization/Deserialization`).
When deserializing a container object, any exported protocols from the original serialized container object are not applied to the newly created container object(s).
      - Optionala
    * - copy
      - JSON String
      - URI of a source CDMI container object that shall be copied into the new destination container object. 


        * If the destination container object URI and the copy source object URI both do not specify individual fields, the destination container object shall be a complete copy of the source container object, including all child objects under the source container object. 
        * If the destination container object URI or the copy source object URI specifies individual fields, only the fields specified shall be used to create the destination container object. If specified fields are not present in the source, default field values shall be used. 
        * If the destination container object URI and the copy source object URI both specify fields, an HTTP status code of ``400 Bad Request``
 shall be returned to the client. 

When copying a container object, exported protocols are not preserved across the copy. 
If there are insufficient permissions to read the container object at the source URI or create the container object at the destination URI, or if the read operation fails, the copy shall return an HTTP status code of ``400 Bad Request,``
 and the destination container object shall not be created.
      - Optionala
    * - move
      - JSON String
      - URI of an existing local or remote CDMI container object (source URI) that shall be relocated, along with all child objects, to the URI specified in the PUT. The contents of the container object and all children, including the object ID, shall be preserved by a move, and the container object and all children of the source URI shall be removed after the objects at the destination have been successfully created. 
If there are insufficient permissions to read the objects at the source URI, write the objects at the destination URI, or delete the objects at the source URI, or if any of these operations fail, the move shall return an HTTP status code of ``400 Bad Request``
, and the source and destination are left unchanged.
      - Optionala
    * - reference
      - JSON String
      - URI of a CDMI container object that shall be redirected to by a reference. If other fields are supplied when creating a reference, the server shall respond with an HTTP status code of ``400 Bad Request``.
      - Optionala
    * - deserializevalue
      - JSON String
      - A container object serialized as specified in :rfc:`4648`. The object ID of the serialized container object shall match the object ID of the destination container object.
      - Optionala
    * <TH ROWSPAN="1" COLSPAN="4">
aOnly one of these fields shall be specified in any given operation. Except for value, these fields shall not be stored. If more than one of these fields is supplied, the server shall respond with an HTTP status code of ``400 Bad Request``
.

</DIV>
<DIV>

Response Headers
-----

The HTTP response headers for creating a CDMI container object using CDMI are shown in :ref:`Response Headers - Create a Container Object using CDMI`. 


.. list-table:: <A NAME="50532466_40048"></A>Response Headers - Create a Container Object using CDMI
    :header-rows: 1
    :widths: auto
    :align: center 


    * - Header
      - Type
      - Description
      - Requirement
    * - Content-Type
      - Header String
      - "application/cdmi-container"
      - Mandatory
    * - X-CDMI-Specification-Version
      - Header String
      - The server shall respond with the highest version supported by both the client and the server, e.g., "1.1".
If the server does not support any of the versions that the client supports, the server shall return an HTTP status code of ``400 Bad Request``
.
      - Mandatory
    * - Location
      - Header String
      - When an HTTP status code of ``202 Accepted``
 is returned, the server shall respond with the absolute URL of the object that is in the process of being created.
      - Conditional

</DIV>
<DIV>

Response Message Body
-----

The response message body fields for creating a CDMI container object using CDMI are shown in :ref:`Response Message Body - Create a Container Object using CDMI`. 


.. list-table:: <A NAME="50532466_86687"></A>Response Message Body - Create a Container Object using CDMI (Sheet 1 of 2)
    :header-rows: 1
    :widths: auto
    :align: center 


    * - Field Name
      - Type
      - Description
      - Requirement
    * - objectType
      - JSON String
      - "application/cdmi-container"
      - Mandatory
    * - objectID
      - JSON String
      - Object ID of the object
      - Mandatory
    * - objectName
      - JSON String
      - Name of the object
      - Mandatory
    * - parentURI
      - JSON String
      - URI for the parent object
Appending the objectName to the parentURI shall always produce a valid URI for the object. 
      - Mandatory
    * - parentID
      - JSON String
      - Object ID of the parent container object
      - Mandatory
    * - domainURI
      - JSON String
      - URI of the owning domain
      - Mandatory
    * - capabilitiesURI
      - JSON String
      - URI to the capabilities for the object
      - Mandatory
    * - completionStatus
      - JSON String
      - A string indicating if the object is still in the process of being created or updated by another operation, and after that operation is complete, indicates if it was successfully created or updated or if an error occurred.
The value shall be the string "Processing", the string "Complete", or an error string starting with the value "Error".
      - Mandatory
    * - percentComplete
      - JSON String
      - 

        * When the value of completionStatus is "Processing", this field, if provided, shall indicate the percentage of completion as a numeric integer value from 0 through 100. 
        * When the value of completionStatus is "Complete", this field, if provided, shall contain the value "100". 
        * When the value of completionStatus is "Error", this field, if provided, may contain any integer value from 0 through 100.

      - Optional
    * - metadata
      - JSON Object
      - Metadata for the container object. This field includes any user and data system metadata specified in the request body metadata field, along with storage system metadata generated by the cloud storage system. See :ref:`Metadata` for a further description of metadata.
      - Mandatory
    * - exports
      - JSON Object
      - A structure for each protocol that is enabled for this container object. See :ref:`Exported Protocols`.
      - Optionala
    * - snapshots
      - JSON Array of JSON Strings
      - URI(s) of the snapshot container objects. See :ref:`CDMI Snapshots`.
      - Optionala
    * - childrenrange
      - JSON String 
      - The children of the container expressed as a range. If a range of children is requested, this field indicates the children returned as a range.
      - Optional
    * - children
      - JSON Array of JSON Strings
      - Names of the children objects in the container object. Child container objects end with "/".
      - Optional
    * <TH ROWSPAN="1" COLSPAN="4">
aReturned only if present.

</DIV>
<DIV>

Response Status
-----

:ref:`HTTP Status Codes - Create a CDMI Container Object using CDMI` describes the HTTP status codes that occur when creating a container object using CDMI. 


.. list-table:: <A NAME="50532466_27428"></A>HTTP Status Codes - Create a CDMI Container Object using CDMI
    :header-rows: 1
    :widths: auto
    :align: center 


    * - HTTP Status
      - Description
    * - ``201 Created``

      - The new container object was created.
    * - ``202 Accepted``

      - The container is in the process of being created. The CDMI client should monitor the completionStatus and percentComplete fields to determine the current status of the operation.
    * - ``400 Bad Request``

      - The request contains invalid parameters or field names.
    * - ``401 Unauthorized``

      - The authentication credentials are missing or invalid.
    * - ``403 Forbidden``

      - The client lacks the proper authorization to perform this request.
    * - ``404 Not Found``

      - The resource was not found at the specified URI.
    * - ``409 Conflict``

      - The operation conflicts with a non-CDMI access protocol lock or may cause a state transition error on the server.

</DIV>
<DIV>

Example
-----
<DIV>
<H6 CLASS="Example">
PUT to the URI the container object name and metadata:</H6>

    PUT /MyContainer/ HTTP/1.1

    Host: cloud.example.com

    Accept: application/cdmi-container

    Content-Type: application/cdmi-container

    X-CDMI-Specification-Version: 1.1

    &nbsp;

    {

        "metadata" : {

            

        },

        "exports" : {

           "OCCI/iSCSI": {

            "identifier": "00007E7F00104BE66AB53A9572F9F51E",

            "permissions": [

                "http://example.com/compute/0/",

                "http://example.com/compute/1/"

            ]

        },

            "Network/NFSv4" : {

                "identifier" : "/users",

                "permissions" : "domain" 

            } 

        }

    }

   The following shows the response.

    .. _50532466_OLE_LINK10:
HTTP/1.1 201 Created

    Content-Type: application/cdmi-container

    X-CDMI-Specification-Version: 1.1

    &nbsp;

    {

        "objectType" : "application/cdmi-container",

        "objectID" : "00007ED900104E1D14771DC67C27BF8B",

        "objectName" : "MyContainer/",

        "parentURI" : "/",

        "parentID" : "00007E7F0010128E42D87EE34F5A6560", 

        "domainURI" : "/cdmi_domains/MyDomain/",

        "capabilitiesURI" : "/cdmi_capabilities/container/",

        "completionStatus" : "Complete",

        "metadata" : {

         ...   

        },

        "exports" : {

            "OCCI/iSCSI" : {

                "identifier" : "00007ED900104E1D14771DC67C27BF8B",

                "permissions" : "00007E7F00104EB781F900791C70106C" 

            },

            "Network/NFSv4" : {

                "identifier" : "/users",

                "permissions" : "domain" 

            } 

        }

    }
</DIV>
</DIV>
</DIV>
<DIV>

Read a Container Object using CDMI
************************
<DIV>

Synopsis
-----

To read all fields from an existing container object, the following request shall be performed:

    GET &lt;root URI&gt;/&lt;ContainerName&gt;/&lt;TheContainerName&gt;/

To read one or more requested fields from an existing container object, one of the following requests shall be performed:

    GET &lt;root URI&gt;/&lt;ContainerName&gt;/&lt;TheContainerName&gt;/?&lt;fieldname&gt;;&lt;fieldname&gt;;...

    GET &lt;root URI&gt;/&lt;ContainerName&gt;/&lt;TheContainerName&gt;/?children:&lt;range&gt;;...

    GET &lt;root URI&gt;/&lt;ContainerName&gt;/&lt;TheContainerName&gt;/?metadata:&lt;prefix&gt;;...
<DIV>
Where:


* &lt;root URI&gt; is the path to the CDMI cloud.
* &lt;ContainerName&gt; is zero or more intermediate container objects.
* &lt;TheContainerName&gt; is the name specified for the container object to be read from.
* &lt;fieldname&gt; is the name of a field.
* &lt;range&gt; is a numeric range within the list of children.
* &lt;prefix&gt; is a matching prefix that returns all metadata items that start with the prefix value.


The container object shall also be accessible at &lt;root URI&gt;/cdmi_objectid/&lt;objectID&gt;/.
</DIV>
</DIV>
<DIV>

Capabilities
-----

The following capabilities describe the supported operations that may be performed when reading an existing container object:


* Support for the ability to read the metadata of an existing container object is indicated by the presence of the cdmi_read_metadata capability in the specified container object.
* Support for the ability to list the children of an existing container object is indicated by the presence of the cdmi_list_children capability in the specified container object.
* Support for the ability to list ranges of the children of an existing container object is indicated by the presence of the cdmi_list_children_range capability in the specified container object.

</DIV>
<DIV>

Request Headers
-----

The HTTP request headers for reading a CDMI container object using CDMI are shown in :ref:`Request Headers - Read a Container Object using CDMI`. 


.. list-table:: Request Headers - Read a Container Object using CDMI<A NAME="50532466_59922"></A>
    :header-rows: 1
    :widths: auto
    :align: center 


    * - Header
      - Type
      - Description
      - Requirement
    * - Accept
      - Header String
      - "application/cdmi-container" or a consistent value as per clause :ref:`Content-Type Negotiation`
      - Optional
    * - X-CDMI-Specification-Version
      - Header String
      - A comma-separated list of versions that the client supports, e.g., "1.1, 1.5, 2.0"
      - Mandatory

</DIV>
<DIV>

Request Message Body 
-----

A request body shall not be provided.
</DIV>
<DIV>

Response Headers
-----

The HTTP response headers for reading a CDMI container object using CDMI are shown in :ref:`Response Headers - Read a Container Object using CDMI`.


.. list-table:: <A NAME="50532466_67149"></A>Response Headers - Read a Container Object using CDMI
    :header-rows: 1
    :widths: auto
    :align: center 


    * - Header
      - Type
      - Description
      - Requirement
    * - X-CDMI-Specification-Version
      - Header String
      - The server shall respond with the highest version supported by both the client and the server, e.g., "1.1".
If the server does not support any of the versions that the client supports, the server shall return an HTTP status code of ``400 Bad Request``
.
      - Mandatory
    * - Content-Type
      - Header String
      - "application/cdmi-container"
      - Mandatory
    * - Location
      - Header String
      - The server shall respond with an absolute URI to which the reference redirects if the object is a reference.
      - Conditional

</DIV>
<DIV>

Response Message Body
-----

The response message body fields for reading a CDMI container object using CDMI are shown in :ref:`Response Message Body - Read a Container Object using CDMI`.


.. list-table:: <A NAME="50532466_90996"></A>Response Message Body - Read a Container Object using CDMI (Sheet 1 of 2)
    :header-rows: 1
    :widths: auto
    :align: center 


    * - Field Name
      - Type
      - Description
      - Requirement
    * - objectType
      - JSON String
      - "application/cdmi-container"
      - Mandatory
    * - objectID
      - JSON String
      - Object ID of the object
      - Mandatory
    * - objectName
      - JSON String
      - Name of the object


        * For objects in a container, the objectName field shall be returned. 
        * For objects not in a container (objects that are only accessible by ID), the objectName field does not exist and shall not be returned. 

      - Conditional
    * - parentURI
      - JSON String
      - URI for the parent object


        * For objects in a container, the parentURI field shall be returned. 
        * For objects not in a container (objects that are only accessible by ID), the parentURI field does not exist and shall not be returned. 

Appending the objectName to the parentURI shall always produce a valid URI for the object. 
      - Conditional
    * - parentID
      - JSON String
      - Object ID of the parent container object


        * For objects in a container, the parentID field shall be returned. 
        * For objects not in a container (objects that are only accessible by ID), the parentID field does not exist and shall not be returned.

      - Conditional
    * - domainURI
      - JSON String
      - URI of the owning domain
      - Mandatory
    * - capabilitiesURI
      - JSON String
      - URI to the capabilities for the object
      - Mandatory
    * - completionStatus
      - JSON String
      - A string indicating if the object is still in the process of being created or updated by another operation, and after that operation is complete, indicates if it was successfully created or updated or if an error occurred.
The value shall be the string "Processing", the string "Complete", or an error string starting with the value "Error".
      - Mandatory
    * - percentComplete
      - JSON String
      - 

        * When the value of completionStatus is "Processing", this field, if provided, shall indicate the percentage of completion as a numeric integer value from 0 through 100. 
        * When the value of completionStatus is "Complete", this field, if provided, shall contain the value "100". 
        * When the value of completionStatus is "Error", this field, if provided, may contain any integer value from 0 through 100.

      - Optional
    * - metadata
      - JSON Object
      - Metadata for the container object. This field includes any user and data system metadata specified in the request body metadata field, along with storage system metadata generated by the cloud storage system. See :ref:`Metadata` for a further description of metadata.
      - Mandatory
    * - exports
      - JSON Object
      - A structure for each protocol that is enabled for this container object (see :ref:`Exported Protocols`)
      - Optionala
    * - snapshots
      - JSON Array of JSON Strings
      - URIs of the snapshot container objects
      - Optionala
    * - childrenrange
      - JSON String 
      - The children of the container expressed as a range. If a range of children is requested, this field indicates the children returned as a range.
      - Mandatory
    * - children
      - JSON Array of JSON Strings
      - Names of the children objects in the container object. When a client uses a child name in a request URI or a header URI, the client shall escape reserved characters  according to :rfc:`3986`
, e.g., a "%" character in a child name shall be replaced with "%25". 


        * Children that are container objects shall have "/" appended to the child name.
        * Children that are references shall have "?" appended to the child name.

      - Mandatory
    * <TH ROWSPAN="1" COLSPAN="4">
aReturned only if present.


If individual fields are specified in the GET request, only these fields are returned in the result body. Optional fields that are requested but do not exist are omitted from the result body.
</DIV>
<DIV>

Response Status
-----

:ref:`HTTP Status Codes - Read a Container Object using CDMI` describes the HTTP status codes that occur when reading a container object using CDMI. 


.. list-table:: <A NAME="50532466_35606"></A>HTTP Status Codes - Read a Container Object using CDMI
    :header-rows: 1
    :widths: auto
    :align: center 


    * - HTTP Status
      - Description
    * - ``200 OK``

      - The metadata for the container object is provided in the message body.
    * - ``302 Found``

      - The resource is a reference to another resource.
    * - ``400 Bad Request``

      - The request contains invalid parameters or field names.
    * - ``401 Unauthorized``

      - The authentication credentials are missing or invalid.
    * - ``403 Forbidden``

      - The client lacks the proper authorization to perform this request.
    * - ``404 Not Found``

      - The resource was not found at the specified URI.
    * - ``406 Not Acceptable``

      - The server is unable to provide the object in the content type specified in the Accept header.

</DIV>
<DIV>

Examples
-----
<DIV>
#. GET to the container object URI to read all the fields of the container object:

    .. code-block:: http


    GET /MyContainer/ HTTP/1.1

    Host: cloud.example.com

    Accept: application/cdmi-container

    X-CDMI-Specification-Version: 1.1

   The following shows the response.

    HTTP/1.1 200 OK

    Content-Type: application/cdmi-container

    X-CDMI-Specification-Version: 1.1

    &nbsp;

    {

        "objectType" : "application/cdmi-container",

        "objectID" : "00007ED900104E1D14771DC67C27BF8B",

        "objectName" : "MyContainer/",

        "parentURI" : "/",

        "parentID" : "00007E7F0010128E42D87EE34F5A6560",

        "domainURI" : "/cdmi_domains/MyDomain/",

        "capabilitiesURI" : "/cdmi_capabilities/container/",

        "completionStatus" : "Complete",

        "metadata" : {

            ...

        },

        "exports" : {

        "OCCI/iSCSI": {

            "identifier": "00007E7F00104BE66AB53A9572F9F51E",

            "permissions": [

                "http://example.com/compute/0/",

                "http://example.com/compute/1/"

            ]

        },

            "Network/NFSv4" : {

                "identifier" : "/users",

                "permissions" : "domain" 

            },

            "childrenrange" : "0-4",

            "children" : [

                "red",

                "green",

                "yellow",

                "orange/",

                "purple/" 

            ] 

        }

    }
</DIV>
<DIV>
#. GET to the container object URI to read parentURI and children of the container object:

    .. code-block:: http


    GET /MyContainer/?parentURI;children HTTP/1.1

    Host: cloud.example.com

    Accept: application/cdmi-container

    X-CDMI-Specification-Version: 1.1

   The following shows the response.

    HTTP/1.1 200 OK

    Content-Type: application/cdmi-container

    X-CDMI-Specification-Version: 1.1

    &nbsp;

    {

        "parentURI" : "/",

        "children" : [

            "red",

            "green",

            "yellow",

            "orange/",

            "purple/" 

        ]

    }
</DIV>
<DIV>
#. GET to the container object URI to read children 0..2 and childrenrange of the container object:

    .. code-block:: http


    GET /MyContainer/?childrenrange;children:0-2 HTTP/1.1

    Host: cloud.example.com

    Accept: application/cdmi-container

    X-CDMI-Specification-Version: 1.1

   The following shows the response.

    HTTP/1.1 200 OK

    Content-Type: application/cdmi-container

    X-CDMI-Specification-Version: 1.1

    &nbsp;

    {

        "childrenrange" : "0-2",

        "children" : [

            "red",

            "green",

            "yellow" 

        ]

    }
</DIV>
<DIV>
#. GET to the container object by ID to read children 0..2 and childrenrange of the container object: 

    .. code-block:: http


    GET /cdmi_objectid/0000706D0010B84FAD185C425D8B537E/?childrenrange;children:0-2 HTTP/1.1 

    Host: cloud.example.com 

    Accept: application/cdmi-container 

    X-CDMI-Specification-Version: 1.1

   The following shows the response.

    HTTP/1.1 200 OK 

    Content-Type: application/cdmi-container

    X-CDMI-Specification-Version: 1.1

    &nbsp;

    {

        "childrenrange": "0-2",

        "children": [

            "red",

            "green",

            "yellow"

        ]

    }
</DIV>
</DIV>
</DIV>
<DIV>
.. _50532466__Ref126289824:
.. _50532466__Ref126289795:
<A NAME="50532466__Ref126289752"></A>Update a Container Object using CDMI
************************
<DIV>

Synopsis
-----

To update some or all fields in an existing container object, the following request shall be performed:

    PUT &lt;root URI&gt;/&lt;ContainerName&gt;/&lt;TheContainerName&gt;/

To add, update, and remove specific metadata items of an existing container object, the following request shall be performed:

    PUT &lt;root URI&gt;/&lt;ContainerName&gt;/&lt;TheContainerName&gt;/?metadata:&lt;metadataname&gt;;...
<DIV>
Where:


* &lt;root URI&gt; is the path to the CDMI cloud.
* &lt;ContainerName&gt; is zero or more intermediate container objects.
* &lt;TheContainerName&gt; is the name of the container object to be updated.


The container object shall also be accessible at &lt;root URI&gt;/cdmi_objectid/&lt;objectID&gt;/. An update shall not result in a change to the object ID.
</DIV>
</DIV>
<DIV>

Delayed Completion of Snapshot
-----

If the creation of a snapshot (see :ref:`CDMI Snapshots`) is requested by including a snapshot field in the request message body, the server may return an HTTP status code of ``202 Accepted``. Such a response has the following implications:


* With an HTTP status code of ``202 Accepted``, the server implies that the following checks have passed:
<LI CLASS="Bullet-Indent">
user authorization for creating the snapshot, </LI>
<LI CLASS="Bullet-Indent">
user authorization for read access to the container object, and</LI>
<LI CLASS="Bullet-2">
availability of space to create the snapshot or at least enough space to create a URI to report an error.</LI>
* A client might not be able to immediately access the snapshot, e.g., due to delays resulting from the implementation’s use of eventual consistency.


The client performs GET operations to the snapshot URI to track the progress of the operation. In particular, the server returns two fields in its response body to indicate progress: 


* A completionStatus field contains either "Processing", "Complete", or an error string starting with the value "Error".
* An optional percentComplete field contains the percentage that the accepted PUT has completed (0 to 100). GET does not return any value for the object when completionStatus is not "Complete".


When the final result of the snapshot operation is an error, the snapshot URI is created with the completionStatus field set to the error message. It is the client's responsibility to delete the URI after the error has been noted.
</DIV>
<DIV>

Capabilities 
-----

The following capabilities describe the supported operations that may be performed when updating an existing container object:


* Support for the ability to modify the metadata of an existing container object is indicated by the presence of the cdmi_modify_metadata capability in the specified container object.
* Support for the ability to snapshot the contents of an existing container object is indicated by the presence of the cdmi_snapshot capability in the specified container object.
* Support for the ability to add an exported protocol to an existing container object is indicated by the presence of the cdmi_export_&lt;protocol&gt; capabilities for the specified container object.

</DIV>
<DIV>

Request Headers
-----

The HTTP request headers for updating a CDMI container object using CDMI are shown in :ref:`Request Headers - Update a Container Object using CDMI`. 


.. list-table:: Request Headers - Update a Container Object using CDMI<A NAME="50532466_99107"></A>
    :header-rows: 1
    :widths: auto
    :align: center 


    * - Header
      - Type
      - Description
      - Requirement
    * - Content-Type
      - Header String
      - "application/cdmi-container"
      - Mandatory
    * - X-CDMI-Specification-Version
      - Header String
      - A comma-separated list of versions that the client supports, e.g., "1.1, 1.5, 2.0"
      - Mandatory

</DIV>
<DIV>

Request Message Body
-----

The request message body fields for updating a container object using CDMI are shown in :ref:`Request Message Body - Update a Container Object using CDMI`.


.. list-table:: <A NAME="50532466_57522"></A>Request Message Body - Update a Container Object using CDMI<BR>
    :header-rows: 1
    :widths: auto
    :align: center 


  (Sheet 1 of 3)
    * - Field Name
      - Type
      - Description
      - Requirement
    * - metadata
      - JSON Object
      - Metadata for the container object. If present, the new metadata specified replaces the existing object metadata. If individual metadata items are specified in the URI, only those items are replaced; other items are preserved. 
See :ref:`Metadata` for a further description of metadata.
      - Optional
    * - domainURI
      - JSON String
      - URI of the owning domain


        * If different from the parent domain, the user shall have the "cross-domain" privilege (see cdmi_member_privileges in :ref:`Required Settings for Domain Member User Objects`).
        * If not specified, the parent domain shall be used.

      - Optional
    * - snapshot
      - JSON String
      - Name of the snapshot to be taken. This is not a URL, but rather, the final component of the absolute URL where the snapshot will exist when the snapshot operation successfully completes. 


        * If a snapshot is added or changed, the PUT operation only returns after the snapshot is added to the snapshot list. 
        * After they are created, snapshots may be accessed as children container objects under the cdmi_snapshots child container object of the container object receiving a snapshot.
        * When creating a snapshot with the same name as an existing snapshot, the new snapshot will replace the existing snapshot.

      - Optional
    * - deserialize
      - JSON String
      - URI of a CDMI container object that shall be deserialized to update an existing container object. The object ID of the serialized container object shall match the object ID of the destination container object. 


        * If the serialized container object does not contain children, the update is applied only to the container object, and any existing children are left as is. 
        * If the serialized container object does contain children, then creates, updates, and deletes are recursively applied for each child, depending on the differences between the provided serialized state and the current state of the child.

      - Optionala
    * - copy
      - JSON String
      - URI of a CDMI container object that shall be copied into the existing container object. Only the contents of the container object itself shall be copied, not any children of the container object." 
with 
"URI of a source CDMI container object that shall be copied into the existing destination container object. 


        * If the destination container object URI and the copy source object URI both do not specify individual fields, the destination container object shall be replaced with the source container object, including all child objects under the source container object. 
        * If the destination container object URI or the copy source object URI specifies individual fields, only the fields specified shall be used to update the destination container object. If specified fields are not present in the source, these fields shall be ignored. 
        * If the destination container object URI and the copy source object URI both specify fields, an HTTP status code of ``400 Bad Request``
 shall be returned to the client. 

When copying a container object, exported protocols are not preserved across the copy. 
If there are insufficient permissions to read the container object at the source URI or create the container object at the destination URI, or if the read operation fails, the copy shall return an HTTP status code of ``400 Bad Request``
, and the destination container object shall not be updated. 
      - Optionala
    * - deserializevalue
      - JSON Sting
      - A container object serialized as specified in :rfc:`4648`. 
The object ID of the serialized container object shall match the object ID of the destination container object. Otherwise, the server shall return an HTTP status code of ``400 Bad Request``
.


        * If the serialized container object does not contain children, the update is applied only to the container object, and any existing children are left as is. 
        * If the serialized container object does contain children, then creates, updates, and deletes are recursively applied for each child, depending on the differences between the provided serialized state and the current state of the children.

      - Optionala
    * - exports
      - JSON Object
      - A structure for each protocol that is enabled for this container object (see :ref:`Exported Protocols`). If an exported protocol is added or changed, the PUT operation only returns after the export operation has completed.
      - Optional
    * <TH ROWSPAN="1" COLSPAN="4">
aOnly one of these fields shall be specified in any given operation. Except for value, these fields shall not be stored.

</DIV>
<DIV>

Response Header
-----

The HTTP response header for updating a CDMI container object using CDMI is shown in :ref:`Response Header - Update a Container Object using CDMI`. 


.. list-table:: <A NAME="50532466_49613"></A>Response Header - Update a Container Object using CDMI
    :header-rows: 1
    :widths: auto
    :align: center 


    * - Header
      - Type
      - Description
      - Requirement
    * - Location
      - Header String
      - The server shall respond with an absolute URI to which the reference redirects if the object is a reference.
      - Conditional

</DIV>
<DIV>

Response Message Body 
-----

A response body may be provided as per :rfc:`2616`.
</DIV>
<DIV>

Response Status
-----

:ref:`HTTP Status Codes - Update a Container Object using CDMI` describes the HTTP status codes that occur when updating a container object using CDMI. 


.. list-table:: <A NAME="50532466_60012"></A>HTTP Status Codes - Update a Container Object using CDMI
    :header-rows: 1
    :widths: auto
    :align: center 


    * - HTTP Status
      - Description
    * - ``204 No Content``

      - The data object content was returned in the response.
    * - ``202 Accepted``

      - The container or  snapshot (subcontainer object) is in the process of being created. The CDMI client should montitor the completionStatus and percentComplete fields to determine the current status of the operation.
    * - ``302 Found``

      - The resource is a reference to another resource.
    * - ``400 Bad Request``

      - The request contains invalid parameters or field names.
    * - ``401 Unauthorized``

      - The authentication credentials are missing or invalid.
    * - ``403 Forbidden``

      - The client lacks the proper authorization to perform this request.
    * - ``404 Not Found``

      - The resource was not found at the specified URI.
    * - ``409 Conflict``

      - The operation conflicts with a non-CDMI access protocol lock or may cause a state transition error on the server.

</DIV>
<DIV>

Examples
-----
<DIV>
#. PUT to the container object URI to set new field values:

    .. code-block:: http


    PUT /MyContainer/ HTTP/1.1

    Host: cloud.example.com

    Content-Type: application/cdmi-container

    X-CDMI-Specification-Version: 1.1

    &nbsp;

    {

        "metadata" : {

            

        } ,

        "exports" : {

            "OCCI/iSCSI": {

            "identifier": "00007E7F00104BE66AB53A9572F9F51E",

            "permissions": [

                "http://example.com/compute/0/",

                "http://example.com/compute/1/"

            ]

        },

            "Network/NFSv4" : {

                "identifier" : "/users",

                "permissions" : "domain" 

            } 

        }

    }

   The following shows the response.

    HTTP/1.1 204 No Content
</DIV>
<DIV>
#. PUT to the container object URI to set a new exported protocol value:

    .. code-block:: http


    PUT /MyContainer/?exports HTTP/1.1

    Host: cloud.example.com

    Content-Type: application/cdmi-container

    X-CDMI-Specification-Version: 1.1

    &nbsp;

    {

        "exports" : {

            "OCCI/iSCSI" : {

                "identifier" : "00007ED900104E1D14771DC67C27BF8B",

                "permissions" : "00007E7F00104EB781F900791C70106C" 

            } ,

            "Network/NFSv4" : {

                "identifier" : "/users",

                "permissions" : "domain" 

            } 

        }

    }

   The following shows the response.

    HTTP/1.1 204 No Content
</DIV>
</DIV>
</DIV>
<DIV>

Delete a Container Object using CDMI
************************
<DIV>

Synopsis
-----

To delete an existing container object, including all contained children and snapshots, the following request shall be performed:

    DELETE &lt;root URI&gt;/&lt;ContainerName&gt;/&lt;TheContainerName&gt;/ 
<DIV>
Where:


* &lt;root URI&gt; is the path to the CDMI cloud.
* &lt;ContainerName&gt; is zero or more intermediate container objects.
* &lt;TheContainerName&gt; is the name of the container object to be deleted.


The object shall also be accessible at &lt;root URI&gt;/cdmi_objectid/&lt;objectID&gt;/.
</DIV>
</DIV>
<DIV>

Capability 
-----

The following capability describes the supported operations that may be performed when deleting an existing container object:


* Support for the ability to delete an existing container object is indicated by the presence of the cdmi_delete_container capability in the specified container object.

</DIV>
<DIV>

Request Header
-----

The HTTP request header for deleting a CDMI container object using CDMI is shown in :ref:`Request Header - Delete a Container Object using CDMI`. 


.. list-table:: Request Header - Delete a Container Object using CDMI<A NAME="50532466_96514"></A>
    :header-rows: 1
    :widths: auto
    :align: center 


    * - Header
      - Type
      - Description
      - Requirement
    * - X-CDMI-Specification-Version
      - Header String
      - A comma-separated list of versions that the client supports, e.g., "1.1, 1.5, 2.0"
      - Mandatory

</DIV>
<DIV>

Request Message Body 
-----

A request body may be provided as per :rfc:`2616`.
</DIV>
<DIV>

Response Headers 
-----

Response headers may be provided as per :rfc:`2616`.
</DIV>
<DIV>

Response Message Body 
-----

A response body may be provided as per :rfc:`2616`.
</DIV>
<DIV>

Response Status
-----

:ref:`HTTP Status Codes - Delete a Container Object using CDMI` describes the HTTP status codes that occur when deleting a container object using CDMI. 


.. list-table:: <A NAME="50532466_36618"></A>HTTP Status Codes - Delete a Container Object using CDMI
    :header-rows: 1
    :widths: auto
    :align: center 


    * - HTTP Status
      - Description
    * - ``204 No Content``

      - The container object was successfully deleted.
    * - ``400 Bad Request``

      - The request contains invalid parameters or field names.
    * - ``401 Unauthorized``

      - The authentication credentials are missing or invalid.
    * - ``403 Forbidden``

      - The client lacks the proper authorization to perform this request.
    * - ``404 Not Found``

      - The resource was not found at the specified URI.
    * - ``409 Conflict``

      - The operation conflicts with a non-CDMI access protocol lock or may cause a state transition error on the server.

</DIV>
<DIV>

Example
-----
<DIV>
<H6 CLASS="Example">
DELETE to the container object URI:</H6>

    DELETE /MyContainer/ HTTP/1.1

    Host: cloud.example.com

    X-CDMI-Specification-Version: 1.1

   The following shows the response.

    HTTP/1.1 204 No Content
</DIV>
</DIV>
</DIV>
<DIV>
.. _50532466_90077:
Create (POST) a New Data Object using CDMI
************************
<DIV>

Synopsis
-----

To create a new data object in a specified container where the name of the data object is a server-assigned object identifier, the following request shall be performed:

    POST &lt;root URI&gt;/&lt;ContainerName&gt;/

To create a new data object where the data object does not belong to a container and is only accessible by ID (see :ref:`Object Model for CDMI`), the following request shall be performed:

    POST &lt;root URI&gt;/cdmi_objectid/
<DIV>
Where:


* &lt;root URI&gt; is the path to the CDMI cloud.
* &lt;ContainerName&gt; is zero or more intermediate container objects that already exist, with one slash (i.e., "/") between each pair of container object names.


If created in "/cdmi_objectid/", the data object shall be accessible at &lt;root URI&gt;/cdmi_objectid/&lt;objectID&gt;. 

If created in a container, the data object shall be accessible as a child of the container with a server-assigned name, and shall also be accessible at &lt;root URI&gt;/cdmi_objectid/&lt;objectID&gt;. 
</DIV>
</DIV>
<DIV>

Delayed Completion of Create
-----

In response to a create operation for a data object, the server may return an HTTP status code of ``202 Accepted`` to indicate that the object is in the process of being created. This response is useful for long-running operations (e.g., copying a large data object from a source URI). Such a response has the following implications.


* The server shall return a Location header with an absolute URI to the object to be created along with an HTTP status code of ``202 Accepted``.
* With an HTTP status code of ``202 Accepted``, the server implies that the following checks have passed:
<LI CLASS="Bullet-Indent">
user authorization for creating the object;</LI>
<LI CLASS="Bullet-Indent">
user authorization for read access to any source object for move, copy, serialize, or deserialize; and</LI>
<LI CLASS="Bullet-Indent">
availability of space to create the object or at least enough space to create a URI to report an error.</LI>
* A client might not be able to immediately access the created object, e.g., due to delays resulting from the implementation’s use of eventual consistency. 


The client performs GET operations to the URI to track the progress of the operation. In response, the server returns two fields in its response body to indicate progress.


* A mandatory completionStatus text field contains either "Processing", "Complete", or an error string starting with the value "Error".
* An optional percentComplete field contains the percentage that the Accepted POST has completed (0 to 100). 


GET does not return any value for the object when completionStatus is not "Complete". When the final result of the create operation is an error, the URI is created with the completionStatus field set to the error message. It is the client's responsibility to delete the URI after the error has been noted.
</DIV>
<DIV>

.. _50532466_86377:
Capabilities 
-----

The following capabilities describe the supported operations that may be performed when creating a new data object by ID in "/cdmi_objectid/": 


* Support for the ability to create data objects through this operation is indicated by the presence of the cdmi_post_dataobject_by_ID system capability. 
* If the object being created in "/cdmi_objectid/" is a reference, support for that ability is indicated by the presence of the cdmi_create_reference_by_ID system capability. 
* If the new data object being created in "/cdmi_objectid/" is a copy of an existing data object, support for the ability to copy is indicated by the presence of the cdmi_copy_dataobject_by_ID system capability. 
* If the new data object being created in "/cdmi_objectid/" is the destination of a move, support for the ability to move the data object to "/cdmi_objectid/" is indicated by the presence of the cdmi_object_move_to_ID system capability. 
* If the new data object being created in "/cdmi_objectid/" is the destination of a deserialization operation, support for the ability to deserialize the data object is indicated by the presence of the cdmi_deserialize_dataobject_by_ID system capability. 
* If the new data object being created in "/cdmi_objectid/" is the destination of a serialize operation, support for the ability to serialize the data object is indicated by the presence of the cdmi_serialize_dataobject_to_ID, cdmi_serialize_container_to_ID, cdmi_serialize_domain_to_ID, or cdmi_serialize_queue_to_ID system capabilities. 


The following capabilities describe the supported operations that may be performed when creating a new data object by ID in a container: 


* Support for the ability to create data objects through this operation is indicated by the presence of both the cdmi_post_dataobject and the cdmi_create_dataobject capabilities in the specified container object. 
* If the object being created in the parent container object is a reference, support for that ability is indicated by the presence of the cdmi_create_reference capability in the parent container object. 
* If the new data object is a copy of an existing data object, support for the ability to copy is indicated by the presence of the cdmi_copy_dataobject capability in the parent container object. 
* If the new data object is the destination of a move, support for the ability to move the data object is indicated by the presence of the cdmi_move_dataobject capability in the parent container object. 
* If the new data object is the destination of a deserialize operation, support for the ability to deserialize the the data object is indicated by the presence of the cdmi_deserialize_dataobject capability in the parent container object. 
* If the new data object is the destination of a serialize operation, support for the ability to serialize the source data object is indicated by the presence of the cdmi_serialize_dataobject, cdmi_serialize_container, cdmi_serialize_domain, or cdmi_serialize_queue capabilities in the parent container object. 

</DIV>
<DIV>

.. _50532466_93684:
Request Headers
-----

The HTTP request headers for creating a new CDMI data object using CDMI are shown in :ref:`Request Headers - Create a New Data Object using CDMI`. 


.. list-table:: Request Headers - Create a New Data Object using CDMI<A NAME="50532466_12902"></A>
    :header-rows: 1
    :widths: auto
    :align: center 


    * - Header
      - Type
      - Description
      - Requirement
    * - Accept
      - Header String
      - "application/cdmi-object" or a consistent value as per clause :ref:`Content-Type Negotiation`
      - Optional
    * - Content-Type
      - Header String
      - "application/cdmi-object" or "multipart/mixed"


        * If multipart/mixed is specified, the body shall consist of at least two MIME parts, where the first part shall contain a body of content-type "application/cdmi-object" and the second and subsequent parts shall contain one or more byte ranges of the value as described in :ref:`Read a Data Object using CDMI`. 
        * If multiple byte ranges are included and the "Content-Range" header is omitted for a part, the data in the part shall be appended to the data in the preceding part, with the first part having a byte offset of zero.

      - Mandatory
    * - X-CDMI-Specification-Version
      - Header String
      - A comma-separated list of versions that the client supports, e.g., "1.1, 1.5, 2.0"
      - Mandatory
    * - X-CDMI-Partial
      - Header String 
      - "true". Indicates that the newly created object is part of a series of writes and the value has not yet been fully populated. If X-CDMI-Partial is present, the completionStatus field in the response body shall be set to "Processing". X-CDMI-Partial works across CDMI and non-CDMI operations.
      - Optional

</DIV>
<DIV>

.. _50532466_53211:
Request Message Body
-----

The request message body fields for creating a new data object using CDMI are shown in :ref:`Request Message Body - Create a New Data Object using CDMI`.


.. list-table:: <A NAME="50532466_64573"></A>Request Message Body - Create a New Data Object using CDMI <BR>
    :header-rows: 1
    :widths: auto
    :align: center 


 (Sheet 1 of 3)
    * - Field Name
      - Type
      - Description
      - Requirement
    * - mimetype
      - JSON String
      - MIME type of the data contained within the value field of the data object


        * This field may be included when creating by value or when deserializing, serializing, copying, or moving a data object.
        * If this field is not included and multi-part MIME is not being used, the value of "text/plain" shall be assigned as the field value.
        * If this field is not included and multi-part MIME is being used, the value of the "Content-Type" header of the second MIME part shall be assigned as the field value.
        * This field shall be stored as part of the data object.
        * This field shall not be included when creating a reference.
        * This mimetype field value shall be converted to lower case before being stored. 

      - Optional
    * - metadata
      - JSON Object
      - Metadata for the data object


        * If this field is included when deserializing, serializing, copying, or moving a data object, the value provided in this field shall replace the metadata from the source URI. 
        * If this field is not included when deserializing, serializing, copying, or moving a data object, the metadata from the source URI shall be used. 
        * If this field is included when creating a new data object by specifying a value, the value provided in this field shall be used as the metadata. 
        * If this field is not included when creating a new data object by specifying a value, an empty JSON object (i.e., "{}") shall be assigned as the field value. 
        * This field shall not be included when referencing a data object.

      - Optional
    * - domainURI
      - JSON String
      - URI of the owning domain


        * Any domain may be specified, and the "cross_domain" privilege is not required (see :ref:`cdmi_member_privileges` in :ref:`Required Settings for Domain Member User Objects`).
        * If not specified, the root domain "/cdmi_domains/" shall be used.

      - Optional
    * - deserialize
      - JSON String
      - URI of a CDMI data object that shall be deserialized to create the new data object
      - Optionala
    * - serialize
      - JSON String
      - URI of a CDMI object that shall be serialized into the new data object
      - Optionala
    * - copy
      - JSON String
      - URI of a CDMI data object or queue object that shall be copied into the new data object
      - Optionala
    * - move
      - JSON String
      - URI of a CDMI data object or queue object value that shall be copied into the new data object. The data object or queue object value at the source URI shall be removed upon the successful completion of the copy.
      - Optionala
    * - reference
      - JSON String
      - URI of a CDMI data object that shall be redirected to by a reference. If other fields are supplied when creating a reference, the server shall respond with an HTTP status code of ``400 Bad Request``
.
      - Optionala
    * - deserializevalue
      - JSON String
      - A data object serialized as specified in :rfc:`4648`.


        * If multi-part MIME is being used and this field contains the value of the MIME boundary parameter, the contents of the second MIME part shall be assigned as the field value. 
        * If the serialized data object in the second MIME part does not include a value field, the contents of the third MIME part shall be assigned as the field value of the value field.

      - Optionala
    * - valuetransferencoding
      - JSON  String
      - The value transfer encoding used for the container object value. Two value transfer encodings are defined:


        * "utf-8" indicates that the data object contains a valid UTF-8 string, and it shall be transported as a UTF-8 string in the value field. 
        * "base64" indicates that the data object may contain arbitrary binary sequences, and it shall be transported as a base 64-encoded string in the value field. Setting the contents of the data object value field to any value other than a valid base 64 string shall result in an HTTP status code of ``400 Bad Request``
 being returned to the client.

This field shall only be included when creating a data object by value. 


        * If this field is not included and multi-part MIME is not being used, the value of "utf-8" shall be assigned as the field value.
        * If this field is not included and multi-part MIME is being used, the value of "utf-8" shall be assigned as the field value if the "Content-Type" header of the second and all subsequent MIME parts includes the charset parameter as defined in RFC 2046 of "utf-8" (e.g., ";charset=utf-8"). Otherwise, the value of "base64" shall be assigned as the field value. This field applies only to the encoding of the value when represented in JSON; the "Content-Transfer-Encoding" header of the part specifies the encoding of the value within a multi-part MIME request, as defined in :rfc:`2045`.

This field shall be stored as part of the object.
      - Optional
    * - value
      - JSON String
      - The data object value


        * If this field is not included and multi-part MIME is not being used, an empty JSON String (i.e., "") shall be assigned as the field value.
        * If this field is not included and multi-part MIME is being used, the contents of the second MIME part shall be assigned as the field value.
        * If the valuetransferencoding field indicates UTF-8 encoding, the value shall be a UTF-8 string escaped using the JSON escaping rules described in :rfc:`4627`.
        * If the valuetransferencoding field indicates base 64 encoding, the value shall be first encoded using the base 64 encoding rules described in :rfc:`4648`.

      - Optionala
    * <TH ROWSPAN="1" COLSPAN="4">
aOnly one of these fields shall be specified in any given operation. Except for value, these fields shall not be stored. If more than one of these fields is supplied, the server shall respond with an HTTP status code of ``400 Bad Request``
. 

</DIV>
<DIV>

Response Headers
-----

The HTTP response headers for creating a new CDMI data object using CDMI are shown in :ref:`Response Headers - Create a New Data Object using CDMI`. 


.. list-table:: Response Headers - Create a New Data Object using CDMI <A NAME="50532466_75738"></A>
    :header-rows: 1
    :widths: auto
    :align: center 


    * - Header
      - Type
      - Description
      - Requirement
    * - Content-Type
      - Header String
      - "application/cdmi-object"
      - Mandatory
    * - X-CDMI-Specification-Version
      - Header String 
      - The server shall respond with the highest version supported by both the client and the server, e.g., "1.1".
If the server does not support any of the versions that the client supports, the server shall return an HTTP status code of ``400 Bad Request``
.
      - Mandatory
    * - Location
      - Header String 
      - The unique absolute URI for the new data object as assigned by the system. In the absence of file name information from the client, the system shall assign the URI in the form: http://host:port/&lt;root URI&gt;/&lt;ContainerName&gt;/&lt;ObjectID&gt; or https://host:port/&lt;root URI&gt;/&lt;ContainerName&gt;/&lt;ObjectID&gt;.
      - Mandatory

</DIV>
<DIV>

Response Message Body
-----

The response message body fields for creating a new CDMI data object using CDMI are shown in :ref:`Response Message Body - Create a New Data Object using CDMI`.


.. list-table:: <A NAME="50532466_73966"></A>Response Message Body - Create a New Data Object using CDMI  (Sheet 1 of 2)
    :header-rows: 1
    :widths: auto
    :align: center 


    * - Field Name
      - Type
      - Description
      - Requirement
    * - objectType
      - JSON String
      - "application/cdmi-object"
      - Mandatory
    * - objectID
      - JSON String
      - Object ID of the object
      - Mandatory
    * - objectName
      - JSON String
      - Name of the object


        * For objects in a container, the objectName field shall be returned. 
        * For objects not in a container (objects that are only accessible by ID), the objectName field does not exist and shall not be returned. 

      - Conditional
    * - parentURI
      - JSON String
      - URI for the parent object


        * For objects in a container, the parentURI field shall be returned. 
        * For objects not in a container (objects that are only accessible by ID), the parentURI field does not exist and shall not be returned. 

Appending the objectName to the parentURI shall always produce a valid URI for the object. 
      - Conditional
    * - parentID
      - JSON String
      - Object ID of the parent container object


        * For objects in a container, the parentID field shall be returned. 
        * For objects not in a container (objects that are only accessible by ID), the parentID field does not exist and shall not be returned.

      - Conditional
    * - domainURI
      - JSON String
      - URI of the owning domain
      - Mandatory
    * - capabilitiesURI
      - JSON String
      - URI to the capabilities for the object
      - Mandatory
    * - completionStatus
      - JSON String
      - A string indicating if the object is still in the process of being created or updated by another operation, and after that operation is complete, indicates if it was successfully created or updated or if an error occurred.
The value shall be the string "Processing", the string "Complete", or an error string starting with the value "Error".
      - Mandatory
    * - percentComplete
      - JSON String
      - 

        * When the value of completionStatus is "Processing", this field, if provided, shall indicate the percentage of completion as a numeric integer value from 0 through 100. 
        * When the value of completionStatus is "Complete", this field, if provided, shall contain the value "100". 
        * When the value of completionStatus is "Error", this field, if provided, may contain any integer value from 0 through 100.

      - Optional
    * - mimetype
      - JSON String
      - MIME type of the value of the data object
      - Mandatory
    * - metadata
      - JSON Object
      - Metadata for the data object. This field includes any user and data system metadata specified in the request body metadata field, along with storage system metadata generated by the cloud storage system.
See :ref:`Metadata` for a further description of metadata.
      - Mandatory

</DIV>
<DIV>

Response Status
-----

:ref:`HTTP Status Codes - Create a New Data Object using CDMI` describes the HTTP status codes that occur when creating a new data object using CDMI. 


.. list-table:: <A NAME="50532466_62594"></A>HTTP Status Codes - Create a New Data Object using CDMI
    :header-rows: 1
    :widths: auto
    :align: center 


    * - HTTP Status
      - Description
    * - ``201 Created``

      - The new data object was created.
    * - ``202 Accepted``

      - The data object is in the process of being created. The CDMI client should monitor the completionStatus and percentComplete fields to determine the current status of the operation.
    * - ``400 Bad Request``

      - The request contains invalid parameters or field names.
    * - ``401 Unauthorized``

      - The authentication credentials are missing or invalid.
    * - ``403 Forbidden``

      - The client lacks the proper authorization to perform this request.
    * - ``404 Not Found``

      - The resource was not found at the specified URI.
    * - ``409 Conflict``

      - The operation conflicts with a non-CDMI access protocol lock or may cause a state transition error on the server.

</DIV>
<DIV>

.. _50532466_22745:
Examples
-----
<DIV>
#. POST to the container object URI the data object contents:

    .. code-block:: http


    POST /MyContainer/ HTTP/1.1

    Host: cloud.example.com

    Accept: application/cdmi-object

    Content-Type: application/cdmi-object

    X-CDMI-Specification-Version: 1.1

    &nbsp;

    {

        "mimetype" : "text/plain",

        "metadata" : {

            

        },

        "value" : "This is the Value of this Data Object"

    }

   The following shows the response.

    HTTP/1.1 201 Created

    Content-Type: application/cdmi-object

    X-CDMI-Specification-Version: 1.1

    Location: http://cloud.example.com/MyContainer/00007ED900104E1D14771DC67C27BF8B 

    &nbsp;

    {

        "objectType" : "application/cdmi-object",

        "objectID" : "00007ED900104E1D14771DC67C27BF8B",

        "objectName" : "00007ED900104E1D14771DC67C27BF8B",

        "parentURI" : "/MyContainer/",

        "parentID" : "00007ED900104E1D14771DC67C27BF8B",

        "domainURI" : "/cdmi_domains/MyDomain/",

        "capabilitiesURI" : "/cdmi_capabilities/dataobject/",

        "completionStatus" : "Complete",

        "mimetype" : "text/plain",

        "metadata" : {

            ...

        }

    }
</DIV>
<DIV>
#. POST to the object ID URI the data object contents:

    .. code-block:: http


    POST /cdmi_objectid/ HTTP/1.1 

    Host: cloud.example.com 

    Accept: application/cdmi-object 

    Content-Type: application/cdmi-object 

    X-CDMI-Specification-Version: 1.1 

    &nbsp;

    {

        "mimetype": "text/plain",

        "domainURI": "/cdmi_domains/MyDomain/",

        "value": "This is the Value of this Data Object"

    } 

   The following shows the response.

    HTTP/1.1 201 Created 

    Location: http://cloud.example.com/cdmi_objectid/00007ED900104E1D14771DC67C27BF8B

    Content-Type: application/cdmi-object 

    X-CDMI-Specification-Version: 1.1 

    &nbsp;

    {

        "objectType": "application/cdmi-object",

        "objectID": "00007ED900104E1D14771DC67C27BF8B",

        "domainURI": "/cdmi_domains/MyDomain/",

        "capabilitiesURI": "/cdmi_capabilities/dataobject/",

        "completionStatus": "Complete",

        "mimetype": "text/plain",

        "metadata": {

            "cdmi_acl": [

                {

                    "acetype": "ALLOW",

                    "identifier": "OWNER@",

                    "aceflags": "NO_FLAGS",

                    "acemask": "ALL_PERMS"

                }

            ],

    				...

        }

    }
</DIV>
<DIV>
#. POST to the object ID URI the data object fields and binary contents using multi-part MIME:

    .. code-block:: http


    POST /cdmi_objectid/ HTTP/1.1 

    Host: cloud.example.com 

    Accept: application/cdmi-object 

    Content-Type: multipart/mixed; boundary=gc0p4Jq0M2Yt08j34c0p

    X-CDMI-Specification-Version: 1.1

    

    --gc0p4Jq0M2Yt08j34c0p

    Content-Type: application/cdmi-object

    

    {

    	"domainURI": "/cdmi_domains/MyDomain/",

    	"metadata": {

    		"colour": "blue"

    	}

    }

    

    --gc0p4Jq0M2Yt08j34c0p

    Content-Type: application/octet-stream

    Content-Transfer-Encoding: binary

    

    &lt;37 bytes of binary data&gt;

    

    --gc0p4Jq0M2Yt08j34c0p--

   The following shows the response.

    HTTP/1.1 201 Created

    Location: http://cloud.example.com/cdmi_objectid/00007ED90010C2414303B5C6D4F83170

    Content-Type: application/cdmi-object 

    X-CDMI-Specification-Version: 1.1

    

    {

    	"objectType": "application/cdmi-object", 

    	"objectID": "00007ED90010C2414303B5C6D4F83170", 

    	"domainURI": "/cdmi_domains/MyDomain/", 

    	"capabilitiesURI": "/cdmi_capabilities/dataobject/", 

    	"completionStatus": "Complete", 

    	"mimetype": "application/octet-stream", 

    	"metadata": {

    		"cdmi_size": "37",

    		"colour": "blue",

    		...

    	}

    }
</DIV>
</DIV>
</DIV>
<DIV>
.. _50532466_55386:
Create (POST) a New Queue Object using CDMI
************************
<DIV>

Synopsis
-----

To create a new queue object (see :ref:`Queue Object Resource Operations using CDMI`) in a specified container where the name of the queue object is a server-assigned object identifier, the following request shall be performed:

    POST &lt;root URI&gt;/&lt;ContainerName&gt;/

To create a new queue object where the queue object does not belong to a container and is only accessible by ID (see :ref:`Object Model for CDMI`), the following request shall be performed:

    POST &lt;root URI&gt;/cdmi_objectid/
<DIV>
Where:


* &lt;root URI&gt; is the path to the CDMI cloud.
* &lt;ContainerName&gt; is zero or more intermediate container objects that already exist, with one slash (i.e., "/") between each pair of container object names.


If created in "/cdmi_objectid/", the queue object shall be accessible at &lt;root URI&gt;/cdmi_objectid/&lt;objectID&gt;. 

If created in a container, the queue object shall be accessible as a child of the container with a server-assigned name, and shall also be accessible at &lt;root URI&gt;/cdmi_objectid/&lt;objectID&gt;.
</DIV>
</DIV>
<DIV>

Delayed Completion of Create
-----

On a create operation for a queue object, the server may return an HTTP status code of ``202 Accepted``. In this case, the object is in the process of being created. This response is particularly useful for long-running operations, e.g., copying a large number of queue values from a source URI. Such a response has the following implications:


* The server shall return a Location header with an absolute URI to the object to be created along with an HTTP status code of ``202 Accepted``.
* With an HTTP status code of ``202 Accepted``, the server implies that the following checks have passed:
<LI CLASS="Bullet-2">
user authorization for creating the object;</LI>
<LI CLASS="Bullet-2">
user authorization for read access to any source object for move, copy, serialize, or deserialize; and</LI>
<LI CLASS="Bullet-2">
availability of space to create the object or at least enough space to create a URI to report an error.</LI>
* A client might not be able to immediately access the created object, e.g., due to delays resulting from the implementation’s use of eventual consistency.


The client performs GET operations to the URI to track the progress of the operation. In response, the server returns two fields in its response body to indicate progress.


* A mandatory completionStatus text field contains either "Processing", "Complete", or an error string starting with the value "Error".
* An optional percentComplete field contains the percentage that the accepted POST has completed (0 to 100).


GET does not return any value for the object when completionStatus is not "Complete". When the final result of the create operation is an error, the URI is created with the completionStatus field set to the error message. It is the client's responsibility to delete the URI after the error has been noted.
</DIV>
<DIV>

.. _50532466_78121:
Capabilities
-----

The following capabilities describe the supported operations that may be performed when creating a new queue object by ID in "/cdmi_objectid/": 


* Support for the ability to create queue objects through this operation is indicated by the presence of the cdmi_post_queue_by_ID system capability. 
* If the object being created in "/cdmi_objectid/" is a reference, support for that ability is indicated by the presence of the cdmi_create_reference_by_ID system capability. 
* If the new queue object being created in "/cdmi_objectid/" is a copy of an existing queue object, support for the ability to copy is indicated by the presence of the cdmi_copy_queue_by_ID system capability. 
* If the new queue object being created in "/cdmi_objectid/" is the destination of a move, support for the ability to move the data object to "/cdmi_objectid/" is indicated by the presence of the cdmi_object_move_to_ID system capability. 
* If the new queue object being created in "/cdmi_objectid/" is the destination of a deserialization operation, support for the ability to deserialize the data object is indicated by the presence of the cdmi_deserialize_queue_by_ID system capability. 
* If the new data object is being created in "/cdmi_objectid/", support for the ability to create the value of the new data object in specified byte ranges is indicated by the presence of the "cdmi_create_value_range_by_ID" system capability.
* If the new data object is being created in a container object, support for the ability to create the value of the new data object in specified byte ranges is indicated by the presence of the "cdmi_create_value_range" capability in the parent container.


The following capabilities describe the supported operations that may be performed when creating a new queue object by ID in a container:


* Support for the ability to create queue objects through this operation is indicated by the presence of both the cdmi_post_queue and cdmi_create_queue capabilities in the specified container object.
* If the object being created in the parent container object is a reference, support for that ability is indicated by the presence of the cdmi_create_reference capability in the parent container object.
* If the new queue object is a copy of an existing queue object, support for the ability to copy is indicated by the presence of the cdmi_copy_queue capability in the parent container object.
* If the new queue object is the destination of a move, support for the ability to move the queue object is indicated by the presence of the cdmi_move_queue capability in the parent container object.
* If the new queue object is the destination of a deserialize operation, support for the ability to deserialize the the queue object is indicated by the presence of the cdmi_deserialize_queue capability in the parent container object.

</DIV>
<DIV>

.. _50532466_17223:
Request Headers
-----

The HTTP request headers for creating a new CDMI queue object using CDMI are shown in :ref:`Request Headers - Create a New Queue Object using CDMI`.


.. list-table:: <A NAME="50532466_31035"></A>Request Headers - Create a New Queue Object using CDMI
    :header-rows: 1
    :widths: auto
    :align: center 


    * - Header
      - Type
      - Description
      - Requirement
    * - Accept
      - Header String
      - "application/cdmi-queue" or a consistent value as per clause :ref:`Content-Type Negotiation`
      - Optional
    * - Content-Type
      - Header String
      - "application/cdmi-queue"
      - Mandatory
    * - X-CDMI- Specification- Version
      - Header String
      - A comma-separated list of versions that the client supports, e.g., "1.1, 1.5, 2.0"
      - Mandatory
    * - Content-Range
      - Header String
      - A valid ranges-specifier (see :rfc:`2616` Section 14.35.1)
      - Optional

</DIV>
<DIV>

.. _50532466_25082:
Request Message Body
-----

The request message body fields for creating a new queue object using CDMI are shown in :ref:`Request Message Body - Create a New Queue Object using CDMI`.


.. list-table:: <A NAME="50532466_54354"></A>Request Message Body - Create a New Queue Object using CDMI  (Sheet 1 of 2)
    :header-rows: 1
    :widths: auto
    :align: center 


    * - Field Name
      - Type
      - Description
      - Requirement
    * - metadata
      - JSON Object
      - Metadata for the queue object


        * If this field is included when deserializing, serializing, copying, or moving a queue object, the value provided in this field shall replace the metadata from the source URI.
        * If this field is not included when deserializing, serializing, copying, or moving a queue object, the metadata from the source URI shall be used.
        * If this field is included when creating a new queue object by specifying a value, the value provided in this field shall be used as the metadata.
        * If this field is not included when creating a new queue object by specifying a value, an empty JSON object (i.e., "{}") will be assigned as the field value.
        * This field shall not be included when referencing a queue object.

      - Optional
    * - domainURI
      - JSON String
      - URI of the owning domain


        * Any domain may be specified, and the "cross_domain" privilege is not required (see :ref:`cdmi_member_privileges` in :ref:`Required Settings for Domain Member User Objects`).
        * If not specified, the root domain "/cdmi_domains/" shall be used.

      - Optional
    * - deserialize
      - JSON String
      - URI of a CDMI data object that will be deserialized to create the new queue object
      - Optionala
    * - copy
      - JSON String
      - URI of a CDMI queue object that will be copied into the new queue object
      - Optionala
    * - move
      - JSON String
      - URI of a CDMI queue object that will be copied into the new queue object. When the copy is successfully completed, the queue object at the source URI is removed.
      - Optionala
    * - reference
      - JSON String
      - URI of a CDMI queue object that shall be redirected to by a reference. If other fields are supplied when creating a reference, the server shall respond with an HTTP status code of ``400 Bad Request``
.
      - Optionala
    * - deserializevalue
      - JSON String
      - A queue object serialized as specified in :rfc:`4648`
      - Optionala
    * <TH ROWSPAN="1" COLSPAN="4">
aOnly one of these fields shall be specified in any given operation. Except for value, these fields shall not be stored. If more than one of these fields is supplied, the server shall respond with an HTTP status code of ``400 Bad Request``
.

</DIV>
<DIV>

Response Headers
-----

The response headers for creating a new CDMI queue object using CDMI are shown in :ref:`Response Headers - Create a New CDMI Queue Object using CDMI`. 


.. list-table:: <A NAME="50532466_34136"></A>Response Headers - Create a New CDMI Queue Object using CDMI
    :header-rows: 1
    :widths: auto
    :align: center 


    * - Header
      - Type
      - Description
      - Requirement
    * - Content-Type
      - Header String
      - "application/cdmi-queue"
      - Mandatory
    * - X-CDMI- Specification- Version
      - Header String
      - The server shall respond with the highest version supported by both the client and the server, e.g., "1.1".
If the server does not support any of the versions that the client supports, the server shall return an HTTP status code of ``400 Bad Request``
.
      - Mandatory
    * - Location
      - Header String
      - The unique absolute URI for the new data object as assigned by the system. In the absence of file name information from the client, the system shall assign the URI in the form: http://host:port/&lt;root URI&gt;/&lt;ContainerName&gt;/&lt;ObjectID&gt; or https://host:port/&lt;root URI&gt;/&lt;ContainerName&gt;/&lt;ObjectID&gt;.
      - Mandatory

</DIV>
<DIV>

Response Message Body
-----

The response message body fields for creating a new CDMI queue object using CDMI are shown in :ref:`Response Message Body - Create a New Queue Object using CDMI`.


.. list-table:: <A NAME="50532466_71211"></A>Response Message Body - Create a New Queue Object using CDMI  (Sheet 1 of 3)
    :header-rows: 1
    :widths: auto
    :align: center 


    * - Field Name
      - Type
      - Description
      - Requirement
    * - objectType
      - JSON String
      - "application/cdmi-queue"
      - Mandatory
    * - objectID
      - JSON String
      - Object ID of the object
      - Mandatory
    * - objectName
      - JSON String
      - Name of the object


        * For objects in a container, the objectName field shall be returned. 
        * For objects not in a container (objects that are only accessible by ID), the objectName field does not exist and shall not be returned. 

      - Conditional
    * - parentURI
      - JSON String
      - URI for the parent object


        * For objects in a container, the parentURI field shall be returned. 
        * For objects not in a container (objects that are only accessible by ID), the parentURI field does not exist and shall not be returned. 

Appending the objectName to the parentURI shall always produce a valid URI for the object. 
      - Conditional
    * - parentID
      - JSON String
      - Object ID of the parent container object


        * For objects in a container, the parentID field shall be returned. 
        * For objects not in a container (objects that are only accessible by ID), the parentID field does not exist and shall not be returned.

      - Conditional
    * - domainURI
      - JSON String
      - URI of the owning domain
      - Mandatory
    * - capabilitiesURI
      - JSON String
      - URI to the capabilities for the object
      - Mandatory
    * - completionStatus
      - JSON String
      - A string indicating if the object is still in the process of being created or updated by another operation, and after that operation is complete, indicates if it was successfully created or updated or if an error occurred.
The value shall be the string "Processing", the string "Complete", or an error string starting with the value "Error".
      - Mandatory
    * - percentComplete
      - JSON String
      - 

        * When the value of completionStatus is "Processing", this field, if provided, shall indicate the percentage of completion as a numeric integer value from 0 through 100. 
        * When the value of completionStatus is "Complete", this field, if provided, shall contain the value "100". 
        * When the value of completionStatus is "Error", this field, if provided, may contain any integer value from 0 through 100.

      - Optional
    * - metadata
      - JSON Object
      - Metadata for the queue object. This field includes any user and data system metadata specified in the request body metadata field, along with storage system metadata generated by the cloud storage system. See :ref:`Metadata` for a further description of metadata.
      - Mandatory
    * - queueValues
      - JSON String
      - The range of designators for enqueued values. Every enqueued value shall be assigned a unique, monotonically-incrementing positive integer designator, starting from 0. If no values are enqueued, an empty string shall be returned. If values are enqueued, the lowest designator, followed by a hyphen ("-"), followed by the highest designator shall be returned.
      - Mandatory

</DIV>
<DIV>

Response Status
-----

:ref:`HTTP Status Codes - Create a New CDMI Queue Object using CDMI` describes the HTTP status codes that occur when creating a new queue object using CDMI.


.. list-table:: <A NAME="50532466_70201"></A>HTTP Status Codes - Create a New CDMI Queue Object using CDMI
    :header-rows: 1
    :widths: auto
    :align: center 


    * - HTTP Status
      - Description
    * - ``201 Created``

      - The new queue object was created.
    * - ``202 Accepted``

      - The queue object is in the process of being created. The CDMI client should monitor the completionStatus and percentComplete fields to determine the current status of the operation.
    * - ``400 Bad Request``

      - The request contains invalid parameters or field names.
    * - ``401 Unauthorized``

      - The authentication credentials are missing or invalid.
    * - ``403 Forbidden``

      - The client lacks the proper authorization to perform this request.
    * - ``404 Not Found``

      - The resource was not found at the specified URI.
    * - ``409 Conflict``

      - The operation conflicts with a non-CDMI access protocol lock or could cause a state transition error on the server.

</DIV>
<DIV>

.. _50532466_28460:
Example
-----
<DIV>
<H6 CLASS="Example">
POST to the container object URI the queue object contents:</H6>

    POST /MyContainer/ HTTP/1.1

    Host: cloud.example.com

    ``Content-Type: application/cdmi-queue``

    Accept: application/cdmi-queue

    X-CDMI-Specification-Version: 1.1

    &nbsp;

    {

    }

   The following shows the response.

    HTTP/1.1 201 Created

    Content-Type: application/cdmi-queue 

    X-CDMI-Specification-Version: 1.1 

    Location: http://cloud.example.com/MyContainer/00007ED900104E1D14771DC67C27BF8B

    &nbsp;

    {

        "objectType" : "application/cdmi-queue",

        "objectID" : "00007ED900104E1D14771DC67C27BF8B",

        "objectName" : "00007ED900104E1D14771DC67C27BF8B",

        "parentURI" : "/MyContainer/",

        "parentID" : "00007ED900104E1D14771DC67C27BF8B",

        "domainURI" : "/cdmi_domains/MyDomain/",

        "capabilitiesURI" : "/cdmi_capabilities/queue/",

        "completionStatus" : "Complete",

        "metadata" : {

    				...

        },

        "queueValues" : ""

    }

&nbsp;
</DIV>
</DIV>
</DIV>
</DIV>