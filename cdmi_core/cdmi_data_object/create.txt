.. _ref_cdmi_data_object_create:

Create a Data Object using CDMI
*******************************

Synopsis
--------

To create a new data object, the following request shall be performed:

* ``PUT <root URI>/<ContainerName>/<DataObjectName>``

To create a new data object by ID, see :numref:`%s <ref_cdmi_container_object_create_post_object>`.

Where:

* ``<root URI>`` is the path to the CDMI cloud.
* ``<ContainerName>`` is zero or more intermediate containers that already exist, with one slash (i.e., "``/``") between each pair of container names.
* ``<DataObjectName>`` is the name specified for the data object to be created.

After it is created, the data object shall also be accessible at ``<root URI>/cdmi_objectid/<objectID>``.

Delayed Completion of Create
----------------------------

In response to a create operation for a data object, the server may return an HTTP status code of ``202 Accepted`` to indicate that the object is in the process of being created. This response is useful for long-running operations (e.g., copying a large data object from a source URI). Such a response has the following implications.

* The server shall return a Location header with an absolute URI to the object to be created along with an HTTP status code of ``202 Accepted``.
* With an HTTP status code of ``202 Accepted``, the server implies that the following checks have passed:

  * user authorization for creating the object;
  * user authorization for read access to any source object for move, copy, serialize, or deserialize; and
  * availability of space to create the object or at least enough space to create a URI to report an error.

* A client might not be able to immediately access the created object, e.g., due to delays resulting from the implementation’s use of eventual consistency. 

The client performs GET operations to the URI to track the progress of the operation. In response, the server returns two fields in its response body to indicate progress. 

* A mandatory ``completionStatus`` text field contains either "``Processing``", "``Complete``", or an error string starting with the value "``Error``".
* An optional ``percentComplete`` field contains the percentage of the operation that has completed (0 to 100). 

GET shall not return any value for the data object when ``completionStatus`` is not "``Complete``". If the final result of the create operation is an error, the URI is created with the ``completionStatus`` field set to the error message. It is the client's responsibility to delete the URI after the error has been noted.

.. raw:: latex

          \newpage

Capabilities
------------

Capabilities that indicate which operations are supported are shown in :numref:`tbl_cdmi_data_object_create_capabilities`.

.. tabularcolumns:: |>{\raggedright\arraybackslash}\Y{0.35}
                    |>{\raggedright\arraybackslash}\Y{0.20}
                    |>{\raggedright\arraybackslash}\Y{0.45}|

.. _tbl_cdmi_data_object_create_capabilities:

.. list-table:: Capabilities - Create a CDMI Data Object using CDMI
    :class: longtable
    :header-rows: 1
    :align: center 

    * - Capability
      - Location
      - Description
    * - cdmi_create_dataobject
      - Parent Container
      - Ability to create a new data object
    * - cdmi_create_reference
      - Parent Container
      - Ability to create a new reference
    * - cdmi_copy_dataobject
      - Parent Container
      - Ability to create a data object that is a copy of another data object
    * - cdmi_move_dataobject
      - Parent Container
      - Ability to move a data object from another container
    * - cdmi_deserialize_dataobject
      - Parent Container
      - Ability to create a data object that is deserialized from the contents of the PUT or the contents of another data object
    * - cdmi_serialize_dataobject cdmi_serialize_container cdmi_serialize_domain cdmi_serialize_queue
      - Parent Container
      - Ability to create a data object that contains a serialized representation of an existing data object, container, domain or queue
    * - cdmi_create_value_range
      - Parent Container
      - Ability to create a data object using a specified byte range
    * - cdmi_multipart_mime
      - System Wide Capability
      - Ability to create a data object using multi-part MIME

Request Headers
---------------

The HTTP request headers for creating a CDMI data object using CDMI are shown in :numref:`tbl_cdmi_data_object_create_request_headers`.

.. tabularcolumns:: |>{\raggedright\arraybackslash}\Y{0.20}
                    |>{\raggedright\arraybackslash}\Y{0.10}
                    |>{\raggedright\arraybackslash}\Y{0.55}
                    |>{\raggedright\arraybackslash}\Y{0.15}|

.. _tbl_cdmi_data_object_create_request_headers:

.. list-table:: Request Headers - Create a CDMI Data Object using CDMI
    :class: longtable
    :header-rows: 1
    :align: center 

    * - Header
      - Type
      - Description
      - Requirement
    * - Accept
      - Header String
      - "``application/cdmi-object``" or a consistent value defined in :numref:`%s <ref_content-type_negotiation>` 
      - Optional
    * - Content-Type
      - Header String
      - "``application/cdmi-object``” or "``multipart/mixed``"

          * If "``multipart/mixed``" is specified, the body shall consist of at least two MIME parts, where the first part shall contain a body of content-type "``application/cdmi-object``", and the second and subsequent parts shall contain one or more byte ranges of the value.
          * If multiple byte ranges are included and the ``Content-Range`` header is omitted for a part, the data in the part shall be appended to the data in the preceding part, with the first part having a byte offset of zero.
      - Mandatory
    * - X-CDMI-Partial
      - Header String 
      - Indicates that the newly created object is part of a series of writes and has not yet been fully created. When set to "``true``", the ``completionStatus`` field shall be set to "``Processing``". ``X-CDMI-Partial`` works across CDMI and non-CDMI operations.
      - Optional

.. raw:: latex

          \newpage

Request Message Body
--------------------

The request message body fields for creating a data object using CDMI are shown in :numref:`tbl_cdmi_data_object_create_request_message_body`. 

.. tabularcolumns:: |>{\raggedright\arraybackslash}\Y{0.20}
                    |>{\raggedright\arraybackslash}\Y{0.10}
                    |>{\raggedright\arraybackslash}\Y{0.55}
                    |>{\raggedright\arraybackslash}\Y{0.15}|

.. _tbl_cdmi_data_object_create_request_message_body:

.. list-table:: Request Message Body - Create a Data Object using CDMI
    :class: longtable
    :header-rows: 1
    :align: center 

    * - Field Name
      - Type
      - Description
      - Requirement
    * - mimetype
      - JSON String
      - MIME type of the data contained within the value field of the data object
        
          * This field may be included when creating by value or when deserializing, serializing, copying, and moving a data object.
          * If this field is not included and multi-part MIME is not being used, the value of "``text/plain``" shall be assigned as the field value.
          * If this field is not included and multi-part MIME is being used, the value of the ``Content-Type`` header of the second MIME part shall be assigned as the field value.
          * This field shall be stored as part of the data object.
          * This field field value shall be converted to lower case before being stored. 
      - Optional
    * - metadata
      - JSON Object
      - Metadata for the data object
        
          * If this field is included, the contents of the JSON object provided in this field shall be used as data object metadata. 
          * If this field is included when deserializing, serializing, copying, or moving a data object, the contents of the JSON object provided in this field shall be used as object metadata instead of the metadata from the source URI. 
          * If this field is not included, no user-specified metadata shall be added to the object. 
          * If this field is not included when deserializing, serializing, copying, or moving a data object, metadata from the source URI shall be used. 
          * This field shall not be included when creating a reference to a data object.
      - Optional
    * - domainURI
      - JSON String
      - URI of the owning domain
        
          * If different from the parent domain, the user shall have the "``cross-domain``" privilege (see ``cdmi_member_privileges`` in :numref:`tbl_required_settings_for_domain_member_user_objects` . 
          * If not specified, the domain of the parent container shall be used. 
      - Optional
    * - deserialize
      - JSON String
      - URI of a CDMI data object with a value that contains a data object serialized as specified in :numref:`Clause %s <clause_cdmi_serialization>`. The serialized data object shall be deserialized to create the new data object.
      - Optional [#a]_
    * - serialize
      - JSON String
      - URI of a CDMI object that shall be serialized into the new data object
      - Optional [#a]_
    * - copy
      - JSON String
      - URI of a source CDMI data object or queue object that shall be copied into the new destination data object. 
        
          * If the destination data object URI and the copy source object URI both do not specify individual fields, the destination data object shall be a complete copy of the source data object. 
          * If the destination data object URI or the copy source object URI specifies individual fields, only the fields specified shall be used to create the destination data object. If specified fields are not present in the source, default field values shall be used. 
          * If the destination data object URI and the copy source object URI both specify fields, an HTTP status code of ``400 Bad Request`` shall be returned to the client. 
          * If the copy source object URI points to a queue object, as part of the copy operation, multiple queue values shall be concatenated into a single data object value. 
          * If the copy source object URI points to one or more queue object values, as part of the copy operation, the specified queue values shall be concatenated into a single data object value.
          * If there are insufficient permissions to read the data object at the source URI or create the data object at the destination URI, or if the read operation fails, the copy shall return an HTTP status code of ``400 Bad Request``, and the destination object shall not be created.
      - Optional [#a]_
    * - move
      - JSON String
      - URI of an existing local or remote CDMI data object (source URI) that shall be relocated to the URI specified in the PUT. The contents of the object, including the object ID, shall be preserved by a move, and the data object at the source URI shall be removed after the data object at the destination has been successfully created. 
      
        .. raw:: latex

          \vspace*{1ex}

        If there are insufficient permissions to read the data object at the source URI, write the data object at the destination URI, or delete the data object at the source URI, or if any of these operations fail, the move shall return an HTTP status code of ``400 Bad Request``, and the source and destination are left unchanged.
      - Optional [#a]_
    * - reference
      - JSON String
      - URI of a CDMI data object that shall be redirected to by a reference. If any other fields are supplied when creating a reference, the server shall respond with an HTTP status code of ``400 Bad Request``.
      - Optional [#a]_
    * - deserializevalue
      - JSON String
      - A data object serialized as specified in :numref:`Clause %s <clause_cdmi_serialization>` and encoded using base 64 encoding rules described in RFC 4648 :cite:`rfc4648`, that shall be deserialized to create the new data object.

          * If multi-part MIME is being used and this field contains the value of the MIME boundary parameter, the contents of the second MIME part shall be assigned as the field value. 
          * If the serialized data object in the second MIME part does not include a value field, the contents of the third MIME part shall be assigned as the field value of the value field.
      - Optional [#a]_
    * - valuetransferencoding
      - JSON String
      - The value transfer encoding used for the data object value. Three value transfer encodings are defined.
        
          * "``utf-8``" indicates that the data object contains a valid UTF-8 string, and it shall be transported as a UTF-8 string in the value field.
          * "``base64``" indicates that the data object may contain arbitrary binary sequences, and it shall be transported as a base 64-encoded string in the value field. Setting the contents of the data object value field to any value other than a valid base 64 string shall result in an HTTP status code of ``400 Bad Request`` being returned to the client.
          * "``json``" indicates that the data object contains a valid JSON object, and the ``value`` field shall be a JSON object containing valid JSON data. If the contents of the ``value`` field are set to any value other than a valid JSON object, an HTTP status code of ``400 Bad Request`` shall be returned to the client.
          * This field shall only be included when creating a data object by value.
          * If this field is not included and multi-part MIME is not being used, the value of "``utf-8``" shall be assigned as the field value.
          * If this field is not included and multi-part MIME is being used, the value of "``utf-8``" shall be assigned as the field value if the Content-Type header of the second and all MIME parts includes the charset parameter as defined in RFC 2046 of "``utf-8``" (e.g., "``;charset=utf-8``"). Otherwise, the value of "``base64``" shall be assigned as the field value. This field applies only to the encoding of the value when represented in CDMI; the ``Content-Transfer-Encoding`` header of the part specifies the encoding of the value within a multi-part MIME request, as defined in RFC 2045 :cite:`rfc2045`.
          * This field shall be stored as part of the object.
      - Optional [#a]_
    * - value
      - JSON String
      - The data object value
        
          * If this field is not included and multi-part MIME is not being used, an empty JSON String (i.e., "") shall be assigned as the field value.
          * If this field is not included and multi-part MIME is being used, the contents of the second MIME part shall be assigned as the field value.
          * If the ``valuetransferencoding`` field indicates UTF-8 encoding, the value shall be a UTF-8 string escaped using the JSON escaping rules described in RFC 4627 :cite:`rfc4627`.
          * If the ``valuetransferencoding`` field indicates base 64 encoding, the value shall be first encoded using the base 64 encoding rules described in RFC 4648 :cite:`rfc4648`.
          * If the ``valuetransferencoding`` field indicates JSON encoding, the value shall contain a valid JSON object.
      - Optional [#a]_

.. [#a] Only one of these fields shall be specified in any given operation. Except for value, these fields shall not be stored. If more than one of these fields is supplied, the server shall respond with an HTTP status code of ``400 Bad Request``.

.. raw:: latex

          \newpage

Response Headers
----------------

The HTTP response headers for creating a data object using CDMI are shown in :numref:`tbl_cdmi_data_object_create_response_headers`.

.. tabularcolumns:: |>{\raggedright\arraybackslash}\Y{0.20}
                    |>{\raggedright\arraybackslash}\Y{0.10}
                    |>{\raggedright\arraybackslash}\Y{0.55}
                    |>{\raggedright\arraybackslash}\Y{0.15}|

.. _tbl_cdmi_data_object_create_response_headers:

.. list-table:: Response Headers - Create a Data Object using CDMI
    :header-rows: 1
    :align: center 

    * - Header
      - Type
      - Description
      - Requirement
    * - Content-Type
      - Header String
      - "``application/cdmi-object``"
      - Mandatory
    * - Location
      - Header String
      - When an HTTP status code of ``202 Accepted`` is returned, the server shall respond with the absolute URL of the object that is in the process of being created.
      - Conditional


Response Message Body
---------------------

The response message body fields for creating a data object using CDMI are shown in :numref:`tbl_cdmi_data_object_create_response_message_body`.

.. tabularcolumns:: |>{\raggedright\arraybackslash}\Y{0.20}
                    |>{\raggedright\arraybackslash}\Y{0.10}
                    |>{\raggedright\arraybackslash}\Y{0.55}
                    |>{\raggedright\arraybackslash}\Y{0.15}|

.. _tbl_cdmi_data_object_create_response_message_body:

.. list-table:: Response Message Body - Create a Data Object using CDMI
    :class: longtable
    :header-rows: 1
    :align: center 

    * - Field Name
      - Type
      - Description
      - Requirement
    * - objectType
      - JSON String
      - "``application/cdmi-object``"
      - Mandatory
    * - objectID
      - JSON String
      - Object ID of the object
      - Mandatory
    * - objectName
      - JSON String
      - Name of the object
      - Mandatory
    * - parentURI
      - JSON String
      - URI for the parent object. 
      
        .. raw:: latex

          \vspace*{1ex}

        Appending the objectName to the parentURI shall always produce a valid URI for the object. 
      - Mandatory
    * - parentID
      - JSON String
      - Object ID of the parent container object
      - Mandatory
    * - domainURI
      - JSON String
      - URI of the owning domain
      - Mandatory
    * - capabilitiesURI
      - JSON String
      - URI to the capabilities for the object
      - Mandatory
    * - completionStatus
      - JSON String
      - A string indicating if the object is still in the process of being created or updated by another operation, and after that operation is complete, indicates if it was successfully created or updated or if an error occurred.
      
        .. raw:: latex

          \vspace*{1ex}

        The value shall be the string "``Processing``", the string "``Complete``", or an error string starting with the value "``Error``".
      - Mandatory
    * - percentComplete
      - JSON String
      - A string indicating the percentage of completion if the object is still in the process of bewing created or updated by another operation.

        * When the value of ``completionStatus`` is "``Processing``", this field, if provided, shall indicate the percentage of completion as a numeric integer value from "``0``" through "``100``". 
        * When the value of ``completionStatus`` is "``Complete``", this field, if provided, shall contain the value "``100``". 
        * When the value of ``completionStatus`` is "``Error``", this field, if provided, may contain any integer value from "``0``" through "``100``".
      - Optional
    * - mimetype
      - JSON String
      - MIME type of the value of the data object
      - Mandatory
    * - metadata
      - JSON Object
      - Metadata for the data object. This field includes any user and data system metadata specified in the request body metadata field, 
        along with storage system metadata generated by the cloud storage system. See :numref:`Clause %s <clause_cdmi_metadata>` for a further description of metadata.
      - Mandatory

      
Response Status
---------------

The HTTP status codes that occur when creating a data object using CDMI are described in :numref:`tbl_cdmi_data_object_create_response_status`.

.. tabularcolumns:: |>{\raggedright\arraybackslash}\Y{0.30}
                    |>{\raggedright\arraybackslash}\Y{0.70}|

.. _tbl_cdmi_data_object_create_response_status:

.. list-table:: HTTP Status Codes - Create a Data Object using CDMI 
    :header-rows: 1
    :align: center 

    * - HTTP Status
      - Description
    * - ``201 Created``
      - The new data object was created.
    * - ``202 Accepted``
      - The data object is in the process of being created. The CDMI client should monitor the ``completionStatus`` and ``percentComplete`` fields to determine the current status of the operation.
    * - ``400 Bad Request``
      - The request contains invalid parameters or field names.
    * - ``401 Unauthorized``
      - The authentication credentials are missing or invalid.
    * - ``403 Forbidden``
      - The client lacks the proper authorization to perform this request.
    * - ``404 Not Found``
      - The resource was not found at the specified URI.
    * - ``409 Conflict``
      - The operation conflicts with a non-CDMI access protocol lock or may cause a state transition error on the server.


Examples
--------

EXAMPLE 1: PUT to the container URI the data object name and contents:

   .. code-block:: none

       PUT /MyContainer/MyDataObject.txt HTTP/1.1
       Host: cloud.example.com
       Accept: application/cdmi-object
       Content-Type: application/cdmi-object

       {
           "mimetype" : "text/plain",
           "metadata" : {
               
           },
           "value" : "This is the Value of this Data Object"
       }

   The following shows the response.

   .. code-block:: none

       HTTP/1.1 201 Created
       Content-Type: application/cdmi-object
       
       {
           "objectType" : "application/cdmi-object",
           "objectID" : "00007ED90010D891022876A8DE0BC0FD",
           "objectName" : "MyDataObject.txt",
           "parentURI" : "/MyContainer/",
           "parentID" : "00007E7F00102E230ED82694DAA975D2", 
           "domainURI" : "/cdmi_domains/MyDomain/",
           "capabilitiesURI" : "/cdmi_capabilities/dataobject/",
           "completionStatus" : "Complete",
           "mimetype" : "text/plain",
           "metadata" : {
               "cdmi_size" : "37" 
           }
       }


EXAMPLE 2: PUT to the container URI the data object name and binary contents:

   .. code-block:: none

       PUT /MyContainer/MyDataObject.txt HTTP/1.1 
       Host: cloud.example.com 
       Accept: application/cdmi-object 
       Content-Type: application/cdmi-object 

       {
          "mimetype" : "text/plain", 
          "metadata" : { }, 
          "valuetransferencoding" : "base64"
          "value" : "VGhpcyBpcyB0aGUgVmFsdWUgb2YgdGhpcyBEYXRhIE9iamVjdA=="
       }

   The following shows the response.

   .. code-block:: none

       HTTP/1.1 201 Created 
       Content-Type: application/cdmi-object 

       {
          "objectType": "application/cdmi-object",
          "objectID": "00007ED9001008C174ABCE6AC3287E5F",
          "objectName": "MyDataObject.txt",
          "parentURI": "/MyContainer/",
          "parentID" : "00007E7F00102E230ED82694DAA975D2", 
          "domainURI": "/cdmi_domains/MyDomain/",
          "capabilitiesURI": "/cdmi_capabilities/dataobject/",
          "completionStatus": "Complete",
          "mimetype": "text/plain",
          "metadata": {
              "cdmi_size": "37"
          }
       }

EXAMPLE 3: PUT to the container URI the data object name and binary contents using multi-part MIME:

   .. code-block:: none

       PUT /MyContainer/MyDataObject.txt HTTP/1.1 
       Host: cloud.example.com 
       Accept: application/cdmi-object 
       Content-Type: multipart/mixed; boundary=gc0p4Jq0M2Yt08j34c0p

       --gc0p4Jq0M2Yt08j34c0p
       Content-Type: application/cdmi-object 
       
       {
           "domainURI": "/cdmi_domains/MyDomain/",
           "metadata": {
               "colour": "blue"
           }
       }

       --gc0p4Jq0M2Yt08j34c0p
       Content-Type: application/octet-stream 
       Content-Transfer-Encoding: binary

       <37 bytes of binary data>
       
       --gc0p4Jq0M2Yt08j34c0p--


   The following shows the response.

   .. code-block:: none
       
       HTTP/1.1 201 Created 
       Content-Type: application/cdmi-object 

       {
          "objectType": "application/cdmi-object", 
          "objectID": "00007ED900103ADE9DE3A8D1CF5436A3", 
          "objectName": "MyDataObject.txt", 
          "parentURI": "/MyContainer/", 
          "parentID" : "00007E7F00102E230ED82694DAA975D2", 
          "domainURI": "/cdmi_domains/MyDomain/", 
          "capabilitiesURI": "/cdmi_capabilities/dataobject/", 
          "completionStatus": "Complete", 
          "mimetype": "application/octet-stream", 
          "metadata": {
             "cdmi_size": "37",
             "colour": "blue",
             ...
          }
       }


EXAMPLE 4: PUT to the container URI the data object name and binary contents using multi-part MIME with optional content-lengths for the parts:

   .. code-block:: none

       PUT /MyContainer/MyDataObject.txt HTTP/1.1 
       Host: cloud.example.com 
       Accept: application/cdmi-object 
       Content-Type: multipart/mixed; boundary=gc0p4Jq0M2Yt08j34c0p

       --gc0p4Jq0M2Yt08j34c0p
       Content-Type: application/cdmi-object 
       Content-Length: 82

       {
          "domainURI": "/cdmi_domains/MyDomain/",
          "metadata": {
              "colour": "blue"
          }
       }
       
       --gc0p4Jq0M2Yt08j34c0p
       Content-Type: application/octet-stream 
       Content-Transfer-Encoding: binary
       Content-Length: 37
       
       <37 bytes of binary data>
       
       --gc0p4Jq0M2Yt08j34c0p--


   The following shows the response.

   .. code-block:: none

       HTTP/1.1 201 Created 
       Content-Type: application/cdmi-object 

       {
          "objectType": "application/cdmi-object", 
          "objectID": "00007ED900103ADE9DE3A8D1CF5436A3", 
          "objectName": "MyDataObject.txt", 
          "parentURI": "/MyContainer/", 
          "parentID" : "00007E7F00102E230ED82694DAA975D2", 
          "domainURI": "/cdmi_domains/MyDomain/", 
          "capabilitiesURI": "/cdmi_capabilities/dataobject/", 
          "completionStatus": "Complete", 
          "mimetype": "application/octet-stream", 
          "metadata": {
              "cdmi_size": "37",
              "colour": "blue",
          }
      }

EXAMPLE 5: PUT to the container URI the data object name and JSON contents:

   .. code-block:: none

      PUT /MyContainer/MyDataObject.txt HTTP/1.1
      Host: cloud.example.com
      Accept: application/cdmi-object
      Content-Type: application/cdmi-object

      {
        "mimetype" : "text/plain",
        "metadata" : { },
        "valuetransferencoding" : "json"
        "value" : {
            "test" : "value"
        }
      }

   The following shows the response.

   .. code-block:: none

       HTTP/1.1 201 Created 
       Content-Type: application/cdmi-object 

       {
          "objectType": "application/cdmi-object", 
          "objectID": "0000706D0010374085EF1A5C7018D774", 
          "objectName": "MyDataObject.txt",
          "parentURI": "/MyContainer/",
          "parentID" : "00007ED90010067404EDED32860C086A",
          "domainURI": "/cdmi_domains/MyDomain/",
          "capabilitiesURI": "/cdmi_capabilities/dataobject/",
          "completionStatus": "Complete",
          "mimetype": "text/plain",
          "metadata": {
               "cdmi_size": "21"
          }
      }

	   
EXAMPLE 6: PUT to the container URI to create an encrypted object:

	.. code-block:: none
	
		PUT /MyContainer/MyEncryptedObject.txt HTTP/1.1
		Host: cloud.example.com
		Content-Type: application/cdmi-object

		{
		 "mimetype" : "application/cms",
		 "metadata" : {
		 "cdmi_enc_key_id" : "testkey"
		 },
		 "valuetransferencoding" : "base64"
		 "value" : "<CMS Encrypted Object in Base64>"
		}

	The following shows the response:

	.. code-block:: none
	
		HTTP/1.1 201 Created

EXAMPLE 7: PUT to the container URI to create an encrypted object:

	.. code-block:: none
		
		PUT /MyContainer/MyEncryptedObject2.txt HTTP/1.1
		Host: cloud.example.com
		Content-Type: application/cdmi-object

		{
		 "mimetype" : "application/jose+json",
		 "metadata" : {
		 "cdmi_enc_key_id" : "77c7e2b8-6e13-45cf-8672-617b5b45243a"
		 },
		 "valuetransferencoding" : "json",
		 "value" : {
		 "protected": "eyJhbGciOiJkaXIiLCJraWQiOiI3N2M3ZTJi
					   OC02ZTEzLTQ1Y2YtODY3Mi02MTdiNWI0NTI0
					   M2EiLCJlbmMiOiJBMTI4R0NNIn0",
		 "iv": "refa467QzzKx6QAB",
		 "ciphertext": "JW_i_f52hww_ELQPGaYyeAB6HYGcR559l9T
						YnSovc23XJoBcW29rHP8yZOZG7YhLpT1bjF
						uvZPjQS-m0IFtVcXkZXdH_lr_FrdYt9HRUY
						kshtrMmIUAyGmUnd9zMDB2n0cRDIHAzFVeJ
						UDxkUwVAE7_YGRPdcqMyiBoCO-FBdE-Nceb
						4h3-FtBP-c_BIwCPTjb9o0SbdcdREEMJMyZ
						BH8ySWMVi1gPD9yxi-aQpGbSv_F9N4IZAxs
						cj5g-NJsUPbjk29-s7LJAGb15wEBtXphVCg
						yy53CoIKLHHeJHXex45Uz9aKZSRSInZI-wj
						sY0yu3cT4_aQ3i1o-tiE-F8Ios61EKgyIQ4
						CWao8PFMj8TTnp",
		 "tag": "vbb32Xvllea2OtmHAdccRQ",
		 "cty": "text/plain"
		 }
		}

	The following shows the response:

	.. code-block:: none
		
		HTTP/1.1 201 Created
